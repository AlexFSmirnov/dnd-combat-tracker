{"version":3,"sources":["helpers/dnd-beyond/getCharacterStats.ts","helpers/getRequestErrorMessage.tsx","redux/actions/ui/actionCreators.ts","redux/actions/ui/types.ts","redux/actions/characters/actionCreators.ts","redux/actions/characters/types.ts","redux/reducers/characters.ts","redux/actions/npcs/actionCreators.tsx","redux/actions/npcs/types.ts","redux/reducers/npcs.ts","redux/reducers/ui.ts","redux/actions/encounter/actionCreators.ts","redux/actions/encounter/types.ts","components/Frame/style.ts","components/Frame/svg/square.tsx","components/Frame/svg/scroll.tsx","components/Frame/svg/fancy.tsx","components/Frame/Frame.tsx","components/EntityListItem/style.ts","components/EntityListItem/EntityListItem.tsx","helpers/sortEntitiesWithInitiative.ts","redux/reducers/encounter.ts","redux/reducers/index.ts","redux/index.ts","components/LoadingView/style.ts","components/LoadingView/LoadingView.tsx","components/Navbar/style.ts","components/Navbar/Navbar.tsx","components/Tooltip/Tooltip.tsx","components/EntityList/style.ts","components/EntityList/EntityList.tsx","components/Numpad/style.ts","components/Numpad/Numpad.tsx","components/Notes/style.ts","components/Notes/Notes.tsx","components/RootComponent/style.ts","components/DividedList/style.tsx","components/DividedList/DividedList.tsx","components/SavedCharacterListItem/style.ts","components/SavedCharacterListItem/SavedCharacterListItem.tsx","components/SavedCharactersList/SavedCharactersList.tsx","components/SavedNPCListItem/style.ts","components/SavedNPCListItem/SavedNPCListItem.tsx","components/SavedNPCsList/SavedNPCsList.tsx","components/NewEncCharacterListItem/style.ts","components/NewEncCharacterListItem/NewEncCharacterListItem.tsx","components/NewEncCharactersList/NewEncCharactersList.tsx","components/NewEncNPCListItem/style.ts","components/NewEncNPCListItem/NewEncNPCListItem.tsx","components/NewEncNPCsList/NewEncNPCsList.tsx","components/TextNotes/style.ts","components/TextNotes/TextNotes.tsx","components/AnimatedImage/style.ts","components/AnimatedImage/AnimatedImage.tsx","components/RootComponent/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCharacterStats","a","characterId","jsonUrl","axios","method","url","withCredentials","response","data","getRequestErrorMessage","error","status","Fragment","message","Link","href","openErrorDialog","type","payload","addCharacterByUrl","maxHitPoints","dispatch","getState","split","length","characters","every","c","id","toString","then","stats","name","removedHitPoints","temporaryHitPoints","deathSaves","avatarUrl","themeColor","defaultBackdrop","addCharacter","updateCharacterById","parseInt","find","updateCharacter","character","initialState","state","action","prevCharacter","index","indexOf","slice","updateMaxHpById","maxHp","deleteById","addNPC","npc","updateNPC","props","deleteNPC","originalNPC","updatedNPC","errorDialog","isOpen","updateNPCHitPoints","key","update","temp","FrameContainer","styled","div","FrameTopRowContainer","FrameMiddleRowContainer","FrameBottomRowContainer","FrameMiddleFill","width","height","backgroundColor","CornerBaseStyles","css","TopLeftCornerStyles","TopRightCornerStyles","BottomLeftCornerStyles","BottomRightCornerStyles","TopStyles","BottomStyles","LeftStyles","RightStyles","getSquarePart","transform","color","className","data-name","xmlns","viewBox","style","fill","zIndex","transition","d","boxShadow","SquareCorner","SquareSide","getScrollPart","points","ScrollCorner","ScrollTop","ScrollSide","FancyCorner","FancySide","frameFactory","partSize","Corner","Top","Side","FrameTopLeftCorner","FrameTopRightCorner","FrameBottomLeftCorner","FrameBottomRightCorner","FrameTop","FrameBottom","FrameLeft","FrameRight","forceUpdateProp","containerRef","useRef","useState","topPartWidth","setTopPartWidth","sidePartHeight","setSidePartHeight","useEffect","window","addEventListener","handleResize","removeEventListener","container","current","Math","max","clientWidth","clientHeight","framePartProps","ref","SquareFrame","borderTop","boxSizing","ScrollFrame","FancyFrame","EntityType","EntityListItemScrollContainer","small","EntityListItemContainer","EntityListItemWrapper","AvatarWrapper","Avatar","AvatarMui","NameAndSavesContainer","Name","SavesContainer","HitPointsContainer","onClick","HitPoints","HitPointMenuContentWrapper","HitPointMenuButtonWrapper","connect","selectedKey","encounter","selectedEntityKey","selectEntity","entityKey","theme","useTheme","useMediaQuery","breakpoints","down","menuAnchorElement","setMenuAnchorElement","menuInputValue","setMenuInputValue","isSelected","useMemo","CHARACTER","closeMenu","NPC","palette","secondary","main","src","variant","e","currentTarget","undefined","Menu","anchorEl","open","onClose","marginTop","TextField","label","autoFocus","value","onChange","target","Button","updateHP","isNaN","abs","ThemeProvider","createMuiTheme","primary","sortEntitiesWithInitiative","npcs","initiativeById","currentTurnKey","sortedByInitiative","keys","forEach","keyString","initiative","push","entity","sort","e1","e2","shift","currentId","currentTurnInitiative","currentRound","npcHitPoints","characterNumber","filter","startsWith","npcNumber","removeCharacter","characterKey","findKey","omit","removeNPC","addedNPCsKeys","latestAddedNpc","reduce","accumulator","number","splitByHash","updateCharacterInitiative","updateNPCInitiative","npcKeys","npcInitiatives","recalculateCurrentTurnKey","findMaxInitiative","maxInitiative","characterInitiative","npcKey","npcInitiative","findWithInitiative","keyWithInitiative","nextTurn","sortedEntities","round","prevTurn","newTemp","newRemoved","min","rootReducer","combineReducers","ui","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","LoadingViewBackground","LoadingViewContainer","LoadingViewImage","img","LoadingViewText","LoadingView","process","NavbarContainer","Navbar","children","other","AppBar","position","minHeight","Toolbar","paddingLeft","paddingRight","withStyles","tooltip","fontSize","arrow","Tooltip","EntityListContainer","fullScreen","short","EntityListWrapper","EntityListFade","EntityListTopFade","EntityListBottomFade","entitiesByInitiative","map","entityListItemProps","NumpadFrameContainer","NumpadContainer","NumpadValueContainer","NumpadValueWrapper","NumpadValue","NumpadButtonContainer","NumpadButtonValueContainer","NumpadButtonValue","NumpadButton","padding","setBackgroundColor","setTimeout","currentValue","setCurrentValue","handleButtonClick","v","handleSubmit","sign","KeyboardArrowDown","KeyboardArrowUp","NotesContainer","NotesCanvas","canvas","Notes","canvasRef","prevPointerPosition","canvasSize","setCanvasSize","updateCanvasSize","getBoundingClientRect","canvasProps","onPointerMove","ctx","getContext","pressure","buttons","clientX","clientY","x","y","lineThickness","beginPath","moveTo","lineTo","lineWidth","stroke","onPointerUp","RootComponentContainer","RootComponentWrapper","ContentContainer","ListAndNumpadContainer","DividedListContainer","DividedListWrapper","DividedListSublistContainer","Divider","marginTopOverride","marginBottomOverride","DividedList","titles","Typography","React","cloneElement","child","SavedCharacterListItemContainer","Grow","updateCharacterMaxHp","deleteCharacter","setMaxHp","isDialogOpen","setIsDialogOpen","closeConfirmationDialog","Paper","elevation","IconButton","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","isNewCharacterDialogOpen","setIsNewCharacterDailogOpen","characterURL","setCharacterURL","characterMaxHitPoints","setCharacterMaxHitPoints","closeNewCharacterDialog","fullWidth","margin","disabled","SavedNPCListItemContainer","updateNPCSafe","n","isEditDialogOpen","setIsEditDialogOpen","isDeleteConfirmationDialogOpen","setIsDeleteConfirmationDialogOpen","NPCName","setNPCName","NPCMaxHitPoints","setNPCMaxHitPoints","NPCAvatarUrl","setNPCAvatarUrl","closeEditDialog","closeDeleteConfirmationDialog","Edit","addNPCSafe","isNewNPCDialogOpen","setIsNewNPCDialogOpen","closeNewNPCDialog","NewEncCharacterListItemContainer","addCharacterToEncounter","removeCharacterFromEncounter","setInitiative","isCharacterSelected","Object","some","k","savedInitiative","textFieldProps","initiativeInt","Checkbox","checked","flexGrow","NewEncNPCListItemContainer","NewEncNPCCounter","addNPCToEncounter","removeNPCFromEncounter","addedNPCCount","count","encNpc","handleRemoveClick","handleAddClick","i","size","Remove","Add","TextNotesContainer","TextNotesTextFieldWrapper","TextNotes","multiline","rows","Image","opacity","AnimatedImage","transitionDuration","firstImageRef","secondImageRef","setOpacity","firstImageSrc","setFirstImageSrc","secondImageSrc","setSecondImageSrc","firstImage","secondImage","requestAnimationFrame","isErrorDialogOpen","errorMessage","closeErrorDialog","resetEncounter","createEncounter","isCharacterDialogOpen","setIsCharacterDialogOpen","isNewEncounterDialogOpen","setIsNewEncounterDialogOpen","isCreatingNewEncounter","setIsCreatingNewEncounter","isFullscreen","setIsFullscreen","canNewEncounterBeCreated","allCharactersHaveInitiative","id2","allNpcsHaveInitiative","currentBackgroundUrl","currentCharacter","largeBackdropAvatarUrl","closeCharacterDialog","closeNewEncounterDialog","event","MoreVert","flex","title","Send","disableElevation","endIcon","MenuItem","People","marginRight","HighlightOff","document","exitFullscreen","element","documentElement","requestFullscreen","toggleFullscreen","FullscreenExit","Fullscreen","Close","marginLeft","SavedNPCsList","maxWidth","typography","fontFamily","values","xs","sm","md","lg","xl","App","loading","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1da31c0c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { DnDBeyondCharacter } from './types';\n\nexport interface GetCharacterStatsProps {\n    characterId: string;\n}\n\nexport interface CharacterStats {\n    currentHp: number;\n    maxHp: number;\n    tempHp: number;\n    armorClass: number;\n    passivePerception: number;\n}\n\nconst getCharacterStats = async ({ characterId }: GetCharacterStatsProps): Promise<DnDBeyondCharacter> => {\n    const jsonUrl = `https://www.dndbeyond.com/character/${characterId}/json`;\n\n    const response = await axios({ method: 'GET', url: jsonUrl, withCredentials: false });\n    return response.data as DnDBeyondCharacter;\n};\n\nexport default getCharacterStats;\n","import React from 'react';\r\nimport { AxiosError } from 'axios';\r\nimport { Link } from '@material-ui/core';\r\n\r\nexport const getRequestErrorMessage = (error: AxiosError): JSX.Element => {\r\n    if (error.response) {\r\n        switch (error.response.status) {\r\n        case 404:\r\n            return (\r\n                <React.Fragment>\r\n                    Invalid character URL, page not found. Make sure that the ID is correct and that character privacy is set to \"Public\".\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n        \r\n        case 403:\r\n            return (\r\n                <React.Fragment>\r\n                    D&D Beyond blocked a request because it thinks I'm a robot. Opening <Link href=\"https://www.dndbeyond.com/\">dndbeyond.com</Link> in Incognito mode and passing the captcha there usually helps.\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <React.Fragment>\r\n                    Request was unsuccessful. Most likely your browser is blocking Cross-Origin requests (CORS). Make sure you have a CORS-allowing extension installed or disable D&D Beyond integration in settings.\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            Request was unsuccessful. Most likely your browser is blocking Cross-Origin requests (CORS). Make sure you have a CORS-allowing extension installed or disable D&D Beyond integration in settings.\r\n            <br /><br />\r\n            Error message: {error.message}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n} from './types';\r\n\r\nexport const openErrorDialog = (message: JSX.Element) => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: message,\r\n});\r\n\r\nexport const closeErrorDialog = () => ({\r\n    type: ERROR_DIALOG_CLOSED,\r\n});\r\n\r\nexport const openCorsDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Cors blah blah',\r\n});\r\n\r\nexport const openCaptchaDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Captcha kekaptcha',\r\n});\r\n","export const CORS_DIALOG_OPENED = 'CORS_DIALOG_OPENED';\r\nexport const CORS_DIALOG_CLOSED = 'CORS_DIALOG_CLOSED';\r\nexport const CAPTCHA_DIALOG_OPENED = 'CAPTCHA_DIALOG_OPENED';\r\nexport const CAPTCHA_DIALOG_CLOSED = 'CAPTCHA_DIALOG_CLOSED';\r\nexport const ERROR_DIALOG_OPENED = 'ERROR_DIALOG_OPENED';\r\nexport const ERROR_DIALOG_CLOSED = 'ERROR_DIALOG_CLOSED';\r\n\r\nexport interface CorsDialogOpenedAction {\r\n    type: typeof CORS_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CorsDialogClosedAction {\r\n    type: typeof CORS_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface CaptchaDialogOpenedAction {\r\n    type: typeof CAPTCHA_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CaptchaDialogClosedAction {\r\n    type: typeof CAPTCHA_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface ErrorDialogOpenedAction {\r\n    type: typeof ERROR_DIALOG_OPENED;\r\n    payload: JSX.Element;\r\n}\r\n\r\nexport interface ErrorDialogClosedAction {\r\n    type: typeof ERROR_DIALOG_CLOSED;\r\n}\r\n\r\nexport type UIActionType = CorsDialogOpenedAction | CorsDialogClosedAction | CaptchaDialogOpenedAction | CaptchaDialogClosedAction | ErrorDialogOpenedAction | ErrorDialogClosedAction;\r\n","import { Dispatch } from 'redux';\r\nimport { getCharacterStats } from '../../../helpers/dnd-beyond';\r\nimport { getRequestErrorMessage } from '../../../helpers/getRequestErrorMessage';\r\nimport { State, Character } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport { CHARACTER_ADDED, CHARACTER_UPDATED, CHARACTER_MAX_HP_UPDATED, CHARACTER_FETCH_FAILED, CHARACTER_ALREADY_EXISTS, CHARACTER_DELETED } from './types';\r\n\r\nexport const addCharacterByUrl = (url: string, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const characterId = url.split('/')[url.split('/').length - 1];\r\n    const { characters } = getState();\r\n    if (characters && characters.every(c => c.id.toString() !== characterId)) {\r\n        getCharacterStats({ characterId }).then(\r\n            stats => {\r\n                const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                const character: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                dispatch(addCharacter(character));\r\n            },\r\n            (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n        );\r\n    } else {\r\n        dispatch(updateCharacterById(parseInt(characterId), maxHitPoints));\r\n    }\r\n};\r\n\r\nexport const updateCharacterById = (id: number, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { characters } = getState();\r\n    if (characters) {\r\n        const character = characters.find(c => c.id === id);\r\n        if (character) {\r\n            getCharacterStats({ characterId: id.toString() }).then(\r\n                stats => {\r\n                    const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                    const updatedCharacter: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                    dispatch(updateCharacter(id, updatedCharacter));\r\n                },\r\n                (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n            );\r\n        } else {\r\n            dispatch(addCharacterByUrl(id.toString(), maxHitPoints));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addCharacter = (character: Character) => ({\r\n    type: CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateCharacter = (id: number, character: Character) => ({\r\n    type: CHARACTER_UPDATED,\r\n    payload: { id, character },\r\n});\r\n\r\nexport const updateCharacterMaxHp = (id: number, maxHp: number) => ({\r\n    type: CHARACTER_MAX_HP_UPDATED,\r\n    payload: { id, maxHp },\r\n}); \r\n\r\nexport const deleteCharacter = (id: number) => ({\r\n    type: CHARACTER_DELETED,\r\n    payload: { id },\r\n});\r\n\r\nexport const characterFetchFailed = (error: string) => ({\r\n    type: CHARACTER_FETCH_FAILED,\r\n    error,\r\n});\r\n\r\nexport const characterAlreadyExists = () => ({\r\n    type: CHARACTER_ALREADY_EXISTS,\r\n});\r\n","import { Character } from '../../types';\r\n\r\nexport const CHARACTER_ADDED = 'CHARACTER_ADDED';\r\nexport const CHARACTER_UPDATED = 'CHARACTER_UPDATED';\r\nexport const CHARACTER_MAX_HP_UPDATED = 'CHARACTER_MAX_HP_UPDATED';\r\nexport const CHARACTER_DELETED = 'CHARACTER_DELETED';\r\n\r\nexport const CHARACTER_FETCH_FAILED = 'CHARACTER_FETCH_FAILED';\r\nexport const CHARACTER_ALREADY_EXISTS = 'CHARACTER_ALREADY_EXISTS';\r\n\r\nexport interface CharacterAddedAction {\r\n    type: typeof CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface CharacterUpdatedAction {\r\n    type: typeof CHARACTER_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        character: Character;\r\n    };\r\n}\r\n\r\nexport interface CharacterMaxHpUpdatedAction {\r\n    type: typeof CHARACTER_MAX_HP_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        maxHp: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterDeletedAction {\r\n    type: typeof CHARACTER_DELETED;\r\n    payload: {\r\n        id: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterFetchFailedAction {\r\n    type: typeof CHARACTER_FETCH_FAILED;\r\n    error: string;\r\n}\r\n\r\nexport interface CharacterAlreadyExistsAction {\r\n    type: typeof CHARACTER_ALREADY_EXISTS;\r\n}\r\n\r\nexport type CharacterActionType =\r\n    CharacterAddedAction |\r\n    CharacterUpdatedAction |\r\n    CharacterMaxHpUpdatedAction |\r\n    CharacterDeletedAction | \r\n    CharacterFetchFailedAction |\r\n    CharacterAlreadyExistsAction;\r\n","import { Character } from '../types';\r\nimport {\r\n    CHARACTER_ADDED,\r\n    CHARACTER_UPDATED,\r\n    CHARACTER_MAX_HP_UPDATED,\r\n    CHARACTER_DELETED,\r\n    CHARACTER_FETCH_FAILED,\r\n    CHARACTER_ALREADY_EXISTS,\r\n    CharacterUpdatedAction,\r\n    CharacterMaxHpUpdatedAction,\r\n    CharacterActionType,\r\n    CharacterDeletedAction,\r\n} from '../actions/characters';\r\n\r\nexport type CharactersState = Character[];\r\n\r\nconst initialState: CharactersState = [];\r\n\r\nconst updateCharacterById = (state: CharactersState, action: CharacterUpdatedAction) => {\r\n    const { id, character } = action.payload;\r\n    const prevCharacter = state.find(c => c.id === id);\r\n    if (prevCharacter) {\r\n        const index = state.indexOf(prevCharacter);\r\n        return [...state.slice(0, index), character, ...state.slice(index + 1)];\r\n    }\r\n    return [...state, character];\r\n};\r\n\r\nconst updateMaxHpById = (state: CharactersState, action: CharacterMaxHpUpdatedAction) => {\r\n    const { id, maxHp } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), { ...character, maxHitPoints: maxHp }, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst deleteById = (state: CharactersState, action: CharacterDeletedAction) => {\r\n    const { id } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const characters = (state = initialState, action: CharacterActionType) => {\r\n    switch (action.type) {\r\n    case CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case CHARACTER_UPDATED:\r\n        return updateCharacterById(state, action);\r\n\r\n    case CHARACTER_MAX_HP_UPDATED:\r\n        return updateMaxHpById(state, action);\r\n\r\n    case CHARACTER_DELETED:\r\n        return deleteById(state, action);\r\n\r\n    case CHARACTER_ALREADY_EXISTS:\r\n    case CHARACTER_FETCH_FAILED:\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { NPC, State } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n} from './types';\r\n\r\nexport const addNPCSafe = (npc: NPC) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { npcs } = getState();\r\n    if (npcs && npcs.find(n => n.name === npc.name)) {\r\n        dispatch(openErrorDialog(<>NPC with this name already exists.</>));\r\n    } else {\r\n        dispatch(addNPC(npc));\r\n    }\r\n};\r\n\r\nexport const addNPC = (npc: NPC) => ({\r\n    type: NPC_ADDED,\r\n    payload: npc,\r\n});\r\n\r\nexport const deleteNPC = (npc: NPC) => ({\r\n    type: NPC_DELETED,\r\n    payload: npc,\r\n});\r\n\r\nexport interface UpdateNPCProps {\r\n    originalNPC: NPC;\r\n    updatedNPC: NPC;\r\n}\r\n\r\nexport const updateNPCSafe = (props: UpdateNPCProps) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { npcs } = getState();\r\n    const { originalNPC, updatedNPC } = props;\r\n    if (npcs && (originalNPC.name !== updatedNPC.name) && npcs.find(n => n.name === updatedNPC.name)) {\r\n        dispatch(openErrorDialog(<>NPC with this name already exists.</>));\r\n    } else {\r\n        dispatch(updateNPC(props));\r\n    }\r\n};\r\n\r\nexport const updateNPC = (props: UpdateNPCProps) => ({\r\n    type: NPC_UPDATED,\r\n    payload: props,\r\n});\r\n","import { NPC } from '../../types';\r\n\r\nexport const NPC_ADDED = 'NPC_ADDED';\r\nexport const NPC_DELETED = 'NPC_DELETED';\r\nexport const NPC_UPDATED = 'NPC_UPDATED';\r\n\r\nexport interface NPCAddedActionType {\r\n    type: typeof NPC_ADDED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCDeletedActionType {\r\n    type: typeof NPC_DELETED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCUpdatedActionType {\r\n    type: typeof NPC_UPDATED;\r\n    payload: { \r\n        originalNPC: NPC;\r\n        updatedNPC: NPC;\r\n    };\r\n}\r\n\r\nexport type NPCActionType = NPCAddedActionType | NPCDeletedActionType | NPCUpdatedActionType;\r\n","import { NPC } from '../types';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n    NPCActionType,\r\n    NPCDeletedActionType,\r\n    NPCUpdatedActionType,\r\n} from '../actions/npcs';\r\n\r\nexport type NPCState = NPC[];\r\n\r\nconst initialState: NPCState = [];\r\n\r\nconst deleteNPC = (state: NPCState, action: NPCDeletedActionType) => {\r\n    const { payload: npc } = action;\r\n    const index = state.indexOf(npc);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst updateNPC = (state: NPCState, action: NPCUpdatedActionType) => {\r\n    const { payload: { originalNPC, updatedNPC } } = action;\r\n    const index = state.indexOf(originalNPC);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), updatedNPC, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const npcs = (state = initialState, action: NPCActionType) => {\r\n    switch (action.type) {\r\n    case NPC_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case NPC_DELETED:\r\n        return deleteNPC(state, action);\r\n\r\n    case NPC_UPDATED:\r\n        return updateNPC(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n    UIActionType,\r\n} from '../actions/ui';\r\n\r\nexport type UIState = {\r\n    errorDialog: {\r\n        isOpen: boolean;\r\n        message?: JSX.Element;\r\n    };\r\n};\r\n\r\nconst initialState: UIState = { \r\n    errorDialog: {\r\n        isOpen: false,\r\n    },\r\n};\r\n\r\nexport const ui = (state = initialState, action: UIActionType) => {\r\n    switch (action.type) {\r\n    case ERROR_DIALOG_OPENED:\r\n        if (!state.errorDialog.isOpen) {\r\n            return {...state, errorDialog: { isOpen: true, message: action.payload }};\r\n        }\r\n        return state;\r\n\r\n    case ERROR_DIALOG_CLOSED:\r\n        return {...state, errorDialog: { isOpen: false, message: state.errorDialog.message }};\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","import { Character, NPC } from '../../types';\r\nimport { ENC_CHARACTER_ADDED, ENC_NPC_ADDED, ENC_CHARACTER_REMOVED, ENC_NPC_REMOVED, ENC_RESET, ENC_CHARACTER_INITIATIVE_UPDATED, ENC_NPC_INITIATIVE_UPDATED, ENC_CREATED, ENC_NEXT_TURN, ENC_PREV_TURN, ENC_ENTITY_SELECTED, ENC_NPC_HIT_POINTS_UPDATED } from './types';\r\n\r\nexport const addCharacterToEncounter = (character: Character) => ({\r\n    type: ENC_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const addNPCToEncounter = (npc: NPC) => ({\r\n    type: ENC_NPC_ADDED,\r\n    payload: npc,\r\n});\r\n\r\nexport const removeCharacterFromEncounter = (character: Character) => ({\r\n    type: ENC_CHARACTER_REMOVED,\r\n    payload: character,\r\n});\r\n\r\nexport const removeNPCFromEncounter = (npc: NPC) => ({\r\n    type: ENC_NPC_REMOVED,\r\n    payload: npc,\r\n});\r\n\r\nexport const updateCharacterInitiative = (character: Character, initiative: number) => ({\r\n    type: ENC_CHARACTER_INITIATIVE_UPDATED,\r\n    payload: { character, initiative },\r\n});\r\n\r\nexport const updateNPCInitiative = (npc: NPC, initiative: number) => ({\r\n    type: ENC_NPC_INITIATIVE_UPDATED,\r\n    payload: { npc, initiative },\r\n});\r\n\r\nexport const resetEncounter = () => ({\r\n    type: ENC_RESET,\r\n});\r\n\r\nexport const createEncounter = () => ({\r\n    type: ENC_CREATED,\r\n});\r\n\r\nexport const nextTurn = () => ({\r\n    type: ENC_NEXT_TURN,\r\n});\r\n\r\nexport const prevTurn = () => ({\r\n    type: ENC_PREV_TURN,\r\n});\r\n\r\nexport const selectEntity = (key: number | null) => ({\r\n    type: ENC_ENTITY_SELECTED,\r\n    payload: { key },\r\n});\r\n\r\nexport const updateNPCHitPoints = (key: number, update: number, temp = 0) => ({\r\n    type: ENC_NPC_HIT_POINTS_UPDATED,\r\n    payload: { key, update, temp },\r\n});\r\n","import { Character, NPC } from '../../types';\r\n\r\nexport const ENC_CHARACTER_ADDED = 'ENC_CHARACTER_ADDED';\r\nexport const ENC_NPC_ADDED = 'ENC_NPC_ADDED';\r\nexport const ENC_CHARACTER_REMOVED = 'ENC_CHARACTER_REMOVED';\r\nexport const ENC_NPC_REMOVED = 'ENC_NPC_REMOVED';\r\nexport const ENC_CHARACTER_INITIATIVE_UPDATED = 'ENC_CHARACTER_INITIATIVE_UPDATED';\r\nexport const ENC_NPC_INITIATIVE_UPDATED = 'ENC_NPC_INITIATIVE_UPDATED';\r\nexport const ENC_RESET = 'ENC_RESET';\r\nexport const ENC_CREATED = 'ENC_CREATED';\r\nexport const ENC_NEXT_TURN = 'ENC_NEXT_TURN';\r\nexport const ENC_PREV_TURN = 'ENC_PREV_TURN';\r\nexport const ENC_ENTITY_SELECTED = 'ENC_ENTITY_SELECTED';\r\nexport const ENC_NPC_HIT_POINTS_UPDATED = 'ENC_NPC_HIT_POINTS_UPDATED';\r\n\r\nexport interface EncCharacterAddedAction { \r\n    type: typeof ENC_CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface EncNPCAddedAction {\r\n    type: typeof ENC_NPC_ADDED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface EncCharacterRemovedAction { \r\n    type: typeof ENC_CHARACTER_REMOVED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface EncNPCRemovedAction {\r\n    type: typeof ENC_NPC_REMOVED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface EncCharacterInitiativeUpdatedAction {\r\n    type: typeof ENC_CHARACTER_INITIATIVE_UPDATED;\r\n    payload: {\r\n        character: Character;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncNPCInitiativeUpdatedAction {\r\n    type: typeof ENC_NPC_INITIATIVE_UPDATED;\r\n    payload: {\r\n        npc: NPC;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncResetAction {\r\n    type: typeof ENC_RESET;\r\n}\r\n\r\nexport interface EncCreatedAction {\r\n    type: typeof ENC_CREATED;\r\n}\r\n\r\nexport interface EncNextTurnAction {\r\n    type: typeof ENC_NEXT_TURN;\r\n}\r\n\r\nexport interface EncPrevTurnAction {\r\n    type: typeof ENC_PREV_TURN;\r\n}\r\n\r\nexport interface EncEntitySelectedAction {\r\n    type: typeof ENC_ENTITY_SELECTED;\r\n    payload: {\r\n        key: number | null;\r\n    };\r\n}\r\n\r\nexport interface EncNPCHitPointsUpdatedAction {\r\n    type: typeof ENC_NPC_HIT_POINTS_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        update: number,\r\n        temp: number,\r\n    };\r\n}\r\n\r\nexport type EncounterActionType = EncCharacterAddedAction |\r\n    EncNPCAddedAction |\r\n    EncCharacterRemovedAction |\r\n    EncNPCRemovedAction |\r\n    EncCharacterInitiativeUpdatedAction |\r\n    EncNPCInitiativeUpdatedAction |\r\n    EncResetAction |\r\n    EncCreatedAction |\r\n    EncNextTurnAction |\r\n    EncPrevTurnAction |\r\n    EncEntitySelectedAction |\r\n    EncNPCHitPointsUpdatedAction;\r\n","import styled, { css } from 'styled-components';\r\nimport { FramePartProps } from './Frame';\r\n\r\nexport const FrameContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const FrameTopRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\nexport const FrameMiddleRowContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nexport const FrameBottomRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const FrameMiddleFill = styled.div<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    ${props => props.backgroundColor && `background-color: ${props.backgroundColor};`}\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst CornerBaseStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const TopLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n`;\r\nexport const TopRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n`;\r\nexport const BottomLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateX(180deg);\r\n`;\r\nexport const BottomRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nexport const TopStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const BottomStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n    transform: rotate(180deg);\r\n`;\r\nexport const LeftStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n`;\r\nexport const RightStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    transform: rotate(180deg);\r\n`;\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M615.2,646.2c-1.7,5.7-12.9,11.7-14.5,11.7H22.5c-1.7,0-12.8-6-14.5-11.7L8.2,19.3V12S16.1,2.3,23.4,1.4H599.80005c7.3.8,15.1,10.6,15.1,10.6v7.3Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M611.9,0H11L0,11.5v637L11,660H612l11-11.5V11.5ZM3,12.8l9.2-9.6h5.9A25.8384,25.8384,0,0,0,7,12.9H6.9v.2A36.38553,36.38553,0,0,0,3,21.7ZM3,26.9A42.92655,42.92655,0,0,1,6.9,15.7V644.3a13.90069,13.90069,0,0,1-1.1-2.1,51.50646,51.50646,0,0,1-2.9-9L3,26.9Zm9.2,629.9L3,647.2v-8.9a40.90524,40.90524,0,0,0,3.9,8.6v.2H7a24.86426,24.86426,0,0,0,11.1,9.8H12.2Zm10.1,0A22.56646,22.56646,0,0,1,8.6,647V13A23.74954,23.74954,0,0,1,22.4,3.1H600.6a22.56647,22.56647,0,0,1,13.7,9.8v634a23.74956,23.74956,0,0,1-13.8,9.9Zm597.6-9.6-9.2,9.6h-5.9a24.86437,24.86437,0,0,0,11.1-9.8h.1v-.2a36.38635,36.38635,0,0,0,3.9-8.6l.00006,9Zm0-14.1a41.717,41.717,0,0,1-3.9,11.2V15.7a13.89825,13.89825,0,0,1,1.1,2.1,51.50837,51.50837,0,0,1,2.9,9l-.1,606.3Zm0-611.4a40.9054,40.9054,0,0,0-3.9-8.6v-.2h-.1a24.86433,24.86433,0,0,0-11.1-9.8h5.9l9.2,9.6-.00007,9Z\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const SquareCorner = getSquarePart();\r\nexport const SquareSide = getSquarePart('translate(0,-32)');\r\nexport const SquareTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3px solid ${color}`, boxSizing: 'border-box', transition: 'background-color 0.3s' }} />\r\n);\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getScrollPart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor ? <polygon fill={backgroundColor} style={{ zIndex: -2 }} transform={transform} points=\"8 93 337 93 337 2 8 2 8 93\"/> : null}\r\n        <path fill={color} transform={transform} d=\"M344,6.39V4.47h-6.14V0h-2.68s-1.06,1.54-3.91,1.54H12.73C9.88,1.54,8.82,0,8.82,0H6.14V4.47H0V6.39c2.53,0,2.67,4.14,2.67,4.14V81.91S2.53,86,0,86v2H6.14v7H8.82V3.31H335.18V91.69H8.82V95s1.06-1.54,3.91-1.54H331.27c2.84,0,3.9,1.52,3.91,1.54h2.68V88H344V86c-2.53,0-2.67-4.13-2.67-4.13V10.53S341.47,6.39,344,6.39ZM6.27,81.91H4.14V12.12H6.27Zm333.79.48h-2.12V12.61h2.12Z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ScrollCorner = getScrollPart();\r\nexport const ScrollTop = getScrollPart('translate(-32,0)');\r\nexport const ScrollSide = getScrollPart('translate(0,-32)');\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M275.08,719a32.47,32.47,0,0,0-1.23-4.29c-1.71-4.36-1.13-582.66-1.13-582.66s0-30.43-.58-49c-.36-11.85,1.72-26.54,3.28-35.6a4,4,0,0,1-1.49-1.64c-1.7-3.61-2.41-7.49-1-11.35a6.27,6.27,0,0,1,.93-1.69c-.7-3.15-.33-6.48-1.3-9.54a42.76,42.76,0,0,0-3.54-7,18.66,18.66,0,0,0-5-6.37c-2-1.48-4.08-2.5-5.8-4.27-1.74-.72-3.49-1.42-5.2-2.21l-.4-.21H29.41a5.1,5.1,0,0,1-3.58,1.27,5.83,5.83,0,0,1-2.25,1.44L23.19,6,23,6.05c-.42.25-.87.47-1.29.74a7.34,7.34,0,0,0-1.22.84c1-.91-.26.24-.45.41a5.85,5.85,0,0,1-2.83,1.33,52.05,52.05,0,0,0-3.9,4c-4.59,5.47-4.83,13.51-6.24,20.2,0,.14-.08.27-.11.4a11.08,11.08,0,0,1,.29,1.52c-.16-1.2.09.35.14.59q.14.63.3,1.26a21,21,0,0,0,.88,2.57c1.07,2.59-1.17,5.4-3.49,6.15a3.22,3.22,0,0,1-.7.14C5.94,55.14,8.24,70.62,7.86,83c-.58,18.57-.58,49-.58,49s.64,576.13-1,587.33a5.14,5.14,0,0,1,3.07,6,29.15,29.15,0,0,1-2.67,7,4.68,4.68,0,0,1,.85,2.91c-.27,14.38,12.13,22.59,23.77,28.18a5.7,5.7,0,0,1,.88.53h216.9a5.09,5.09,0,0,1,2.84-1.08,4.1,4.1,0,0,1,1.59-1.45c1-.5,2.07-.93,3.12-1.37l.64-.27-.55.24a6.87,6.87,0,0,0,1.29-.6c.22-.11.45-.18.68-.27,1-1,1.86-1.92,2.41-2.37,2.91-2.43,6.23-4.26,7.86-7.81a4.38,4.38,0,0,1,1.74-2c.81-4.9,2.13-9.72,2.58-14.7a5.32,5.32,0,0,1,.57-2c0-.19-.07-.36-.11-.51-.38-1.74-.87-3.44-1.28-5.17A4.8,4.8,0,0,1,275.08,719Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M275.28,654.52v-554c.77-12.76,2.64-38.62,5.52-48.14l.21-.69-.6-.38a21.36,21.36,0,0,1-3.68-3.14,62.8,62.8,0,0,1,2.34-9.56l.12-.34L276.7,10.17l-1.08-.34c-2.52-.8-9.71-4-9.71-8.12V0H15.09V1.71c0,4.13-7,7.26-9.71,8.12l-1.08.34L1.82,38.28l.12.34a64,64,0,0,1,2.34,9.54A21,21,0,0,1,.6,51.32L0,51.7l.21.69C3.09,61.89,5,87.7,5.72,100.48v554C5,667.23,3.09,703.1.21,712.61L0,713.3l.6.38a20.83,20.83,0,0,1,3.68,3.14,61.64,61.64,0,0,1-2.34,9.56l-.12.35,2.48,28.1,1.08.34c2.7.86,9.71,4,9.71,8.12V765H265.91v-1.71c0-4.13,7-7.26,9.71-8.12l1.08-.34,2.48-28.1-.12-.35a64,64,0,0,1-2.34-9.54,21,21,0,0,1,3.68-3.16l.6-.38-.21-.69c-2.88-9.5-4.74-45.31-5.51-58.09m-3.84,73.29s.45,1.07,1,2.61a29.79,29.79,0,0,1-1.33,12.42C268.18,751.6,261,758,250.25,761.58H30.68c-23-7.63-22.8-25.7-22.16-31.09.59-1.63,1.06-2.75,1.09-2.83a12.21,12.21,0,0,0-2.1-9.76c3.38-18.83,1.66-42.81,1.58-43.89V91.12c.09-1.19,1.81-25.21-1.57-44.05a12.41,12.41,0,0,0,2.05-9.88s-.45-1.07-1-2.61A29.8,29.8,0,0,1,9.87,22.16C12.82,13.4,20,7,30.76,3.42H250.32c23.05,7.63,22.8,25.7,22.16,31.09-.59,1.63-1.06,2.75-1.09,2.84a12.19,12.19,0,0,0,2.1,9.75c-3.38,18.83-1.66,42.81-1.58,43.89V673.88c-.09,1.19-1.81,25.21,1.57,44a12.41,12.41,0,0,0-2.05,9.88m7.41-675.3c-1.71,6.15-3,17.57-4,28.45a191.48,191.48,0,0,1,1.5-30.51,23.59,23.59,0,0,0,2.5,2.06m-5.72-14.58c.09-.21,1.13-2.72,2.12-5.82l.51,5.74A61.16,61.16,0,0,0,274,44.4a9.5,9.5,0,0,1-.89-6.47m.42-25.21,1.24,14.07c-.25,1.21-.59,2.48-1,3.69a30.1,30.1,0,0,0-1.55-8.72c-2-6-6.88-13.57-18.42-18.34h8.89c1.25,5.24,8,8.26,10.8,9.3M18.25,3.42h8.88C10.49,10.29,7.46,23.17,7.21,30.61c-.38-1.25-.74-2.56-1-3.82L7.45,12.72c2.79-1,9.55-4.06,10.8-9.3m-13,34.43.51-5.74c1,3.07,2,5.53,2.07,5.66A9.73,9.73,0,0,1,7,44.33a62.24,62.24,0,0,0-1.73-6.48m-.6,12.59A191.42,191.42,0,0,1,6.15,81c-1-10.87-2.29-22.29-4-28.44a21.9,21.9,0,0,0,2.49-2.07M2.15,712.49c1.71-6.15,3-17.57,4-28.44a191.41,191.41,0,0,1-1.5,30.5,23.59,23.59,0,0,0-2.5-2.06m5.72,14.58c-.09.21-1.13,2.72-2.12,5.82l-.51-5.74A60.54,60.54,0,0,0,7,720.6a9.5,9.5,0,0,1,.89,6.47m-.42,25.21L6.21,738.21c.25-1.21.59-2.47,1-3.69a30,30,0,0,0,1.55,8.72c2,6,6.88,13.57,18.42,18.34H18.25c-1.25-5.24-8-8.26-10.8-9.3m255.3,9.3h-8.88c16.64-6.86,19.67-19.75,19.92-27.19.38,1.26.74,2.56,1,3.82l-1.24,14.07c-2.79,1-9.55,4.06-10.8,9.3m13-34.43-.51,5.74c-1-3.08-2-5.53-2.07-5.66a9.73,9.73,0,0,1,.85-6.56,62.24,62.24,0,0,0,1.73,6.48m.6-12.59a191.37,191.37,0,0,1-1.51-30.51c1,10.88,2.29,22.29,4,28.44a21.9,21.9,0,0,0-2.49,2.07\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const FancyCorner = getSquarePart();\r\nexport const FancySide = getSquarePart('translate(0,-100)');\r\nexport const FancyTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3.5px solid ${color}`, boxSizing: 'border-box' }} />\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    FrameContainer,\r\n    FrameTopRowContainer,\r\n    FrameMiddleRowContainer,\r\n    FrameBottomRowContainer,\r\n    FrameMiddleFill,\r\n    TopLeftCornerStyles,\r\n    TopRightCornerStyles,\r\n    BottomLeftCornerStyles,\r\n    BottomRightCornerStyles,\r\n    TopStyles,\r\n    BottomStyles,\r\n    LeftStyles,\r\n    RightStyles,\r\n} from './style';\r\nimport { SquareCorner, SquareTop, SquareSide } from './svg/square';\r\nimport { ScrollCorner, ScrollTop, ScrollSide } from './svg/scroll';\r\nimport { FancyCorner, FancyTop, FancySide } from './svg/fancy';\r\n\r\nexport interface FrameProps {\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    className?: string;\r\n    forceUpdateProp?: boolean;\r\n}\r\n\r\nexport interface FrameFactoryProps {\r\n    partSize: number;\r\n    Corner: React.ComponentType<FramePartProps>;\r\n    Top: React.ComponentType<FramePartProps>;\r\n    Side: React.ComponentType<FramePartProps>;\r\n}\r\n\r\nexport interface FramePartProps extends FrameProps {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst frameFactory = ({\r\n    partSize,\r\n    Corner,\r\n    Top,\r\n    Side,\r\n}: FrameFactoryProps) => {\r\n    const FrameTopLeftCorner = styled(Corner)`${TopLeftCornerStyles}`;\r\n    const FrameTopRightCorner = styled(Corner)`${TopRightCornerStyles}`;\r\n    const FrameBottomLeftCorner = styled(Corner)`${BottomLeftCornerStyles}`;\r\n    const FrameBottomRightCorner = styled(Corner)`${BottomRightCornerStyles}`;\r\n    const FrameTop = styled(Top)`${TopStyles}`;\r\n    const FrameBottom = styled(Top)`${BottomStyles}`;\r\n    const FrameLeft = styled(Side)`${LeftStyles}`;\r\n    const FrameRight = styled(Side)`${RightStyles}`;\r\n\r\n    const Frame: React.FC<FrameProps> = ({ color = '#b13735', backgroundColor, className, forceUpdateProp }) => {\r\n        const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n        const [topPartWidth, setTopPartWidth] = useState<number>(partSize);\r\n        const [sidePartHeight, setSidePartHeight] = useState<number>(partSize);\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            handleResize();\r\n        }, [containerRef, forceUpdateProp]);\r\n\r\n        const handleResize = () => {\r\n            const { current: container } = containerRef;\r\n            if (container) {\r\n                setTopPartWidth(Math.max(container.clientWidth - partSize * 2, 0));\r\n                setSidePartHeight(Math.max(container.clientHeight - partSize * 2, 0));\r\n            }\r\n        };\r\n\r\n        const framePartProps: FramePartProps = { color, backgroundColor, width: partSize, height: partSize };\r\n\r\n        return (\r\n            <FrameContainer ref={containerRef} className={className}>\r\n                {containerRef.current\r\n                    ? (\r\n                        <React.Fragment>\r\n                            <FrameTopRowContainer>\r\n                                <FrameTopLeftCorner {...framePartProps} />\r\n                                <FrameTop {...framePartProps} width={topPartWidth} />\r\n                                <FrameTopRightCorner {...framePartProps} />\r\n                            </FrameTopRowContainer>\r\n                            <FrameMiddleRowContainer>\r\n                                <FrameLeft {...framePartProps} height={sidePartHeight} />\r\n                                <FrameMiddleFill {...framePartProps} height={sidePartHeight} width={topPartWidth} />\r\n                                <FrameRight {...framePartProps} height={sidePartHeight} />\r\n                            </FrameMiddleRowContainer>\r\n                            <FrameBottomRowContainer>\r\n                                <FrameBottomLeftCorner {...framePartProps} />\r\n                                <FrameBottom {...framePartProps} width={topPartWidth} />\r\n                                <FrameBottomRightCorner {...framePartProps} />\r\n                            </FrameBottomRowContainer>\r\n                        </React.Fragment>\r\n                    )\r\n                    : null\r\n                }\r\n            </FrameContainer>\r\n        );\r\n    };\r\n\r\n    return Frame;\r\n};\r\n\r\nexport const SquareFrame = frameFactory({ partSize: 32, Corner: SquareCorner, Top: SquareTop, Side: SquareSide });\r\nexport const ScrollFrame = frameFactory({ partSize: 32, Corner: ScrollCorner, Top: ScrollTop, Side: ScrollSide });\r\nexport const FancyFrame = frameFactory({ partSize: 100, Corner: FancyCorner, Top: FancyTop, Side: FancySide });\r\n\r\nexport default frameFactory;\r\n","import styled from 'styled-components';\r\nimport { Avatar as AvatarMui } from '@material-ui/core';\r\n\r\ninterface Multisize {\r\n    small?: boolean;\r\n}\r\n\r\nexport const EntityListItemScrollContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '56' : '80'}px;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const EntityListItemContainer = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n`;\r\n\r\nexport const EntityListItemWrapper = styled.div<Multisize>`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n\r\n    ${props => props.small && `\r\n        background-color: white;\r\n        border-radius: 4px;\r\n        box-shadow: 0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12);\r\n        padding-left: 0;\r\n    `}\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div<Multisize>`\r\n    ${props => props.small ? `\r\n        width: 40px;\r\n        height: 40px;\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n    ` : `\r\n        width: 60px;\r\n        height: 60px;\r\n        min-width: 60px;\r\n        min-height: 60px;\r\n    `}\r\n    margin: 0 8px;\r\n`;\r\n\r\nexport const Avatar = styled(AvatarMui)`\r\n    && {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const NameAndSavesContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    margin-right: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport const Name = styled.div<Multisize>`\r\n    font-size: ${props => props.small ? '18' : '24'}px;\r\n    line-height: ${props => props.small ? '18' : '24'}px;\r\n`;\r\n\r\nexport const SavesContainer = styled.div<Multisize>`\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const HitPointsContainer = styled.div<Multisize & { onClick?: (e: React.MouseEvent<HTMLElement>) => void }>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    width: ${props => props.small ? '144' : '200'}px;\r\n    margin-left: auto;\r\n    margin-right: ${props => props.small ? '8' : '16'}px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    ${props => props.onClick ? 'cursor: pointer;' : ''}\r\n`;\r\n\r\nexport const HitPoints = styled.div<{ width: number } & Multisize>`\r\n    font-size: ${props => props.small ? '20' : '32'}px;\r\n    line-height: ${props => props.small ? '20' : '32'}px;\r\n    width: ${props => props.width}px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const HitPointMenuContentWrapper = styled.div<Multisize>`\r\n    padding: 0 8px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const HitPointMenuButtonWrapper = styled.div`\r\n    padding-top: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > *:not(:last-child) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Menu, TextField, Button, ThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { DeathSaves, State } from '../../redux/types';\r\nimport { updateCharacterById } from '../../redux/actions/characters';\r\nimport { selectEntity, updateNPCHitPoints } from '../../redux/actions/encounter';\r\nimport { SquareFrame } from '../Frame';\r\nimport {\r\n    EntityListItemScrollContainer,\r\n    EntityListItemContainer,\r\n    EntityListItemWrapper,\r\n    NameAndSavesContainer,\r\n    Avatar,\r\n    Name,\r\n    SavesContainer,\r\n    HitPointsContainer,\r\n    HitPoints,\r\n    AvatarWrapper,\r\n    HitPointMenuContentWrapper,\r\n    HitPointMenuButtonWrapper,\r\n} from './style';\r\n\r\ninterface StateProps {\r\n    selectedKey: number | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateCharacterById: (id: number, maxHitPoints: number) => void;\r\n    selectEntity: typeof selectEntity;\r\n    updateNPCHitPoints: typeof updateNPCHitPoints;\r\n}\r\n\r\nexport enum EntityType {\r\n    CHARACTER = 'CHARACTER',\r\n    NPC = 'NPC',\r\n}\r\n\r\nexport interface EntityListItemProps {\r\n    entityKey: number;\r\n    type: EntityType;\r\n    name: string;\r\n\r\n    maxHitPoints: number;\r\n    removedHitPoints?: number;\r\n    temporaryHitPoints?: number;\r\n    deathSaves?: DeathSaves;\r\n\r\n    id?: number;\r\n    avatarUrl?: string;\r\n    color?: string;\r\n}\r\n\r\nconst EntityListItem: React.FC<EntityListItemProps & StateProps & DispatchProps> = ({\r\n    id,\r\n    entityKey,\r\n    type,\r\n    name,\r\n    maxHitPoints,\r\n    removedHitPoints = 0, \r\n    temporaryHitPoints = 0,\r\n    deathSaves,\r\n    avatarUrl,\r\n    color,\r\n    selectedKey,\r\n    updateCharacterById,\r\n    selectEntity,\r\n    updateNPCHitPoints,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n    const [menuInputValue, setMenuInputValue] = useState('');\r\n\r\n    const isSelected = useMemo(() => selectedKey === entityKey, [selectedKey, entityKey]);\r\n\r\n    useEffect(() => {\r\n        if (type === EntityType.CHARACTER && id) {\r\n            updateCharacterById(id, maxHitPoints);\r\n        }\r\n    }, [type, id, maxHitPoints, updateCharacterById]);\r\n\r\n    const openMenu = (e: React.MouseEvent<HTMLElement>) => setMenuAnchorElement(e.currentTarget);\r\n    const closeMenu = () => {\r\n        selectEntity(null);\r\n        setMenuAnchorElement(null);\r\n        setMenuInputValue('');\r\n    };\r\n\r\n    const handleMenuInputChange = (e: React.ChangeEvent<HTMLInputElement>) => setMenuInputValue(e.target.value);\r\n\r\n    const handleClick = () => {\r\n        if (!small && type === EntityType.NPC) {\r\n            selectEntity(isSelected ? null : entityKey);\r\n        }\r\n    };\r\n\r\n    const handleDamageClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, -Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleTempClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, 0, Math.abs(updateHP));\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleHealClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    return (\r\n        <EntityListItemScrollContainer small={small}>\r\n            <EntityListItemContainer onClick={handleClick}>\r\n                {small ? null : <SquareFrame color={type === EntityType.CHARACTER ? color : theme.palette.secondary.main} backgroundColor={isSelected ? '#ddd' : 'white' } />}\r\n                <EntityListItemWrapper small={small}>\r\n                    <AvatarWrapper small={small}>\r\n                        <Avatar src={avatarUrl} variant=\"rounded\" />\r\n                    </AvatarWrapper>\r\n                    <NameAndSavesContainer small={small}>\r\n                        <Name small={small}>{name}</Name>\r\n                        <SavesContainer small={small} />\r\n                    </NameAndSavesContainer>\r\n                    <HitPointsContainer small={small} onClick={type === EntityType.NPC ? openMenu : undefined}>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints - removedHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 16 : 12} style={{ color: 'grey' }}>/</HitPoints>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 48 : 36} style={{ color: 'grey' }}>[{temporaryHitPoints}]</HitPoints>\r\n                    </HitPointsContainer>\r\n                    <Menu anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu} style={{ marginTop: small ? '70px' : '80px' }}>\r\n                        <HitPointMenuContentWrapper>\r\n                            <TextField style={{ width: '100%' }} label=\"Hit Points\" type=\"number\" autoFocus value={menuInputValue} onChange={handleMenuInputChange} />\r\n                            <HitPointMenuButtonWrapper>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleDamageClick}>Damage</Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={handleTempClick}>Temp</Button>\r\n                                <ThemeProvider theme={createMuiTheme({ ...theme, palette: { ...theme.palette, primary: { main: '#08a300' }}})}>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleHealClick}>Heal</Button>\r\n                                </ThemeProvider>\r\n                            </HitPointMenuButtonWrapper>\r\n                        </HitPointMenuContentWrapper>\r\n                    </Menu>\r\n                </EntityListItemWrapper>\r\n            </EntityListItemContainer>\r\n        </EntityListItemScrollContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    selectedKey: (state.encounter && state.encounter.selectedEntityKey !== null) ? state.encounter.selectedEntityKey : null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateCharacterById, selectEntity, updateNPCHitPoints })(EntityListItem);\r\n","import { keys } from 'lodash/fp';\r\nimport { EncounterState } from '../redux/reducers/encounter';\r\nimport { Character, NPC } from '../redux/types';\r\nimport { EntityType } from '../components/EntityListItem';\r\n\r\nexport interface EntityWithInitiative {\r\n    initiative: number;\r\n    type: EntityType;\r\n    entity: Character | NPC;\r\n    key: number;\r\n}\r\n\r\nexport const sortEntitiesWithInitiative = (encounter: EncounterState | null) => {\r\n    if (!encounter) {\r\n        return [];\r\n    }\r\n\r\n    const { characters, npcs, initiativeById, currentTurnKey } = encounter;\r\n\r\n    let sortedByInitiative: EntityWithInitiative[] = [];\r\n\r\n    keys(characters).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.CHARACTER,\r\n                entity: characters[key],\r\n                key,\r\n            });\r\n        }\r\n    });\r\n\r\n    keys(npcs).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.NPC,\r\n                entity: npcs[key],\r\n                key,\r\n            });\r\n        }\r\n    });\r\n\r\n    sortedByInitiative.sort((e1, e2) => {\r\n        if (e1.initiative < e2.initiative) {\r\n            return 1;\r\n        } else if (e1.initiative > e2.initiative) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    if (sortedByInitiative.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    while (sortedByInitiative[0].key !== currentTurnKey) {\r\n        sortedByInitiative.push(sortedByInitiative.shift() as EntityWithInitiative);\r\n    }\r\n\r\n    return sortedByInitiative;\r\n};\r\n","import { omit, findKey, filter, reduce, keys } from 'lodash/fp';\r\nimport { Character, NPC } from '../types';\r\nimport {\r\n    ENC_CHARACTER_ADDED,\r\n    ENC_NPC_ADDED,\r\n    ENC_CHARACTER_REMOVED,\r\n    ENC_NPC_REMOVED,\r\n    ENC_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_NPC_INITIATIVE_UPDATED,\r\n    ENC_RESET,\r\n    ENC_CREATED,\r\n    ENC_NEXT_TURN,\r\n    ENC_PREV_TURN,\r\n    ENC_ENTITY_SELECTED,\r\n    ENC_NPC_HIT_POINTS_UPDATED,\r\n    EncCharacterAddedAction,\r\n    EncNPCAddedAction,\r\n    EncCharacterRemovedAction,\r\n    EncNPCRemovedAction,\r\n    EncCharacterInitiativeUpdatedAction,\r\n    EncNPCInitiativeUpdatedAction,\r\n    EncNPCHitPointsUpdatedAction,\r\n    EncounterActionType,\r\n} from '../actions/encounter/types';\r\nimport { sortEntitiesWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\n\r\nconst INIT_INITIATIVE = 1000000;\r\n\r\nexport interface EncounterState {\r\n    characters: Record<number, Character>;\r\n    npcs: Record<number, NPC>;\r\n    initiativeById: Record<number, number>;\r\n    currentId: number;\r\n    currentTurnInitiative: number;\r\n    currentTurnKey: number;\r\n    currentRound: number;\r\n    selectedEntityKey: number | null;\r\n    npcHitPoints: Record<number, {\r\n        removedHitPoints: number;\r\n        temporaryHitPoints: number;\r\n    }>;\r\n}\r\n\r\nconst initialState: EncounterState = {\r\n    characters: {},\r\n    npcs: {},\r\n    initiativeById: {},\r\n    currentId: 0,\r\n    currentTurnInitiative: INIT_INITIATIVE,\r\n    currentTurnKey: 0,\r\n    currentRound: 1,\r\n    selectedEntityKey: null,\r\n    npcHitPoints: {},\r\n};\r\n\r\nconst addCharacter = (state: EncounterState, action: EncCharacterAddedAction) => {\r\n    const { characters } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const characterNumber = filter(key => characters[parseInt(key)].name.startsWith(name), keys(characters)).length;\r\n\r\n    if (characterNumber === 0) {\r\n        return {\r\n            ...state,\r\n            characters: {...state.characters, [state.currentId]: action.payload},\r\n            currentId: state.currentId + 1,\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            characters: {...state.characters, [state.currentId]: {\r\n                ...action.payload,\r\n                name: `${name} #${characterNumber + 1}`,\r\n            }},\r\n            currentId: state.currentId + 1,\r\n        };\r\n    }\r\n};\r\n\r\nconst addNPC = (state: EncounterState, action: EncNPCAddedAction) => {\r\n    const { npcs } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const npcNumber = filter(key => npcs[parseInt(key)].name.startsWith(name), keys(npcs)).length;\r\n\r\n    if (npcNumber === 0) {\r\n        return {\r\n            ...state,\r\n            npcs: { ...state.npcs, [state.currentId]: action.payload },\r\n            currentId: state.currentId + 1,\r\n            npcHitPoints: { ...state.npcHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 7 } },\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            npcs: { ...state.npcs, [state.currentId]: {\r\n                ...action.payload,\r\n                name: `${name} #${npcNumber + 1}`,\r\n            }},\r\n            currentId: state.currentId + 1,\r\n            npcHitPoints: { ...state.npcHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 7 } },\r\n        };\r\n    }\r\n};\r\n\r\nconst removeCharacter = (state: EncounterState, action: EncCharacterRemovedAction) => {\r\n    const characterKey = findKey((c: Character) => c.id === action.payload.id, state.characters);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        characters: (omit(characterKey, state.characters) || {}) as Record<number, Character>,\r\n        initiativeById: (omit(characterKey, state.initiativeById) || {}) as Record<number, number>,\r\n    };\r\n};\r\n\r\nconst removeNPC = (state: EncounterState, action: EncNPCRemovedAction) => {\r\n    const { npcs } = state;\r\n    const { name } = action.payload;\r\n    const addedNPCsKeys = filter(key => npcs[parseInt(key)].name.startsWith(name), keys(npcs));\r\n\r\n    if (addedNPCsKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    const latestAddedNpc = reduce(\r\n        (accumulator, keyString) => {\r\n            const key = parseInt(keyString);\r\n            const npc = npcs[key];\r\n\r\n            if (npc.name === name) {\r\n                if (accumulator.number < 1) {\r\n                    return { key, number: 1 };\r\n                }\r\n                return accumulator;\r\n            }\r\n\r\n            const splitByHash = npc.name.slice(name.length).split('#');\r\n            const number = parseInt(splitByHash[splitByHash.length - 1]);\r\n\r\n            if (number > accumulator.number) {\r\n                return { key, number };\r\n            }\r\n\r\n            return accumulator;\r\n        },\r\n        {\r\n            key: 0,\r\n            number: -1,\r\n        },\r\n        addedNPCsKeys,\r\n    );\r\n\r\n    return {\r\n        ...state,\r\n        npcs: omit(latestAddedNpc.key, npcs) || {},\r\n    };\r\n};\r\n\r\nconst updateCharacterInitiative = (state: EncounterState, action: EncCharacterInitiativeUpdatedAction) => {\r\n    const { characters, initiativeById } = state;\r\n    const { character, initiative } = action.payload;\r\n\r\n    const characterKey = keys(characters).find(key => characters[parseInt(key)].id === character.id);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            [characterKey]: initiative,\r\n        },\r\n    };\r\n};\r\n\r\nconst updateNPCInitiative = (state: EncounterState, action: EncNPCInitiativeUpdatedAction) => {\r\n    const { npcs, initiativeById } = state;\r\n    const { npc, initiative } = action.payload;\r\n\r\n    const npcKeys = keys(npcs).filter(key => npcs[parseInt(key)].name.startsWith(npc.name));\r\n    if (npcKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    let npcInitiatives: Record<number, number> = {};\r\n    npcKeys.forEach(key => (npcInitiatives[parseInt(key)] = initiative));\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            ...npcInitiatives,\r\n        },\r\n    };\r\n};\r\n\r\nconst recalculateCurrentTurnKey = (state: EncounterState): EncounterState => {\r\n    const { currentTurnInitiative, currentTurnKey, characters, npcs, initiativeById } = state;\r\n    if (currentTurnInitiative === INIT_INITIATIVE) {\r\n        const findMaxInitiative = (maxInitiative: { key: number, initiative: number}, keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative > maxInitiative.initiative) {\r\n                return { key, initiative };\r\n            }\r\n\r\n            return maxInitiative;\r\n        };\r\n        const { key: characterKey, initiative: characterInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(characters));\r\n        const { key: npcKey, initiative: npcInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(npcs));\r\n\r\n        if (npcInitiative === -100 && characterInitiative === -100) {\r\n            return state;\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            currentTurnInitiative: Math.max(characterInitiative, npcInitiative),\r\n            currentTurnKey: characterInitiative > npcInitiative ? characterKey : npcKey,\r\n        };\r\n    } else {\r\n        const findWithInitiative = (keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative === currentTurnInitiative) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const keyWithInitiative = parseInt(keys(characters).find(findWithInitiative) as string) || parseInt(keys(npcs).find(findWithInitiative) as string);\r\n        if (!isNaN(keyWithInitiative)) {\r\n            return {\r\n                ...state,\r\n                currentTurnKey: keyWithInitiative,\r\n            };\r\n        }\r\n\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    }\r\n};\r\n\r\nconst nextTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            currentRound: state.currentRound + 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[1];\r\n    let round = state.currentRound;\r\n    if (initiative > sortedEntities[0].initiative) {\r\n        round += 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst prevTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            currentRound: state.currentRound - 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[sortedEntities.length - 1];\r\n    let round = state.currentRound;\r\n    if (initiative < sortedEntities[0].initiative) {\r\n        round -= 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst updateNPCHitPoints = (state: EncounterState, action: EncNPCHitPointsUpdatedAction) => {\r\n    const { key, update, temp } = action.payload;\r\n    const { removedHitPoints, temporaryHitPoints } = state.npcHitPoints[key];\r\n\r\n    let newTemp = temporaryHitPoints;\r\n    if (temp) {\r\n        newTemp = Math.max(0, temporaryHitPoints + temp);\r\n    }\r\n    if (update < 0) {\r\n        newTemp = Math.max(0, temporaryHitPoints + update);\r\n    }\r\n\r\n    let newRemoved = removedHitPoints;\r\n    if (update >= 0) {\r\n        newRemoved = Math.max(0, removedHitPoints - update);\r\n    } else {\r\n        newRemoved = Math.max(0, removedHitPoints - update - Math.min(Math.abs(update), temporaryHitPoints));\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        npcHitPoints: {\r\n            ...state.npcHitPoints,\r\n            [key]: {\r\n                removedHitPoints: newRemoved,\r\n                temporaryHitPoints: newTemp,\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const encounter = (state = initialState, action: EncounterActionType) => {\r\n    switch (action.type) {\r\n    case ENC_CHARACTER_ADDED:\r\n        return recalculateCurrentTurnKey(addCharacter(state, action));\r\n\r\n    case ENC_NPC_ADDED:\r\n        return recalculateCurrentTurnKey(addNPC(state, action));\r\n\r\n    case ENC_CHARACTER_REMOVED:\r\n        return recalculateCurrentTurnKey(removeCharacter(state, action));\r\n\r\n    case ENC_NPC_REMOVED:\r\n        return recalculateCurrentTurnKey(removeNPC(state, action));\r\n\r\n    case ENC_CHARACTER_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateCharacterInitiative(state, action));\r\n    \r\n    case ENC_NPC_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateNPCInitiative(state, action));\r\n\r\n    case ENC_RESET:\r\n        return initialState;\r\n\r\n    case ENC_CREATED:\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    \r\n    case ENC_NEXT_TURN:\r\n        return nextTurn(state);\r\n\r\n    case ENC_PREV_TURN:\r\n        return prevTurn(state);\r\n\r\n    case ENC_ENTITY_SELECTED:\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: action.payload.key,\r\n        };\r\n\r\n    case ENC_NPC_HIT_POINTS_UPDATED:\r\n        return updateNPCHitPoints(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { characters } from './characters';\r\nimport { npcs } from './npcs';\r\nimport { ui } from './ui';\r\nimport { encounter } from './encounter';\r\n\r\nconst rootReducer = combineReducers({\r\n    characters,\r\n    npcs,\r\n    ui,\r\n    encounter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n    blacklist: ['ui'],\r\n};\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer as Reducer<any, any>), applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingViewBackground = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666666;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewImage = styled.img`\r\n    width: 400px;\r\n    max-width: 80%;\r\n`;\r\n\r\nexport const LoadingViewText = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport { LoadingViewBackground, LoadingViewContainer, LoadingViewImage, LoadingViewText } from './style';\r\n\r\nconst LoadingView = () => (\r\n    <LoadingViewBackground>\r\n        <LoadingViewContainer>\r\n            <LoadingViewImage src={`${process.env.PUBLIC_URL}/fire.gif`} />\r\n            <LoadingViewText>Loading</LoadingViewText>\r\n        </LoadingViewContainer>\r\n    </LoadingViewBackground>\r\n);\r\n\r\nexport default LoadingView;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    height: 56px;\r\n    min-height: 56px;\r\n`;\r\n","import React from 'react';\r\nimport { AppBar, AppBarProps, Toolbar } from '@material-ui/core';\r\nimport { NavbarContainer } from './style';\r\n\r\nconst Navbar: React.FC<AppBarProps> = ({ children, ...other }) => {\r\n    return (\r\n        <NavbarContainer>\r\n            <AppBar position=\"fixed\" color=\"secondary\" style={{ minHeight: '56px' }} {...other}>\r\n                <Toolbar style={{ minHeight: '56px', paddingLeft: '4px', paddingRight: '10px' }}>\r\n                    {children}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport default withStyles(theme => ({\r\n    tooltip: {\r\n        fontSize: 16,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    arrow: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}))((props: TooltipProps) => <Tooltip arrow {...props} />);\r\n","import styled, { css } from 'styled-components';\r\n\r\ninterface WithFullScreen {\r\n    fullScreen?: boolean;\r\n}\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const EntityListContainer = styled.div<WithFullScreen & Multiheight>`\r\n    position: relative;\r\n    ${props => props.fullScreen ? `\r\n        width: 98%;\r\n        height: calc(100% - 160px);\r\n    ` : `\r\n        width: 50%;\r\n        max-width: 600px;\r\n        height: ${props.short ? '420' : '480'}px;\r\n    `}\r\n`;\r\n\r\nexport const EntityListWrapper = styled.div<WithFullScreen>`\r\n    height: calc(100% - 32px);\r\n    padding: 16px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n\r\n    overflow-y: scroll;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst EntityListFade = css`\r\n    position: absolute;\r\n    left: calc(2%);\r\n    width: 96%;\r\n    border-radius: 16px;\r\n    height: 20px;\r\n`;\r\n\r\nexport const EntityListTopFade = styled.div`\r\n    ${EntityListFade}\r\n    top: 0;\r\n    background: linear-gradient(white, transparent);\r\n`;\r\n\r\nexport const EntityListBottomFade = styled.div`\r\n    ${EntityListFade}\r\n    bottom: 0;\r\n    background: linear-gradient(transparent, white);\r\n`;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { State, Character } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { sortEntitiesWithInitiative, EntityWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\nimport { FancyFrame } from '../Frame';\r\nimport { EntityListItem, EntityType } from '../EntityListItem';\r\nimport { EntityListContainer, EntityListWrapper, EntityListBottomFade, EntityListTopFade } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\nexport interface EntityListProps {\r\n    fullScreen?: boolean;\r\n    short?: boolean;\r\n}\r\n\r\nconst EntityList: React.FC<EntityListProps & StateProps> = ({ encounter, fullScreen, short }) => {\r\n    const entitiesByInitiative: EntityWithInitiative[] = useMemo(() => sortEntitiesWithInitiative(encounter), [encounter]);\r\n\r\n    return (\r\n        <EntityListContainer fullScreen={fullScreen} short={short}>\r\n            <EntityListWrapper fullScreen={fullScreen}>\r\n                {entitiesByInitiative.map(({ type, entity, key })=> {\r\n                    let entityListItemProps = { key, entityKey: key, type, ...entity };\r\n\r\n                    if (type === EntityType.NPC) {\r\n                        entityListItemProps = {\r\n                            ...entityListItemProps,\r\n                            removedHitPoints: (encounter && encounter.npcHitPoints[key] && encounter.npcHitPoints[key].removedHitPoints) || 0,\r\n                            temporaryHitPoints: (encounter && encounter.npcHitPoints[key] && encounter.npcHitPoints[key].temporaryHitPoints) || 0,\r\n                        };\r\n                    }\r\n\r\n                    const color = ((entity as Character).themeColor && (entity as Character).themeColor?.themeColor) || undefined;\r\n                    return <EntityListItem {...entityListItemProps} color={color} />;\r\n                })}\r\n            </EntityListWrapper>\r\n            <EntityListTopFade />\r\n            <EntityListBottomFade />\r\n            <FancyFrame forceUpdateProp={short} />\r\n        </EntityListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect<StateProps>(mapStateToProps)(EntityList);\r\n","import styled from 'styled-components';\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const NumpadFrameContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '243' : '288'}px;\r\n    height: ${props => props.short ? '420' : '480'}px;\r\n`;\r\n\r\nexport const NumpadContainer = styled.div<Multiheight>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: ${props => props.short ? '211' : '256'}px;\r\n    height: ${props => props.short ? '400' : '460'}px;\r\n    padding: 16px;\r\n    padding-bottom: 0;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const NumpadValueContainer = styled.div<Multiheight>`\r\n    width: 100%;\r\n    height: 80px;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const NumpadValueWrapper = styled.div<Multiheight>`\r\n    position: absolute;\r\n    width: calc(100% - 32px);\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    user-select: none;\r\n    z-index: 10;\r\n`;\r\n\r\nexport const NumpadButtonContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '65' : '80'}px;\r\n    height: ${props => props.short ? '65' : '80'}px;\r\n    margin-bottom: 8px;\r\n\r\n    &:not(:nth-child(3n + 1)) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const NumpadButtonValueContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadButtonValue = styled.div<Multiheight>`\r\n    font-size: ${props => props.short ? '30' : '40'}px;\r\n    line-height: ${props => props.short ? '30' : '40'}px;\r\n    text-align: center;\r\n    user-select: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateNPCHitPoints } from '../../redux/actions/encounter';\r\nimport { SquareFrame, ScrollFrame, FancyFrame } from '../Frame';\r\nimport {\r\n    NumpadFrameContainer,\r\n    NumpadContainer,\r\n    NumpadValueContainer,\r\n    NumpadValueWrapper,\r\n    NumpadValue,\r\n    NumpadButtonContainer,\r\n    NumpadButtonValueContainer,\r\n    NumpadButtonValue,\r\n} from './style';\r\n\r\ninterface NumpadButtonProps {\r\n    children: React.ReactNode;\r\n    onClick?: () => void;\r\n    color?: string;\r\n    padding?: string;\r\n    short?: boolean;\r\n}\r\n\r\nconst NumpadButton: React.FC<NumpadButtonProps> = ({ children, padding, color, onClick, short }) => {\r\n    const [backgroundColor, setBackgroundColor] = useState('white');\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n        setBackgroundColor('#ccc');\r\n        setTimeout(() => setBackgroundColor('white'), 100);\r\n    };\r\n\r\n    return (\r\n        <NumpadButtonContainer onClick={handleClick} short={short}>\r\n            <SquareFrame forceUpdateProp={short} color={color || '#555'} backgroundColor={backgroundColor} />\r\n            <NumpadButtonValueContainer>\r\n                <NumpadButtonValue style={{ padding }} short={short}>{children}</NumpadButtonValue>\r\n            </NumpadButtonValueContainer>\r\n        </NumpadButtonContainer>\r\n    );\r\n};\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateNPCHitPoints: typeof updateNPCHitPoints;\r\n}\r\n\r\nexport interface NumpadProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Numpad = ({ short, encounter, updateNPCHitPoints }: NumpadProps & StateProps & DispatchProps) => {\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n\r\n    const handleValueClick = () => setCurrentValue(0);\r\n    const handleButtonClick = (number: number) => () => setCurrentValue(v => v * 10 + number);\r\n    const handleSubmit = (sign: number) => () => {\r\n        if (encounter && encounter.selectedEntityKey !== null) {\r\n            updateNPCHitPoints(encounter.selectedEntityKey, sign * currentValue);\r\n        }\r\n\r\n        setCurrentValue(0);\r\n    };\r\n\r\n    return (\r\n        <NumpadFrameContainer short={short}>\r\n            <FancyFrame forceUpdateProp={short} backgroundColor=\"rgba(255, 255, 255, 0.8)\" />\r\n            <NumpadContainer short={short}>\r\n                <NumpadValueContainer onClick={handleValueClick}>\r\n                    <NumpadValueWrapper>\r\n                        <NumpadValue>{currentValue || ''}</NumpadValue>\r\n                        <ScrollFrame color=\"#555\" backgroundColor=\"white\" />\r\n                    </NumpadValueWrapper>\r\n                </NumpadValueContainer>\r\n                <NumpadButton short={short} onClick={handleButtonClick(7)}>7</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(8)}>8</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(9)}>9</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(4)}>4</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(5)}>5</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(6)}>6</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(1)}>1</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(2)}>2</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(3)}>3</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(-1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#b13735'><KeyboardArrowDown fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(0)}>0</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#08a300'><KeyboardArrowUp fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n            </NumpadContainer>\r\n        </NumpadFrameContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateNPCHitPoints })(Numpad);\r\n","import styled from 'styled-components';\r\n\r\nexport const NotesContainer = styled.div<{ short?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.short ? 885 : 920}px;\r\n    height: ${props => props.short ? 220 : 260}px;\r\n    margin-top: 16px;\r\n`;\r\n\r\nexport const NotesCanvas = styled.canvas`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 12px;\r\n    touch-action: none;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { FancyFrame } from '../Frame';\r\nimport { NotesContainer, NotesCanvas } from './style';\r\n\r\nexport interface NotesProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Notes = ({ short }: NotesProps) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const prevPointerPosition = useRef<{ x: number, y: number } | null>(null);\r\n\r\n    const [canvasSize, setCanvasSize] = useState<{ width?: number, height?: number }>({});\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateCanvasSize);\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateCanvasSize();\r\n    }, [canvasRef]);\r\n\r\n    const updateCanvasSize = () => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const { width, height } = canvas.getBoundingClientRect();\r\n            setCanvasSize({ width, height });\r\n        }\r\n    };\r\n\r\n    const handlePointerMove = (e: React.PointerEvent<HTMLCanvasElement>) => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                const { pressure, buttons, clientX, clientY } = e;\r\n                const x = clientX - canvas.getBoundingClientRect().x;\r\n                const y = clientY - canvas.getBoundingClientRect().y;\r\n                const lineThickness = pressure || 1;\r\n\r\n                if (!pressure || !buttons) {\r\n                    prevPointerPosition.current = null;\r\n                    return;\r\n                } \r\n\r\n                if (prevPointerPosition.current) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(prevPointerPosition.current.x, prevPointerPosition.current.y);\r\n                    ctx.lineTo(x, y);\r\n                    ctx.lineWidth = lineThickness * 2;\r\n                    ctx.stroke();\r\n                }\r\n\r\n                prevPointerPosition.current = { x, y };\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePointerUp = () => (prevPointerPosition.current = null);\r\n\r\n    const canvasProps = {\r\n        ref: canvasRef,\r\n        onPointerMove: handlePointerMove,\r\n        onPointerUp: handlePointerUp,\r\n        ...canvasSize,\r\n    };\r\n\r\n    return (\r\n        <NotesContainer short={short}>\r\n            <NotesCanvas {...canvasProps}></NotesCanvas>\r\n            <FancyFrame forceUpdateProp={short} />\r\n        </NotesContainer>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import styled from 'styled-components';\r\n\r\nexport const RootComponentContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const RootComponentWrapper = styled.div`\r\n    position: absolute;\r\n    top: 56px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: calc(100% - 64px);\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div<{ small?: boolean }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    ${props => props.small && 'align-items: center;'}\r\n`;\r\n\r\nexport const ListAndNumpadContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nexport const NotesContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Multisize } from './DividedList';\r\n\r\nexport const DividedListContainer = styled.div<Multisize>`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    ${props => props.small ? `\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    ` : `\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    `}\r\n`;\r\n\r\nexport const DividedListWrapper = styled.div<Multisize>`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    ${props => props.small && 'flex-direction: column;'}\r\n`;\r\n\r\nexport const DividedListSublistContainer = styled.div<{ small?: boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    ${props => props.small ? `\r\n        width: 100%;\r\n        padding: 16px;\r\n        box-sizing: border-box;\r\n    ` : `\r\n        width: 40%;\r\n        max-width: 600px;\r\n        margin: 16px;\r\n    `}\r\n\r\n    & > :not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport interface DividerProps {\r\n    color: string;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nexport const Divider = styled.div<DividerProps & Multisize>`\r\n    border: 1px solid ${props => props.color};\r\n    border-radius: 50%;\r\n    opacity: 0.5;\r\n    margin-bottom: 10px;\r\n\r\n    ${props => props.small ? `\r\n        height: 0;\r\n        margin: 16px;\r\n    ` : `\r\n        width: 0;\r\n        margin-top: 56px;\r\n\r\n        ${props.marginTopOverride ? `margin-top: ${props.marginTopOverride}px;` : ''}\r\n        ${props.marginBottomOverride ? `margin-bottom: ${props.marginBottomOverride}px;` : ''}\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useMediaQuery, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { DividedListContainer, DividedListWrapper, Divider, DividedListSublistContainer } from './style';\r\n\r\nexport interface Multisize {\r\n    small: boolean;\r\n}\r\n\r\nexport interface DividedListProps {\r\n    titles: string[];\r\n    children: { 0: React.ReactElement<unknown & Multisize> } & Array<React.ReactElement<unknown & Multisize>>;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nconst DividedList = ({ titles, children, marginBottomOverride, marginTopOverride }: DividedListProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <DividedListContainer small={small}>\r\n            <DividedListWrapper small={small}>\r\n                <DividedListSublistContainer small={small}>\r\n                    <Typography variant=\"h5\">{titles[0]}</Typography>\r\n                    {React.cloneElement(children[0], { small })}\r\n                </DividedListSublistContainer>\r\n                {children.slice(1).map((child, id) => (\r\n                    <React.Fragment key={child.key || id}>\r\n                        <Divider color={theme.palette.secondary.main} small={small} marginTopOverride={marginTopOverride} marginBottomOverride={marginBottomOverride} />\r\n                        <DividedListSublistContainer small={small}>\r\n                            <Typography variant=\"h5\">{titles[id + 1]}</Typography>\r\n                            {React.cloneElement(child, { small })}\r\n                        </DividedListSublistContainer>\r\n                    </React.Fragment>\r\n                ))}\r\n            </DividedListWrapper>\r\n        </DividedListContainer>\r\n    );\r\n};\r\n\r\nexport default DividedList;\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { Character } from '../../redux/types';\r\nimport { updateCharacterMaxHp, deleteCharacter } from '../../redux/actions/characters';\r\nimport { SavedCharacterListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateCharacterMaxHp: typeof updateCharacterMaxHp;\r\n    deleteCharacter: typeof deleteCharacter;\r\n}\r\n\r\nexport interface SavedCharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst SavedCharacterListItem: React.FC<SavedCharacterListItemProps & DispatchProps> = ({ character, updateCharacterMaxHp, deleteCharacter }) => {\r\n    const [maxHp, setMaxHp] = useState<string>(character.maxHitPoints.toString());\r\n    const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n    const openConfirmationDialog = () => setIsDialogOpen(true);\r\n    const closeConfirmationDialog = () => setIsDialogOpen(false);\r\n\r\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { id } = character;\r\n        const { value } = e.target;\r\n\r\n        setMaxHp(value);\r\n        updateCharacterMaxHp(id, parseInt(value) || 0);\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        const { id } = character;\r\n        deleteCharacter(id);\r\n        closeConfirmationDialog();\r\n    };\r\n\r\n    const { name, avatarUrl } = character;\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedCharacterListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <TextField label=\"Max HP\" type=\"number\" value={maxHp} onChange={onInputChange} style={{ width: '64px' }} />\r\n                <IconButton onClick={openConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedCharacterListItemContainer>\r\n            <Dialog open={isDialogOpen} onClose={closeConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved characters. You will only be able to undo this by adding this character again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCharacterMaxHp, deleteCharacter })(SavedCharacterListItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addCharacterByUrl } from '../../redux/actions/characters';\r\nimport { State, Character } from '../../redux/types';\r\nimport { SavedCharacterListItem } from '../SavedCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCharacterByUrl: (url: string, maxHitPoints: number) => void;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small?: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, characters, addCharacterByUrl }) => {\r\n    const [isNewCharacterDialogOpen, setIsNewCharacterDailogOpen] = useState<boolean>(false);\r\n    const [characterURL, setCharacterURL] = useState<string>('');\r\n    const [characterMaxHitPoints, setCharacterMaxHitPoints] = useState<string>('');\r\n\r\n    const openNewCharacterDialog = () => setIsNewCharacterDailogOpen(true);\r\n    const closeNewCharacterDialog = () => setIsNewCharacterDailogOpen(false);\r\n\r\n    const handleCharacterURLChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterURL(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterMaxHitPoints(e.target.value);\r\n\r\n    const handleImportConfirmed = () => {\r\n        closeNewCharacterDialog();\r\n        addCharacterByUrl(characterURL, parseInt(characterMaxHitPoints) || 0);\r\n        setCharacterURL('');\r\n        setCharacterMaxHitPoints('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <SavedCharacterListItem key={c.id} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved characters.</Typography>\r\n            }\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewCharacterDialog}>Add character</Button>\r\n            <Dialog open={isNewCharacterDialogOpen} onClose={closeNewCharacterDialog}>\r\n                <DialogTitle>Import new character from D&D Beyond</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Paste a link to the character you want to add in the input field below. Make sure the character privacy is set to \"Public\", otherwise it will not be imported.\r\n                        <br /> <br />\r\n                        Optionally, specify character's maximum hit points. You will be able to change them later.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Character URL\" value={characterURL} onChange={handleCharacterURLChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={characterMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewCharacterDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleImportConfirmed} color=\"primary\" variant=\"contained\" disabled={!characterURL}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.characters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCharacterByUrl })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedNPCListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :first-child {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\nimport { NPC } from '../../redux/types';\r\nimport { updateNPCSafe, deleteNPC, UpdateNPCProps } from '../../redux/actions/npcs';\r\nimport { SavedNPCListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateNPCSafe: (props: UpdateNPCProps) => void;\r\n    deleteNPC: typeof deleteNPC;\r\n}\r\n\r\nexport interface SavedNPCListItemProps {\r\n    npc: NPC;\r\n}\r\n\r\nconst SavedNPCListItem: React.FC<SavedNPCListItemProps & DispatchProps> = ({ npc, updateNPCSafe, deleteNPC }) => {\r\n    const { name, avatarUrl, maxHitPoints } = npc;\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState<boolean>(false);\r\n    const [isDeleteConfirmationDialogOpen, setIsDeleteConfirmationDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>(name);\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>(maxHitPoints.toString());\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>(avatarUrl || '');\r\n\r\n    const openEditDialog = () => setIsEditDialogOpen(true);\r\n    const closeEditDialog = () => setIsEditDialogOpen(false);\r\n\r\n    const openDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(true);\r\n    const closeDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleEditConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        updateNPCSafe({\r\n            originalNPC: npc,\r\n            updatedNPC: { name: NPCName, avatarUrl: NPCAvatarUrl, maxHitPoints },\r\n        });\r\n        closeEditDialog();\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        closeDeleteConfirmationDialog();\r\n        deleteNPC(npc);\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedNPCListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <IconButton onClick={openEditDialog}>\r\n                    <Edit />\r\n                </IconButton>\r\n                <IconButton onClick={openDeleteConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedNPCListItemContainer>\r\n            <Dialog open={isEditDialogOpen} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Change name, max hit points or avatar url of your NPC.</DialogContentText>\r\n                    <TextField fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeEditDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleEditConfirmed} color=\"primary\" variant=\"contained\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isDeleteConfirmationDialogOpen} onClose={closeDeleteConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved NPCs. You will only be able to undo this by creating this NPC again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateNPCSafe, deleteNPC })(SavedNPCListItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addNPCSafe } from '../../redux/actions/npcs';\r\nimport { State, NPC } from '../../redux/types';\r\nimport { SavedNPCListItem } from '../SavedNPCListItem';\r\n\r\ninterface StateProps {\r\n    npcs: NPC[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addNPCSafe: (npc: NPC) => void;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small?: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, npcs, addNPCSafe }) => {\r\n    const [isNewNPCDialogOpen, setIsNewNPCDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>('');\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>('');\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>('');\r\n\r\n    const openNewNPCDialog = () => setIsNewNPCDialogOpen(true);\r\n    const closeNewNPCDialog = () => setIsNewNPCDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleNewNPCConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        addNPCSafe({ name: NPCName, maxHitPoints, avatarUrl: NPCAvatarUrl });\r\n\r\n        closeNewNPCDialog();\r\n        setNPCName('');\r\n        setNPCMaxHitPoints('');\r\n        setNPCAvatarUrl('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {npcs.length > 0\r\n                ? npcs.map(c => <SavedNPCListItem key={c.name} npc={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved NPCs.</Typography>\r\n            }\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewNPCDialog}>Add NPC</Button>\r\n            <Dialog open={isNewNPCDialogOpen} onClose={closeNewNPCDialog}>\r\n                <DialogTitle>Create new NPC</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Choose a name for your NPC and specify maximum hit points. Optionally, specify an avatar url or pick one of the default avatars.\r\n                        <br /> <br />\r\n                        It is not possible to have several NPCs with the same name.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewNPCDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleNewNPCConfirmed} color=\"primary\" variant=\"contained\" disabled={!NPCName || !NPCMaxHitPoints}>Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    npcs: (state && state.npcs) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNPCSafe })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const NewEncCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Checkbox, Paper, Typography, TextField } from '@material-ui/core';\r\nimport { Character, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addCharacterToEncounter, removeCharacterFromEncounter, updateCharacterInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncCharacterListItemContainer } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCharacterToEncounter: typeof addCharacterToEncounter;\r\n    removeCharacterFromEncounter: typeof removeCharacterFromEncounter;\r\n    updateCharacterInitiative: typeof updateCharacterInitiative;\r\n}\r\n\r\nexport interface NewEncCharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst NewEncCharacterListItem = ({\r\n    character,\r\n    encounter,\r\n    addCharacterToEncounter,\r\n    removeCharacterFromEncounter,\r\n    updateCharacterInitiative,\r\n}: NewEncCharacterListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const isCharacterSelected = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        return Object.keys(encounter.characters).some(key => encounter.characters[parseInt(key)].name === character.name);\r\n    }, [character, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!isCharacterSelected) {\r\n            setInitiative('');\r\n        }\r\n    }, [isCharacterSelected]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.characters).find(k => encounter.characters[parseInt(k)].name === character.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (isCharacterSelected) {\r\n            removeCharacterFromEncounter(character);\r\n            setInitiative('');\r\n        } else {\r\n            addCharacterToEncounter(character);\r\n\r\n            const initiativeInt = parseInt(initiative);\r\n            if (!isNaN(initiativeInt)) {\r\n                updateCharacterInitiative(character, initiativeInt);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateCharacterInitiative(character, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !isCharacterSelected,\r\n        label: isCharacterSelected ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncCharacterListItemContainer>\r\n                <Checkbox disabled={!encounter} checked={isCharacterSelected} color=\"primary\" onClick={handleCheckboxClick} />\r\n                <Typography variant={small ? 'body1' : 'h6'}>{character.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n            </NewEncCharacterListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCharacterToEncounter, removeCharacterFromEncounter, updateCharacterInitiative })(NewEncCharacterListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, Character } from '../../redux/types';\r\nimport { NewEncCharacterListItem } from '../NewEncCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\nconst NewEncCharactersList = ({ characters }: StateProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <NewEncCharacterListItem key={c.id} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved characters.</Typography>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.characters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\nimport { Palette } from '@material-ui/core/styles/createPalette';\r\n\r\nexport const NewEncNPCListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n\r\nexport interface NewEncNPCCounterProps {\r\n    palette: Palette;\r\n    children: number | null;\r\n}\r\n\r\nexport const NewEncNPCCounter = styled.div<NewEncNPCCounterProps>`\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 12px;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    color: white;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    transition: background-color 300ms, border-color 300ms;\r\n\r\n    ${props => props.children ? `\r\n        background-color: ${props.palette.primary.main};\r\n        border: 2px solid rgba(0, 0, 0, ${props.palette.primary.main});\r\n    ` : `\r\n        border: 2px solid rgba(0, 0, 0, 0.54);\r\n    `}\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, reduce, isNaN } from 'lodash/fp';\r\nimport { Paper, Typography, TextField, IconButton, useTheme, useMediaQuery } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { NPC, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncNPCListItemContainer, NewEncNPCCounter } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addNPCToEncounter: typeof addNPCToEncounter;\r\n    removeNPCFromEncounter: typeof removeNPCFromEncounter;\r\n    updateNPCInitiative: typeof updateNPCInitiative;\r\n}\r\n\r\nexport interface NewEncNPCListItemProps {\r\n    npc: NPC;\r\n}\r\n\r\nconst NewEncNPCListItem = ({ npc, encounter, addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative }: NewEncNPCListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const addedNPCCount = useMemo(() => {\r\n        if (!encounter) {\r\n            return null;\r\n        }\r\n\r\n        const count = reduce((accumulator, encNpc) => accumulator + (encNpc.name.startsWith(npc.name) ? 1 : 0), 0, encounter.npcs);\r\n        return count === 0 ? null : count;\r\n    }, [npc, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!addedNPCCount) {\r\n            setInitiative('');\r\n        }\r\n    }, [addedNPCCount]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.npcs).find(k => encounter.npcs[parseInt(k)].name === npc.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleRemoveClick = () => removeNPCFromEncounter(npc);\r\n    const handleAddClick = () => {\r\n        addNPCToEncounter(npc);\r\n\r\n        const initiativeInt = parseInt(initiative);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateNPCInitiative(npc, initiativeInt);\r\n        }\r\n    };\r\n    const handleCounterClick = () => {\r\n        if (!addedNPCCount || addedNPCCount === 0) {\r\n            handleAddClick();\r\n        } else {\r\n            for (let i = 0; i < addedNPCCount; ++i) {\r\n                handleRemoveClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateNPCInitiative(npc, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !addedNPCCount,\r\n        label: !!addedNPCCount ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncNPCListItemContainer>\r\n                <NewEncNPCCounter palette={theme.palette} onClick={handleCounterClick}>\r\n                    {addedNPCCount}\r\n                </NewEncNPCCounter>\r\n                <Typography variant={small ? 'body1' : 'h6'}>{npc.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n                <IconButton size=\"small\" onClick={handleRemoveClick} disabled={!addedNPCCount}>\r\n                    <Remove />\r\n                </IconButton>\r\n                <IconButton size=\"small\" onClick={handleAddClick}>\r\n                    <Add />\r\n                </IconButton>\r\n            </NewEncNPCListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative })(NewEncNPCListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, NPC } from '../../redux/types';\r\nimport { NewEncNPCListItem } from '../NewEncNPCListItem';\r\n\r\ninterface StateProps {\r\n    npcs: NPC[];\r\n}\r\n\r\nconst NewEncNPCsList = ({ npcs }: StateProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            {npcs.length > 0\r\n                ? npcs.map(n => <NewEncNPCListItem key={n.name} npc={n} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved NPCs.</Typography>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    npcs: (state && state.npcs) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncNPCsList);\r\n","import styled from 'styled-components';\r\n\r\nexport const TextNotesContainer = styled.div`\r\n    position: relative;\r\n    width: 98vw;\r\n    height: 128px;\r\n    margin-top: 8px;\r\n`;\r\n\r\nexport const TextNotesTextFieldWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 32px);\r\n    height: calc(100% - 32px);\r\n    margin: 16px;\r\n`;\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { SquareFrame } from '../Frame';\r\nimport { TextNotesContainer, TextNotesTextFieldWrapper } from './style';\r\n\r\nconst TextNotes = () => {\r\n    return (\r\n        <TextNotesContainer>\r\n            <TextNotesTextFieldWrapper>\r\n                <TextField multiline rows=\"5\" style={{ width: '100%' }} />\r\n            </TextNotesTextFieldWrapper>\r\n            <SquareFrame />\r\n        </TextNotesContainer>\r\n    );\r\n};\r\n\r\nexport default TextNotes;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ImageProps {\r\n    opacity: number;\r\n    src?: string;\r\n}\r\n\r\nexport const Image = styled.div<ImageProps>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: ${props => props.opacity};\r\n    background-image: url(\"${props => props.src}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image } from './style';\r\n\r\nexport interface AnimatedImageProps {\r\n    src?: string;\r\n    transitionDuration?: number;\r\n}\r\n\r\nconst AnimatedImage: React.FC<AnimatedImageProps> = ({ src, transitionDuration = 100 }) => {\r\n    const firstImageRef = useRef<HTMLDivElement | null>(null);\r\n    const secondImageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const [opacity, setOpacity] = useState(1);\r\n    const [firstImageSrc, setFirstImageSrc] = useState(src);\r\n    const [secondImageSrc, setSecondImageSrc] = useState<string | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        const { current: firstImage } = firstImageRef;\r\n        const { current: secondImage } = secondImageRef;\r\n        if (firstImage && secondImage) {\r\n            firstImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            secondImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            setSecondImageSrc(src);\r\n            window.requestAnimationFrame(() => {\r\n                setOpacity(0);\r\n                setTimeout(() => {\r\n                    firstImage.style.transition = '';\r\n                    secondImage.style.transition = '';\r\n                    setFirstImageSrc(src);\r\n                    window.requestAnimationFrame(() => {\r\n                        setOpacity(1);\r\n                    });\r\n                }, transitionDuration);\r\n            });\r\n        }\r\n    }, [src, transitionDuration]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Image opacity={opacity} src={firstImageSrc} ref={firstImageRef} />\r\n            <Image opacity={1 - opacity} src={secondImageSrc} ref={secondImageRef} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AnimatedImage;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTheme, useMediaQuery, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Typography, Menu, MenuItem } from '@material-ui/core';\r\nimport { People, Close, Send, MoreVert, Edit, HighlightOff, Fullscreen, FullscreenExit } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { closeErrorDialog } from '../../redux/actions/ui';\r\nimport { Navbar } from '../Navbar';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { EntityList } from '../EntityList';\r\nimport { Numpad } from '../Numpad';\r\nimport { Notes } from '../Notes';\r\nimport { RootComponentContainer, RootComponentWrapper, ContentContainer, ListAndNumpadContainer, NotesContainer } from './style';\r\nimport { DividedList } from '../DividedList';\r\nimport { SavedCharactersList } from '../SavedCharactersList';\r\nimport { SavedNPCsList } from '../SavedNPCsList';\r\nimport { NewEncCharactersList } from '../NewEncCharactersList';\r\nimport { NewEncNPCsList } from '../NewEncNPCsList';\r\nimport { resetEncounter, createEncounter, nextTurn, prevTurn } from '../../redux/actions/encounter';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { TextNotes } from '../TextNotes';\r\nimport { AnimatedImage } from '../AnimatedImage';\r\n\r\nexport interface StateProps {\r\n    isErrorDialogOpen: boolean;\r\n    errorMessage?: JSX.Element;\r\n    encounter: EncounterState | null;\r\n}\r\n\r\nexport interface DispatchProps {\r\n    closeErrorDialog: typeof closeErrorDialog;\r\n    resetEncounter: typeof resetEncounter;\r\n    createEncounter: typeof createEncounter;\r\n    nextTurn: typeof nextTurn;\r\n    prevTurn: typeof prevTurn;\r\n}\r\n\r\nconst RootComponent: React.FC<StateProps & DispatchProps> = ({\r\n    isErrorDialogOpen,\r\n    errorMessage,\r\n    encounter,\r\n    closeErrorDialog,\r\n    resetEncounter,\r\n    createEncounter,\r\n    nextTurn,\r\n    prevTurn,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const short = useMediaQuery('(max-height: 830px)');\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n\r\n    const [isCharacterDialogOpen, setIsCharacterDialogOpen] = useState(false);\r\n    const [isNewEncounterDialogOpen, setIsNewEncounterDialogOpen] = useState(false);\r\n    const [isCreatingNewEncounter, setIsCreatingNewEncounter] = useState(false);\r\n    const [isFullscreen, setIsFullscreen] = useState(false);\r\n\r\n    const canNewEncounterBeCreated = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        const { characters, npcs, initiativeById } = encounter;\r\n        const allCharactersHaveInitiative = Object.keys(characters).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n        const allNpcsHaveInitiative = Object.keys(npcs).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n\r\n        return allCharactersHaveInitiative && allNpcsHaveInitiative && Object.keys(initiativeById).length > 0;\r\n    }, [encounter]);\r\n\r\n    const currentBackgroundUrl = useMemo(() => {\r\n        if (!encounter) {\r\n            return undefined;\r\n        }\r\n\r\n        const { characters, currentTurnKey } = encounter;\r\n        const currentCharacter = characters[currentTurnKey];\r\n        if (currentCharacter) {\r\n            return currentCharacter.defaultBackdrop.largeBackdropAvatarUrl;\r\n        }\r\n\r\n        return undefined;\r\n    }, [encounter]);\r\n\r\n    const toggleFullscreen = () => {\r\n        if (isFullscreen) {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n                setIsFullscreen(false);\r\n            }\r\n        } else {\r\n            const element = document.documentElement;\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n                setIsFullscreen(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const openMenu = (event: React.MouseEvent<HTMLButtonElement>) => setMenuAnchorElement(event.currentTarget);\r\n    const closeMenu = () => setMenuAnchorElement(null);\r\n\r\n    const openCharacterDialog = () => setIsCharacterDialogOpen(true);\r\n    const closeCharacterDialog = () => setIsCharacterDialogOpen(false);\r\n\r\n    const openNewEncounterDialog = () => {\r\n        if (!!encounter && encounter.currentId === 0) {\r\n            setIsCreatingNewEncounter(true);\r\n        } else {\r\n            setIsCreatingNewEncounter(false);\r\n        }\r\n        setIsNewEncounterDialogOpen(true);\r\n    };\r\n    const closeNewEncounterDialog = () => setIsNewEncounterDialogOpen(false);\r\n\r\n    const handleNewEncounterCancel = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            resetEncounter();\r\n        }\r\n    };\r\n\r\n    const handleNewEncounterOk = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            createEncounter();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RootComponentContainer>\r\n            {small ? null : <AnimatedImage src={currentBackgroundUrl} />}\r\n            <Navbar>\r\n                <IconButton color=\"inherit\" onClick={openMenu}>\r\n                    <MoreVert />\r\n                </IconButton>\r\n                {(encounter && encounter.currentId !== 0) ? (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"h5\">Round {encounter.currentRound}</Typography>\r\n                        <div style={{ flex: '1' }} />\r\n                        <Tooltip title=\"Previous turn\">\r\n                            <IconButton color=\"inherit\" onClick={prevTurn}>\r\n                                <Send style={{ transform: 'rotateY(180deg)', opacity: '0.7' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Button disableElevation variant=\"contained\" color=\"primary\" endIcon={<Send />} onClick={nextTurn}>Next turn</Button>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <Typography variant=\"h5\">No encounter</Typography>\r\n                )}\r\n            </Navbar>\r\n            <Menu anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu}>\r\n                <MenuItem onClick={() => { openCharacterDialog(); closeMenu(); }}>\r\n                    <People color=\"secondary\" style={{ marginRight: '16px' }} /> Saved characters\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { openNewEncounterDialog(); closeMenu(); }}>\r\n                    <Edit color=\"secondary\" style={{ marginRight: '16px' }} /> {!!encounter && encounter.currentId === 0 ? 'Create new encounter' : 'Edit current encounter'}\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { resetEncounter(); closeMenu(); }} disabled={!!encounter && encounter.currentId === 0}>\r\n                    <HighlightOff color=\"secondary\" style={{ marginRight: '16px' }} /> Clear current encounter\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { toggleFullscreen(); closeMenu(); }}>\r\n                    {isFullscreen ? <FullscreenExit color=\"secondary\" style={{ marginRight: '16px' }} /> : <Fullscreen color=\"secondary\" style={{ marginRight: '16px' }} />} Toggle fullscreen\r\n                </MenuItem>\r\n            </Menu>\r\n            <RootComponentWrapper>\r\n                <ContentContainer small={small}>\r\n                    {small\r\n                        ? (\r\n                            <React.Fragment>\r\n                                <EntityList fullScreen />\r\n                                <NotesContainer>\r\n                                    <TextNotes />\r\n                                </NotesContainer>\r\n                            </React.Fragment>\r\n                        )\r\n                        : (\r\n                            <React.Fragment>\r\n                                <ListAndNumpadContainer>\r\n                                    <EntityList short={short} />\r\n                                    <Numpad short={short} />\r\n                                </ListAndNumpadContainer>\r\n                                <NotesContainer>\r\n                                    <Notes short={short} />\r\n                                </NotesContainer>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                </ContentContainer>\r\n            </RootComponentWrapper>\r\n            <Dialog fullScreen open={isCharacterDialogOpen} onClose={closeCharacterDialog}>\r\n                <Navbar color=\"primary\">\r\n                    <IconButton color=\"inherit\" onClick={closeCharacterDialog}>\r\n                        <Close />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '8px' }}>\r\n                        Saved Characters\r\n                    </Typography>\r\n                </Navbar>\r\n                <DividedList titles={['Characters', 'NPCs']} marginBottomOverride=\"60\">\r\n                    <SavedCharactersList />\r\n                    <SavedNPCsList />\r\n                </DividedList>\r\n            </Dialog>\r\n            <Dialog maxWidth=\"lg\" fullWidth={!small} fullScreen={small} open={isNewEncounterDialogOpen}>\r\n                {small ? (\r\n                    <Navbar color=\"primary\">\r\n                        <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                            {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                        </Typography>\r\n                    </Navbar>\r\n                ) : (\r\n                    <DialogTitle>\r\n                        {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                    </DialogTitle>\r\n                )}\r\n                <DialogContent>\r\n                    <DividedList titles={['Characters', 'NPCs']}>\r\n                        <NewEncCharactersList />\r\n                        <NewEncNPCsList />\r\n                    </DividedList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"secondary\" onClick={handleNewEncounterCancel}>Cancel</Button>\r\n                    <Button disabled={!canNewEncounterBeCreated} variant=\"contained\" color=\"primary\" onClick={handleNewEncounterOk}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isErrorDialogOpen} onClose={closeErrorDialog}>\r\n                <DialogTitle>Error</DialogTitle>\r\n                <DialogContent>\r\n                    {errorMessage ? <DialogContentText>{errorMessage}</DialogContentText> : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={closeErrorDialog}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </RootComponentContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    isErrorDialogOpen: (state.ui && state.ui.errorDialog.isOpen) || false,\r\n    errorMessage: state.ui && state.ui.errorDialog.message,\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeErrorDialog, resetEncounter, createEncounter, nextTurn, prevTurn })(RootComponent);\r\n","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { persistor, store } from './redux';\r\nimport { RootComponent, LoadingView } from './components';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#b13735',\r\n        },\r\n        secondary: {\r\n            main: '#555',\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: 'Cairo',\r\n    },\r\n    breakpoints: {\r\n        values: {\r\n            xs: 0,\r\n            sm: 500,\r\n            md: 960,\r\n            lg: 1280,\r\n            xl: 1920,\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => (\r\n    <ThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <PersistGate loading={<LoadingView />} persistor={persistor}>\r\n                <RootComponent />\r\n            </PersistGate>\r\n        </Provider>\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(<App />);\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}