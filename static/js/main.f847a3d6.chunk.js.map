{"version":3,"sources":["helpers/dnd-beyond/getBeyondCharacterStats.ts","helpers/getRequestErrorMessage.tsx","redux/actions/ui/actionCreators.ts","redux/actions/ui/types.ts","redux/actions/encounter/actionCreators.ts","redux/actions/encounter/types.ts","redux/actions/beyondCharacters/actionCreators.ts","redux/actions/beyondCharacters/types.ts","redux/reducers/beyondCharacters.ts","redux/actions/customCharacters/actionCreators.tsx","redux/actions/customCharacters/types.ts","redux/reducers/customCharacters.ts","redux/reducers/ui.ts","components/Tooltip/Tooltip.tsx","components/Concentration/style.ts","components/Concentration/Concentration.tsx","components/Frame/style.ts","components/Frame/svg/square.tsx","components/Frame/svg/scroll.tsx","components/Frame/svg/fancy.tsx","components/Frame/Frame.tsx","components/EntityListItem/style.ts","components/EntityListItem/EntityListItem.tsx","helpers/sortEntitiesWithInitiative.ts","redux/reducers/encounter.ts","redux/reducers/index.ts","redux/index.ts","components/LoadingView/style.ts","components/LoadingView/LoadingView.tsx","components/AnimatedImage/style.ts","components/AnimatedImage/AnimatedImage.tsx","components/DividedList/style.tsx","components/DividedList/DividedList.tsx","components/EntityList/style.ts","components/EntityList/EntityList.tsx","components/Navbar/style.ts","components/Navbar/Navbar.tsx","components/NewEncBeyondCharacterListItem/style.ts","components/NewEncBeyondCharacterListItem/NewEncBeyondCharacterListItem.tsx","components/NewEncCustomCharacterListItem/style.ts","components/NewEncCustomCharacterListItem/NewEncCustomCharacterListItem.tsx","components/NewEncBeyondCharactersList/NewEncBeyondCharactersList.tsx","components/NewEncCustomCharactersList/NewEncCustomCharactersList.tsx","components/Notes/style.ts","components/Notes/Notes.tsx","components/Numpad/style.ts","components/Numpad/Numpad.tsx","components/SavedBeyondCharacterListItem/style.ts","components/SavedBeyondCharacterListItem/SavedBeyondCharacterListItem.tsx","components/SavedBeyondCharactersList/SavedBeyondCharactersList.tsx","components/SavedCustomCharacterListItem/style.ts","components/SavedCustomCharacterListItem/SavedCustomCharacterListItem.tsx","components/SavedCustomCharactersList/style.ts","components/SavedCustomCharactersList/SavedCustomCharactersList.tsx","components/TextNotes/style.ts","components/TextNotes/TextNotes.tsx","components/RootComponent/style.ts","components/RootComponent/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getBeyondCharacterStats","a","characterId","jsonUrl","axios","method","url","withCredentials","response","data","getRequestErrorMessage","error","status","Fragment","message","Link","href","openErrorDialog","type","payload","updateCustomCharacterHitPoints","key","update","temp","addBeyondCharacterByUrl","maxHitPoints","dispatch","getState","split","length","beyondCharacters","every","c","id","toString","then","stats","name","removedHitPoints","temporaryHitPoints","deathSaves","avatarUrl","themeColor","defaultBackdrop","addBeyondCharacter","updateBeyondCharacterById","parseInt","find","updatedBeyondCharacter","updateBeyondCharacter","character","updateEncounterBeyondCharacterById","initialState","state","action","prevBeyondCharacter","index","indexOf","slice","updateMaxHpById","maxHp","deleteById","addCustomCharacter","updateCustomCharacter","props","deleteCustomCharacter","originalCharacter","updatedCharacter","errorDialog","isOpen","withStyles","theme","tooltip","fontSize","backgroundColor","palette","secondary","main","arrow","color","Tooltip","ConcentrationContainer","styled","div","small","ConcentrationLetter","selected","ConcentrationDuration","connect","encounter","updateEntityConcentration","since","entityKey","isInCurrentTurn","durationElementRef","useRef","useEffect","durationElement","current","style","transform","useMemo","undefined","concentrationByKey","duration","currentRound","useState","isDurationVisible","setIsDurationVisible","tooltipText","ending","title","onClick","window","requestAnimationFrame","setTimeout","ref","FrameContainer","FrameTopRowContainer","FrameMiddleRowContainer","FrameBottomRowContainer","FrameMiddleFill","width","height","CornerBaseStyles","css","TopLeftCornerStyles","TopRightCornerStyles","BottomLeftCornerStyles","BottomRightCornerStyles","TopStyles","BottomStyles","LeftStyles","RightStyles","getSquarePart","className","data-name","xmlns","viewBox","fill","zIndex","transition","d","boxShadow","SquareCorner","SquareSide","getScrollPart","points","ScrollCorner","ScrollTop","ScrollSide","FancyCorner","FancySide","frameFactory","partSize","Corner","Top","Side","FrameTopLeftCorner","FrameTopRightCorner","FrameBottomLeftCorner","FrameBottomRightCorner","FrameTop","FrameBottom","FrameLeft","FrameRight","forceUpdateProp","containerRef","topPartWidth","setTopPartWidth","sidePartHeight","setSidePartHeight","addEventListener","handleResize","removeEventListener","container","Math","max","clientWidth","clientHeight","framePartProps","SquareFrame","borderTop","boxSizing","ScrollFrame","FancyFrame","EntityType","EntityListItemScrollContainer","EntityListItemContainer","EntityListItemWrapper","isSelected","AvatarWrapper","Avatar","AvatarMui","NameAndSavesContainer","Name","SavesContainer","SaveItem","fail","enabled","HitPointsContainer","HitPoints","HitPointMenuContentWrapper","HitPointMenuButtonWrapper","selectedKey","selectedEntityKey","selectEntity","isCurrentlyFirst","useTheme","useMediaQuery","breakpoints","down","menuAnchorElement","setMenuAnchorElement","menuInputValue","setMenuInputValue","BeyondCharacter","closeMenu","handleClick","src","variant","failCount","successCount","flex","CustomCharacter","e","currentTarget","Menu","anchorEl","open","onClose","marginTop","TextField","label","autoFocus","value","onChange","target","Button","updateHP","isNaN","abs","ThemeProvider","createMuiTheme","primary","sortEntitiesWithInitiative","customCharacters","initiativeById","currentTurnKey","sortedByInitiative","keys","forEach","keyString","initiative","push","entity","dividerAfterThisOne","sort","e1","e2","shift","currentId","currentTurnInitiative","customCharacterHitPoints","textNotesByKey","imgNotesByKey","characterNumber","filter","startsWith","removeBeyondCharacter","characterKey","findKey","omit","removeCustomCharacter","addedCustomCharactersKeys","latestAddedCharacter","reduce","accumulator","number","splitByHash","updateBeyondCharacterInitiative","updateCustomCharacterInitiative","characterKeys","initiatives","recalculateCurrentTurnKey","findMaxInitiative","maxInitiative","beyondKey","beyondInitiative","customKey","customInitiative","findWithInitiative","keyWithInitiative","nextTurn","sortedEntities","round","prevTurn","newTemp","newRemoved","min","k","rootReducer","combineReducers","ui","text","img","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","LoadingViewBackground","LoadingViewContainer","LoadingViewImage","LoadingViewText","LoadingView","process","Image","opacity","AnimatedImage","transitionDuration","firstImageRef","secondImageRef","setOpacity","firstImageSrc","setFirstImageSrc","secondImageSrc","setSecondImageSrc","firstImage","secondImage","animationRequest1Id","timeoutId","animationRequest2Id","cancelAnimationFrame","clearTimeout","DividedListContainer","DividedListWrapper","DividedListSublistContainer","Divider","marginTopOverride","marginBottomOverride","DividedList","titles","children","filteredChildren","Typography","React","cloneElement","map","child","idx","EntityListContainer","fullWidth","fullScreen","short","EntityListWrapper","EntityListFade","EntityListBottomFade","entitiesByInitiative","dividerIndex","findIndex","entityListItemProps","NavbarContainer","Navbar","other","AppBar","position","minHeight","Toolbar","paddingLeft","paddingRight","NewEncBeyondCharacterListItemContainer","addBeyondCharacterToEncounter","removeBeyondCharacterFromEncounter","setInitiative","isCharacterSelected","Object","some","savedInitiative","textFieldProps","disabled","initiativeInt","Paper","elevation","Checkbox","checked","flexGrow","NewEncCustomCharacterListItemContainer","Counter","addCustomCharacterToEncounter","removeCustomCharacterFromEncounter","addedCharactersCount","count","handleRemoveClick","handleAddClick","i","IconButton","size","Remove","Add","characters","navigator","onLine","NotesContainer","NotesCanvas","canvas","imageNotes","currentKey","updateImgNotes","canvasRef","prevPointerPosition","prevKey","setPrevKey","canvasSize","setCanvasSize","updateCanvasSize","loadNote","toDataURL","note","getContext","clearRect","drawImage","setAttribute","getBoundingClientRect","canvasProps","onPointerMove","ctx","pressure","buttons","clientX","clientY","x","y","lineThickness","beginPath","moveTo","lineTo","lineWidth","stroke","onPointerUp","NumpadFrameContainer","NumpadContainer","NumpadValueContainer","NumpadValueWrapper","NumpadValue","NumpadButtonContainer","NumpadButtonValueContainer","NumpadButtonValue","NumpadButton","padding","setBackgroundColor","currentValue","setCurrentValue","handleButtonClick","v","handleSubmit","sign","KeyboardArrowDown","KeyboardArrowUp","SavedBeyondCharacterListItemContainer","Grow","updateBeyondCharacterMaxHp","deleteBeyondCharacter","setMaxHp","isDialogOpen","setIsDialogOpen","closeConfirmationDialog","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","isNewCharacterDialogOpen","setIsNewCharacterDailogOpen","characterURL","setCharacterURL","characterMaxHitPoints","setCharacterMaxHitPoints","closeNewCharacterDialog","margin","SavedCustomCharacterListItemContainer","updateCustomCharacterSafe","isEditDialogOpen","setIsEditDialogOpen","isDeleteConfirmationDialogOpen","setIsDeleteConfirmationDialogOpen","nameInputValue","setnameInputValue","hitPointsInputValue","setHitPointsInputValue","avatarUrlInputValue","setAvatarUrlInputValue","closeEditDialog","closeDeleteConfirmationDialog","Edit","DefaultAvatarList","defaultAvatarSources","addCustomCharacterSafe","setIsNewCharacterDialogOpen","characterName","setCharacterName","characterAvtarUrl","setCharacterAvtarUrl","TextNotesContainer","rows","TextNotesTextFieldWrapper","updateTextNotes","notesValue","multiline","RootComponentContainer","RootComponentWrapper","ContentContainer","ListAndNumpadContainer","isErrorDialogOpen","errorMessage","hasBeyondCharacters","closeErrorDialog","resetEncounter","createEncounter","isSavedCharactersDialogOpen","setIsSavedCharactersDialogOpen","isNewEncounterDialogOpen","setIsNewEncounterDialogOpen","isCreatingNewEncounter","setIsCreatingNewEncounter","isKeyboardMode","setIsKeyboardMode","canNewEncounterBeCreated","allBeyondHaveInitiative","id2","allCustomHaveInitiative","currentBackgroundUrl","currentBeyondCharacter","largeBackdropAvatarUrl","closeBeyondCharacterDialog","closeNewEncounterDialog","isFullscreen","document","fullscreenElement","event","MoreVert","Send","disableElevation","endIcon","MenuItem","People","marginRight","HighlightOff","exitFullscreen","element","documentElement","requestFullscreen","toggleFullscreen","FullscreenExit","Fullscreen","TouchApp","Keyboard","display","justifyContent","alignItems","paddingTop","Close","marginLeft","maxWidth","typography","fontFamily","values","xs","sm","md","lg","xl","App","loading","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","origin","fetch","headers","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f847a3d6.chunk.js","sourcesContent":["import axios from 'axios';\nimport { DnDBeyondCharacter } from './types';\n\nexport interface GetCharacterStatsProps {\n    characterId: string;\n}\n\nexport interface CharacterStats {\n    currentHp: number;\n    maxHp: number;\n    tempHp: number;\n    armorClass: number;\n    passivePerception: number;\n}\n\nconst getBeyondCharacterStats = async ({ characterId }: GetCharacterStatsProps): Promise<DnDBeyondCharacter> => {\n    const jsonUrl = `https://www.dndbeyond.com/character/${characterId}/json`;\n\n    const response = await axios({ method: 'GET', url: jsonUrl, withCredentials: false });\n    return response.data as DnDBeyondCharacter;\n};\n\nexport default getBeyondCharacterStats;\n","import React from 'react';\r\nimport { AxiosError } from 'axios';\r\nimport { Link } from '@material-ui/core';\r\n\r\nexport const getRequestErrorMessage = (error: AxiosError): JSX.Element => {\r\n    if (error.response) {\r\n        switch (error.response.status) {\r\n        case 404:\r\n            return (\r\n                <React.Fragment>\r\n                    Invalid character URL, page not found. Make sure that the ID is correct and that character privacy is set to \"Public\".\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n        \r\n        case 403:\r\n            return (\r\n                <React.Fragment>\r\n                    D&D Beyond blocked a request because it thinks I'm a robot. Opening <Link href=\"https://www.dndbeyond.com/\">dndbeyond.com</Link> in Incognito mode and passing the captcha there usually helps.\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n\r\n        default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            Request was unsuccessful. Most likely your browser is blocking Cross-Origin requests (CORS). Make sure you have a CORS-allowing extension installed or disable D&D Beyond integration in settings.\r\n            <br /><br />\r\n            Error message: {error.message}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n} from './types';\r\n\r\nexport const openErrorDialog = (message: JSX.Element) => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: message,\r\n});\r\n\r\nexport const closeErrorDialog = () => ({\r\n    type: ERROR_DIALOG_CLOSED,\r\n});\r\n\r\nexport const openCorsDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Cors blah blah',\r\n});\r\n\r\nexport const openCaptchaDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Captcha kekaptcha',\r\n});\r\n","export const CORS_DIALOG_OPENED = 'CORS_DIALOG_OPENED';\r\nexport const CORS_DIALOG_CLOSED = 'CORS_DIALOG_CLOSED';\r\nexport const CAPTCHA_DIALOG_OPENED = 'CAPTCHA_DIALOG_OPENED';\r\nexport const CAPTCHA_DIALOG_CLOSED = 'CAPTCHA_DIALOG_CLOSED';\r\nexport const ERROR_DIALOG_OPENED = 'ERROR_DIALOG_OPENED';\r\nexport const ERROR_DIALOG_CLOSED = 'ERROR_DIALOG_CLOSED';\r\n\r\nexport interface CorsDialogOpenedAction {\r\n    type: typeof CORS_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CorsDialogClosedAction {\r\n    type: typeof CORS_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface CaptchaDialogOpenedAction {\r\n    type: typeof CAPTCHA_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CaptchaDialogClosedAction {\r\n    type: typeof CAPTCHA_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface ErrorDialogOpenedAction {\r\n    type: typeof ERROR_DIALOG_OPENED;\r\n    payload: JSX.Element;\r\n}\r\n\r\nexport interface ErrorDialogClosedAction {\r\n    type: typeof ERROR_DIALOG_CLOSED;\r\n}\r\n\r\nexport type UIActionType = CorsDialogOpenedAction | CorsDialogClosedAction | CaptchaDialogOpenedAction | CaptchaDialogClosedAction | ErrorDialogOpenedAction | ErrorDialogClosedAction;\r\n","import { BeyondCharacter, CustomCharacter } from '../../types';\r\nimport {\r\n    ENC_BEYOND_CHARACTER_ADDED,\r\n    ENC_CUSTOM_CHARACTER_ADDED,\r\n    ENC_BEYOND_CHARACTER_REMOVED,\r\n    ENC_CUSTOM_CHARACTER_REMOVED,\r\n    ENC_RESET,\r\n    ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_CREATED,\r\n    ENC_NEXT_TURN,\r\n    ENC_PREV_TURN,\r\n    ENC_ENTITY_SELECTED,\r\n    ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED,\r\n    ENC_TEXT_NOTES_UPDATED,\r\n    ENC_IMG_NOTES_UPDATED,\r\n    ENC_ENTITY_CONCENTRATION_UPDATED,\r\n    ENC_BEYOND_CHARACTER_UPDATED_BY_ID,\r\n} from './types';\r\n\r\nexport const addBeyondCharacterToEncounter = (character: BeyondCharacter) => ({\r\n    type: ENC_BEYOND_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const addCustomCharacterToEncounter = (character: CustomCharacter) => ({\r\n    type: ENC_CUSTOM_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const removeBeyondCharacterFromEncounter = (character: BeyondCharacter) => ({\r\n    type: ENC_BEYOND_CHARACTER_REMOVED,\r\n    payload: character,\r\n});\r\n\r\nexport const removeCustomCharacterFromEncounter = (character: CustomCharacter) => ({\r\n    type: ENC_CUSTOM_CHARACTER_REMOVED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateBeyondCharacterInitiative = (character: BeyondCharacter, initiative: number) => ({\r\n    type: ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED,\r\n    payload: { character, initiative },\r\n});\r\n\r\nexport const updateCustomCharacterInitiative = (character: CustomCharacter, initiative: number) => ({\r\n    type: ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED,\r\n    payload: { character, initiative },\r\n});\r\n\r\nexport const resetEncounter = () => ({\r\n    type: ENC_RESET,\r\n});\r\n\r\nexport const createEncounter = () => ({\r\n    type: ENC_CREATED,\r\n});\r\n\r\nexport const nextTurn = () => ({\r\n    type: ENC_NEXT_TURN,\r\n});\r\n\r\nexport const prevTurn = () => ({\r\n    type: ENC_PREV_TURN,\r\n});\r\n\r\nexport const selectEntity = (key: number | null) => ({\r\n    type: ENC_ENTITY_SELECTED,\r\n    payload: { key },\r\n});\r\n\r\nexport const updateCustomCharacterHitPoints = (key: number, update: number, temp = 0) => ({\r\n    type: ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED,\r\n    payload: { key, update, temp },\r\n});\r\n\r\nexport const updateTextNotes = (key: number, text: string) => ({\r\n    type: ENC_TEXT_NOTES_UPDATED,\r\n    payload: { key, text },\r\n});\r\n\r\nexport const updateImgNotes = (key: number, img: string) => ({\r\n    type: ENC_IMG_NOTES_UPDATED,\r\n    payload: { key, img },\r\n});\r\n\r\nexport const updateEntityConcentration = (key: number, since: number | null) => ({\r\n    type: ENC_ENTITY_CONCENTRATION_UPDATED,\r\n    payload: { key, since },\r\n});\r\n\r\nexport const updateEncounterBeyondCharacterById = (id: number, character: BeyondCharacter) => ({\r\n    type: ENC_BEYOND_CHARACTER_UPDATED_BY_ID,\r\n    payload: { id, character },\r\n});\r\n","import { BeyondCharacter, CustomCharacter } from '../../types';\r\n\r\nexport const ENC_BEYOND_CHARACTER_ADDED = 'ENC_BEYOND_CHARACTER_ADDED';\r\nexport const ENC_CUSTOM_CHARACTER_ADDED = 'ENC_CUSTOM_CHARACTER_ADDED';\r\nexport const ENC_BEYOND_CHARACTER_REMOVED = 'ENC_BEYOND_CHARACTER_REMOVED';\r\nexport const ENC_CUSTOM_CHARACTER_REMOVED = 'ENC_CUSTOM_CHARACTER_REMOVED';\r\nexport const ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED = 'ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED';\r\nexport const ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED = 'ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED';\r\nexport const ENC_RESET = 'ENC_RESET';\r\nexport const ENC_CREATED = 'ENC_CREATED';\r\nexport const ENC_NEXT_TURN = 'ENC_NEXT_TURN';\r\nexport const ENC_PREV_TURN = 'ENC_PREV_TURN';\r\nexport const ENC_ENTITY_SELECTED = 'ENC_ENTITY_SELECTED';\r\nexport const ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED = 'ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED';\r\nexport const ENC_TEXT_NOTES_UPDATED = 'ENC_TEXT_NOTES_UPDATED';\r\nexport const ENC_IMG_NOTES_UPDATED = 'ENC_IMG_NOTES_UPDATED';\r\nexport const ENC_ENTITY_CONCENTRATION_UPDATED = 'ENC_ENTITY_CONCENTRATION_UPDATED';\r\nexport const ENC_BEYOND_CHARACTER_UPDATED_BY_ID = 'ENC_BEYOND_CHARACTER_UPDATED_BY_ID';\r\n\r\nexport interface EncBeyondCharacterAddedAction { \r\n    type: typeof ENC_BEYOND_CHARACTER_ADDED;\r\n    payload: BeyondCharacter;\r\n}\r\n\r\nexport interface EncCustomCharacterAddedAction {\r\n    type: typeof ENC_CUSTOM_CHARACTER_ADDED;\r\n    payload: CustomCharacter;\r\n}\r\n\r\nexport interface EncBeyondCharacterRemovedAction { \r\n    type: typeof ENC_BEYOND_CHARACTER_REMOVED;\r\n    payload: BeyondCharacter;\r\n}\r\n\r\nexport interface EncCustomCharacterRemovedAction {\r\n    type: typeof ENC_CUSTOM_CHARACTER_REMOVED;\r\n    payload: CustomCharacter;\r\n}\r\n\r\nexport interface EncBeyondCharacterInitiativeUpdatedAction {\r\n    type: typeof ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED;\r\n    payload: {\r\n        character: BeyondCharacter;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncCustomCharacterInitiativeUpdatedAction {\r\n    type: typeof ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED;\r\n    payload: {\r\n        character: CustomCharacter;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncResetAction {\r\n    type: typeof ENC_RESET;\r\n}\r\n\r\nexport interface EncCreatedAction {\r\n    type: typeof ENC_CREATED;\r\n}\r\n\r\nexport interface EncNextTurnAction {\r\n    type: typeof ENC_NEXT_TURN;\r\n}\r\n\r\nexport interface EncPrevTurnAction {\r\n    type: typeof ENC_PREV_TURN;\r\n}\r\n\r\nexport interface EncEntitySelectedAction {\r\n    type: typeof ENC_ENTITY_SELECTED;\r\n    payload: {\r\n        key: number | null;\r\n    };\r\n}\r\n\r\nexport interface EncCustomCharacterHitPointsUpdatedAction {\r\n    type: typeof ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        update: number,\r\n        temp: number,\r\n    };\r\n}\r\n\r\nexport interface EncTextNotesUpdateAction {\r\n    type: typeof ENC_TEXT_NOTES_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        text: string,\r\n    };\r\n}\r\n\r\nexport interface EncImgNotesUpdatedAction {\r\n    type: typeof ENC_IMG_NOTES_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        img: string,\r\n    },\r\n}\r\n\r\nexport interface EncEntityConcentrationUpdatedAction {\r\n    type: typeof ENC_ENTITY_CONCENTRATION_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        since: number | null,\r\n    };\r\n}\r\n\r\nexport interface EncBeyondCharacterUpdatedByIdAction {\r\n    type: typeof ENC_BEYOND_CHARACTER_UPDATED_BY_ID,\r\n    payload: {\r\n        id: number,\r\n        character: BeyondCharacter,\r\n    };\r\n}\r\n\r\nexport type EncounterActionType = EncBeyondCharacterAddedAction |\r\n    EncCustomCharacterAddedAction |\r\n    EncBeyondCharacterRemovedAction |\r\n    EncCustomCharacterRemovedAction |\r\n    EncBeyondCharacterInitiativeUpdatedAction |\r\n    EncCustomCharacterInitiativeUpdatedAction |\r\n    EncResetAction |\r\n    EncCreatedAction |\r\n    EncNextTurnAction |\r\n    EncPrevTurnAction |\r\n    EncEntitySelectedAction |\r\n    EncCustomCharacterHitPointsUpdatedAction |\r\n    EncTextNotesUpdateAction |\r\n    EncImgNotesUpdatedAction |\r\n    EncEntityConcentrationUpdatedAction |\r\n    EncBeyondCharacterUpdatedByIdAction;\r\n","import { Dispatch } from 'redux';\r\nimport { getBeyondCharacterStats } from '../../../helpers/dnd-beyond';\r\nimport { getRequestErrorMessage } from '../../../helpers/getRequestErrorMessage';\r\nimport { State, BeyondCharacter } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport { updateEncounterBeyondCharacterById } from '../encounter';\r\nimport {\r\n    BEYOND_CHARACTER_ADDED,\r\n    BEYOND_CHARACTER_UPDATED,\r\n    BEYOND_CHARACTER_MAX_HP_UPDATED,\r\n    BEYOND_CHARACTER_FETCH_FAILED,\r\n    BEYOND_CHARACTER_ALREADY_EXISTS,\r\n    BEYOND_CHARACTER_DELETED,\r\n} from './types';\r\n\r\nexport const addBeyondCharacterByUrl = (url: string, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const characterId = url.split('/')[url.split('/').length - 1];\r\n    const { beyondCharacters } = getState();\r\n    if (beyondCharacters && beyondCharacters.every(c => c.id.toString() !== characterId)) {\r\n        getBeyondCharacterStats({ characterId }).then(\r\n            stats => {\r\n                // \"stats\" contains much more data, we're destructuring only what whe need to create a character.\r\n                const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                const character: BeyondCharacter = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop };\r\n                dispatch(addBeyondCharacter(character));\r\n            },\r\n            (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n        );\r\n    } else {\r\n        dispatch(updateBeyondCharacterById(parseInt(characterId), maxHitPoints));\r\n    }\r\n};\r\n\r\nexport const updateBeyondCharacterById = (id: number, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { beyondCharacters } = getState();\r\n    if (beyondCharacters) {\r\n        const character = beyondCharacters.find(c => c.id === id);\r\n        if (character) {\r\n            getBeyondCharacterStats({ characterId: id.toString() }).then(\r\n                stats => {\r\n                    // \"stats\" contains much more data, we're destructuring only what whe need to create a character.\r\n                    const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                    const updatedBeyondCharacter: BeyondCharacter = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                    dispatch(updateBeyondCharacter(id, updatedBeyondCharacter));\r\n                    dispatch(updateEncounterBeyondCharacterById(id, updatedBeyondCharacter));\r\n                },\r\n                (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n            );\r\n        } else {\r\n            dispatch(addBeyondCharacterByUrl(id.toString(), maxHitPoints));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addBeyondCharacter = (character: BeyondCharacter) => ({\r\n    type: BEYOND_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateBeyondCharacter = (id: number, character: BeyondCharacter) => ({\r\n    type: BEYOND_CHARACTER_UPDATED,\r\n    payload: { id, character },\r\n});\r\n\r\nexport const updateBeyondCharacterMaxHp = (id: number, maxHp: number) => ({\r\n    type: BEYOND_CHARACTER_MAX_HP_UPDATED,\r\n    payload: { id, maxHp },\r\n}); \r\n\r\nexport const deleteBeyondCharacter = (id: number) => ({\r\n    type: BEYOND_CHARACTER_DELETED,\r\n    payload: { id },\r\n});\r\n\r\nexport const characterFetchFailed = (error: string) => ({\r\n    type: BEYOND_CHARACTER_FETCH_FAILED,\r\n    error,\r\n});\r\n\r\nexport const characterAlreadyExists = () => ({\r\n    type: BEYOND_CHARACTER_ALREADY_EXISTS,\r\n});\r\n","import { BeyondCharacter } from '../../types';\r\n\r\nexport const BEYOND_CHARACTER_ADDED = 'BEYOND_CHARACTER_ADDED';\r\nexport const BEYOND_CHARACTER_UPDATED = 'BEYOND_CHARACTER_UPDATED';\r\nexport const BEYOND_CHARACTER_MAX_HP_UPDATED = 'BEYOND_CHARACTER_MAX_HP_UPDATED';\r\nexport const BEYOND_CHARACTER_DELETED = 'BEYOND_CHARACTER_DELETED';\r\n\r\nexport const BEYOND_CHARACTER_FETCH_FAILED = 'BEYOND_CHARACTER_FETCH_FAILED';\r\nexport const BEYOND_CHARACTER_ALREADY_EXISTS = 'BEYOND_CHARACTER_ALREADY_EXISTS';\r\n\r\nexport interface BeyondCharacterAddedAction {\r\n    type: typeof BEYOND_CHARACTER_ADDED;\r\n    payload: BeyondCharacter;\r\n}\r\n\r\nexport interface BeyondCharacterUpdatedAction {\r\n    type: typeof BEYOND_CHARACTER_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        character: BeyondCharacter;\r\n    };\r\n}\r\n\r\nexport interface BeyondCharacterMaxHpUpdatedAction {\r\n    type: typeof BEYOND_CHARACTER_MAX_HP_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        maxHp: number;\r\n    };\r\n}\r\n\r\nexport interface BeyondCharacterDeletedAction {\r\n    type: typeof BEYOND_CHARACTER_DELETED;\r\n    payload: {\r\n        id: number;\r\n    };\r\n}\r\n\r\nexport interface BeyondCharacterFetchFailedAction {\r\n    type: typeof BEYOND_CHARACTER_FETCH_FAILED;\r\n    error: string;\r\n}\r\n\r\nexport interface BeyondCharacterAlreadyExistsAction {\r\n    type: typeof BEYOND_CHARACTER_ALREADY_EXISTS;\r\n}\r\n\r\nexport type BeyondCharacterActionType =\r\n    BeyondCharacterAddedAction |\r\n    BeyondCharacterUpdatedAction |\r\n    BeyondCharacterMaxHpUpdatedAction |\r\n    BeyondCharacterDeletedAction | \r\n    BeyondCharacterFetchFailedAction |\r\n    BeyondCharacterAlreadyExistsAction;\r\n","import { BeyondCharacter } from '../types';\r\nimport {\r\n    BEYOND_CHARACTER_ADDED,\r\n    BEYOND_CHARACTER_UPDATED,\r\n    BEYOND_CHARACTER_MAX_HP_UPDATED,\r\n    BEYOND_CHARACTER_DELETED,\r\n    BEYOND_CHARACTER_FETCH_FAILED,\r\n    BEYOND_CHARACTER_ALREADY_EXISTS,\r\n    BeyondCharacterUpdatedAction,\r\n    BeyondCharacterMaxHpUpdatedAction,\r\n    BeyondCharacterActionType,\r\n    BeyondCharacterDeletedAction,\r\n} from '../actions/beyondCharacters';\r\n\r\nexport type BeyondCharactersState = BeyondCharacter[];\r\n\r\nconst initialState: BeyondCharactersState = [];\r\n\r\nconst updateBeyondCharacterById = (state: BeyondCharactersState, action: BeyondCharacterUpdatedAction) => {\r\n    const { id, character } = action.payload;\r\n    const prevBeyondCharacter = state.find(c => c.id === id);\r\n    if (prevBeyondCharacter) {\r\n        const index = state.indexOf(prevBeyondCharacter);\r\n        return [...state.slice(0, index), character, ...state.slice(index + 1)];\r\n    }\r\n    return [...state, character];\r\n};\r\n\r\nconst updateMaxHpById = (state: BeyondCharactersState, action: BeyondCharacterMaxHpUpdatedAction) => {\r\n    const { id, maxHp } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), { ...character, maxHitPoints: maxHp }, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst deleteById = (state: BeyondCharactersState, action: BeyondCharacterDeletedAction) => {\r\n    const { id } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const beyondCharacters = (state = initialState, action: BeyondCharacterActionType) => {\r\n    switch (action.type) {\r\n    case BEYOND_CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case BEYOND_CHARACTER_UPDATED:\r\n        return updateBeyondCharacterById(state, action);\r\n\r\n    case BEYOND_CHARACTER_MAX_HP_UPDATED:\r\n        return updateMaxHpById(state, action);\r\n\r\n    case BEYOND_CHARACTER_DELETED:\r\n        return deleteById(state, action);\r\n\r\n    case BEYOND_CHARACTER_ALREADY_EXISTS:\r\n    case BEYOND_CHARACTER_FETCH_FAILED:\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { CustomCharacter, State } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport {\r\n    CUSTOM_CHARACTER_ADDED,\r\n    CUSTOM_CHARACTER_DELETED,\r\n    CUSTOM_CHARACTER_UPDATED,\r\n} from './types';\r\n\r\nexport const addCustomCharacterSafe = (character: CustomCharacter) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { customCharacters } = getState();\r\n    if (customCharacters && customCharacters.find(c => c.name === character.name)) {\r\n        dispatch(openErrorDialog(<>Custom character with this name already exists.</>));\r\n    } else {\r\n        dispatch(addCustomCharacter(character));\r\n    }\r\n};\r\n\r\nexport const addCustomCharacter = (character: CustomCharacter) => ({\r\n    type: CUSTOM_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const deleteCustomCharacter = (character: CustomCharacter) => ({\r\n    type: CUSTOM_CHARACTER_DELETED,\r\n    payload: character,\r\n});\r\n\r\nexport interface UpdateCustomCharacterProps {\r\n    originalCharacter: CustomCharacter;\r\n    updatedCharacter: CustomCharacter;\r\n}\r\n\r\nexport const updateCustomCharacterSafe = (props: UpdateCustomCharacterProps) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { customCharacters } = getState();\r\n    const { originalCharacter, updatedCharacter } = props;\r\n    if (customCharacters && (originalCharacter.name !== updatedCharacter.name) && customCharacters.find(c => c.name === updatedCharacter.name)) {\r\n        dispatch(openErrorDialog(<>Custom character with this name already exists.</>));\r\n    } else {\r\n        dispatch(updateCustomCharacter(props));\r\n    }\r\n};\r\n\r\nexport const updateCustomCharacter = (props: UpdateCustomCharacterProps) => ({\r\n    type: CUSTOM_CHARACTER_UPDATED,\r\n    payload: props,\r\n});\r\n","import { CustomCharacter } from '../../types';\r\n\r\nexport const CUSTOM_CHARACTER_ADDED = 'CUSTOM_CHARACTER_ADDED';\r\nexport const CUSTOM_CHARACTER_DELETED = 'CUSTOM_CHARACTER_DELETED';\r\nexport const CUSTOM_CHARACTER_UPDATED = 'CUSTOM_CHARACTER_UPDATED';\r\n\r\nexport interface CustomCharacterAddedActionType {\r\n    type: typeof CUSTOM_CHARACTER_ADDED;\r\n    payload: CustomCharacter;\r\n}\r\n\r\nexport interface CustomCharacterDeletedActionType {\r\n    type: typeof CUSTOM_CHARACTER_DELETED;\r\n    payload: CustomCharacter;\r\n}\r\n\r\nexport interface CustomCharacterUpdatedActionType {\r\n    type: typeof CUSTOM_CHARACTER_UPDATED;\r\n    payload: { \r\n        originalCharacter: CustomCharacter;\r\n        updatedCharacter: CustomCharacter;\r\n    };\r\n}\r\n\r\nexport type CustomCharacterActionType = CustomCharacterAddedActionType | CustomCharacterDeletedActionType | CustomCharacterUpdatedActionType;\r\n","import { CustomCharacter } from '../types';\r\nimport {\r\n    CUSTOM_CHARACTER_ADDED,\r\n    CUSTOM_CHARACTER_DELETED,\r\n    CUSTOM_CHARACTER_UPDATED,\r\n    CustomCharacterActionType,\r\n    CustomCharacterDeletedActionType,\r\n    CustomCharacterUpdatedActionType,\r\n} from '../actions/customCharacters';\r\n\r\nexport type CustomCharactersState = CustomCharacter[];\r\n\r\nconst initialState: CustomCharactersState = [];\r\n\r\nconst deleteCustomCharacter = (state: CustomCharactersState, action: CustomCharacterDeletedActionType) => {\r\n    const { payload: character } = action;\r\n    const index = state.indexOf(character);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst updateCustomCharacter = (state: CustomCharactersState, action: CustomCharacterUpdatedActionType) => {\r\n    const { payload: { originalCharacter, updatedCharacter } } = action;\r\n    const index = state.indexOf(originalCharacter);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), updatedCharacter, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const customCharacters = (state = initialState, action: CustomCharacterActionType) => {\r\n    switch (action.type) {\r\n    case CUSTOM_CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case CUSTOM_CHARACTER_DELETED:\r\n        return deleteCustomCharacter(state, action);\r\n\r\n    case CUSTOM_CHARACTER_UPDATED:\r\n        return updateCustomCharacter(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n    UIActionType,\r\n} from '../actions/ui';\r\n\r\nexport type UIState = {\r\n    errorDialog: {\r\n        isOpen: boolean;\r\n        message?: JSX.Element;\r\n    };\r\n};\r\n\r\nconst initialState: UIState = { \r\n    errorDialog: {\r\n        isOpen: false,\r\n    },\r\n};\r\n\r\nexport const ui = (state = initialState, action: UIActionType) => {\r\n    switch (action.type) {\r\n    case ERROR_DIALOG_OPENED:\r\n        if (!state.errorDialog.isOpen) {\r\n            return {...state, errorDialog: { isOpen: true, message: action.payload }};\r\n        }\r\n        return state;\r\n\r\n    case ERROR_DIALOG_CLOSED:\r\n        return {...state, errorDialog: { isOpen: false, message: state.errorDialog.message }};\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","import React from 'react';\r\nimport { Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport default withStyles(theme => ({\r\n    tooltip: {\r\n        fontSize: 16,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    arrow: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}))((props: TooltipProps) => <Tooltip arrow {...props} />);\r\n","import styled from 'styled-components';\r\n\r\nexport const ConcentrationContainer = styled.div<{ small?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.small ? 24 : 32}px;\r\n    height: ${props => props.small ? 24 : 32}px;\r\n    min-width: ${props => props.small ? 24 : 32}px;\r\n    min-height: ${props => props.small ? 24 : 32}px;\r\n    margin-right: ${props => props.small ? 8 : 16}px;\r\n    user-select: none;\r\n`;\r\n\r\nexport const ConcentrationLetter = styled.div<{ color: string, selected?: boolean, small?: boolean }>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 2px solid ${props => props.color};\r\n    border-radius: 8px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    font-size: ${props => props.small ? 20 : 24}px;\r\n    line-height: ${props => props.small ? 20 : 24}px;\r\n\r\n    color: ${props => props.selected ? 'white' : props.color};\r\n    background-color: ${props => props.selected ? props.color : 'rgba(0, 0, 0, 0)'};\r\n\r\n    transition: 100ms;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ConcentrationDuration = styled.div<{ color: string, small?: boolean }>`\r\n    position: absolute;\r\n    border: 2px solid white;\r\n    border-radius: 50%;\r\n\r\n    ${props => props.small ? `\r\n        top: -8px;\r\n        right: -10px;\r\n        width: 16px;\r\n        height: 16px;\r\n        font-size: 12px;\r\n        line-height: 12px;\r\n    ` : `\r\n        top: -12px;\r\n        right: -14px;\r\n        width: 20px;\r\n        height: 20px;\r\n        font-size: 14px;\r\n        line-height: 14px;\r\n    `}\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    color: white;\r\n    background-color: ${props => props.color};\r\n\r\n    transform: scale(0.01);\r\n    transition: transform 100ms;\r\n`;\r\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateEntityConcentration } from '../../redux/actions/encounter';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { ConcentrationContainer, ConcentrationLetter, ConcentrationDuration } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateEntityConcentration: typeof updateEntityConcentration;\r\n}\r\n\r\nexport interface ConcentrationProps {\r\n    entityKey: number;\r\n    color: string;\r\n    small?: boolean;\r\n    isInCurrentTurn?: boolean;\r\n}\r\n\r\nconst Concentration: React.FC<ConcentrationProps & StateProps & DispatchProps> = ({ entityKey, color, small, isInCurrentTurn, encounter, updateEntityConcentration }) => {\r\n    const durationElementRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        const { current: durationElement } = durationElementRef;\r\n        if (durationElement) {\r\n            durationElement.style.transform = 'scale(1)';\r\n        }\r\n    }, [])  // eslint-disable-line\r\n\r\n    const since = useMemo(() => {\r\n        if (!encounter || encounter.concentrationByKey[entityKey] === undefined) {\r\n            return null;\r\n        }\r\n\r\n        return encounter.concentrationByKey[entityKey];\r\n    }, [encounter, entityKey]);\r\n    \r\n    const duration = useMemo(() => {\r\n        if (!encounter || !since) {\r\n            return 0;\r\n        }\r\n\r\n        return encounter.currentRound - since + (isInCurrentTurn ? 0 : 1);\r\n    }, [since, encounter, isInCurrentTurn]);\r\n    const [isDurationVisible, setIsDurationVisible] = useState(since !== null);\r\n\r\n    const tooltipText = useMemo(() => { \r\n        if (since === null) {\r\n            return 'Click when character starts concentrating';\r\n        }\r\n\r\n        let ending = 'th';\r\n        if ((duration + 1) % 10 === 1) {\r\n            ending = 'st';\r\n        } else if ((duration + 1) % 10 === 2) {\r\n            ending = 'nd';\r\n        } else if ((duration + 1) % 10 === 3) {\r\n            ending = 'rd';\r\n        }\r\n\r\n        return `${duration + 1}${ending} round of concentration (since round ${since})`;\r\n    }, [since, duration]);\r\n\r\n    const handleClick = () => {\r\n        if (since === null && encounter && encounter.currentRound) {\r\n            updateEntityConcentration(entityKey, encounter.currentRound);\r\n\r\n            setIsDurationVisible(true);\r\n            window.requestAnimationFrame(() => window.requestAnimationFrame(() => {\r\n                const { current: durationElement } = durationElementRef;\r\n                if (durationElement) {\r\n                    durationElement.style.transform = 'scale(1)';\r\n                }\r\n            }));\r\n        } else {\r\n            updateEntityConcentration(entityKey, null);\r\n\r\n            const { current: durationElement } = durationElementRef;\r\n            if (durationElement) {\r\n                durationElement.style.transform = 'scale(0.001)';\r\n            }\r\n            window.setTimeout(() => setIsDurationVisible(false), 100);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Tooltip title={tooltipText}>\r\n            <ConcentrationContainer small={small}>\r\n                <ConcentrationLetter color={color} selected={since !== null} onClick={handleClick} small={small}>\r\n                    C\r\n                </ConcentrationLetter>\r\n                {isDurationVisible ? (\r\n                    <ConcentrationDuration color={color} ref={durationElementRef} small={small}>\r\n                        {duration + 1}\r\n                    </ConcentrationDuration>\r\n                ) : null}\r\n            </ConcentrationContainer>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateEntityConcentration })(Concentration);\r\n","import styled, { css } from 'styled-components';\r\nimport { FramePartProps } from './Frame';\r\n\r\nexport const FrameContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const FrameTopRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\nexport const FrameMiddleRowContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nexport const FrameBottomRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const FrameMiddleFill = styled.div<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    ${props => props.backgroundColor && `background-color: ${props.backgroundColor};`}\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst CornerBaseStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const TopLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n`;\r\nexport const TopRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n`;\r\nexport const BottomLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateX(180deg);\r\n`;\r\nexport const BottomRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nexport const TopStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const BottomStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n    transform: rotate(180deg);\r\n`;\r\nexport const LeftStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n`;\r\nexport const RightStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    transform: rotate(180deg);\r\n`;\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M615.2,646.2c-1.7,5.7-12.9,11.7-14.5,11.7H22.5c-1.7,0-12.8-6-14.5-11.7L8.2,19.3V12S16.1,2.3,23.4,1.4H599.80005c7.3.8,15.1,10.6,15.1,10.6v7.3Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M611.9,0H11L0,11.5v637L11,660H612l11-11.5V11.5ZM3,12.8l9.2-9.6h5.9A25.8384,25.8384,0,0,0,7,12.9H6.9v.2A36.38553,36.38553,0,0,0,3,21.7ZM3,26.9A42.92655,42.92655,0,0,1,6.9,15.7V644.3a13.90069,13.90069,0,0,1-1.1-2.1,51.50646,51.50646,0,0,1-2.9-9L3,26.9Zm9.2,629.9L3,647.2v-8.9a40.90524,40.90524,0,0,0,3.9,8.6v.2H7a24.86426,24.86426,0,0,0,11.1,9.8H12.2Zm10.1,0A22.56646,22.56646,0,0,1,8.6,647V13A23.74954,23.74954,0,0,1,22.4,3.1H600.6a22.56647,22.56647,0,0,1,13.7,9.8v634a23.74956,23.74956,0,0,1-13.8,9.9Zm597.6-9.6-9.2,9.6h-5.9a24.86437,24.86437,0,0,0,11.1-9.8h.1v-.2a36.38635,36.38635,0,0,0,3.9-8.6l.00006,9Zm0-14.1a41.717,41.717,0,0,1-3.9,11.2V15.7a13.89825,13.89825,0,0,1,1.1,2.1,51.50837,51.50837,0,0,1,2.9,9l-.1,606.3Zm0-611.4a40.9054,40.9054,0,0,0-3.9-8.6v-.2h-.1a24.86433,24.86433,0,0,0-11.1-9.8h5.9l9.2,9.6-.00007,9Z\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const SquareCorner = getSquarePart();\r\nexport const SquareSide = getSquarePart('translate(0,-32)');\r\nexport const SquareTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3px solid ${color}`, boxSizing: 'border-box', transition: 'background-color 0.3s' }} />\r\n);\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getScrollPart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor ? <polygon fill={backgroundColor} style={{ zIndex: -2 }} transform={transform} points=\"8 93 337 93 337 2 8 2 8 93\"/> : null}\r\n        <path fill={color} transform={transform} d=\"M344,6.39V4.47h-6.14V0h-2.68s-1.06,1.54-3.91,1.54H12.73C9.88,1.54,8.82,0,8.82,0H6.14V4.47H0V6.39c2.53,0,2.67,4.14,2.67,4.14V81.91S2.53,86,0,86v2H6.14v7H8.82V3.31H335.18V91.69H8.82V95s1.06-1.54,3.91-1.54H331.27c2.84,0,3.9,1.52,3.91,1.54h2.68V88H344V86c-2.53,0-2.67-4.13-2.67-4.13V10.53S341.47,6.39,344,6.39ZM6.27,81.91H4.14V12.12H6.27Zm333.79.48h-2.12V12.61h2.12Z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ScrollCorner = getScrollPart();\r\nexport const ScrollTop = getScrollPart('translate(-32,0)');\r\nexport const ScrollSide = getScrollPart('translate(0,-32)');\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M275.08,719a32.47,32.47,0,0,0-1.23-4.29c-1.71-4.36-1.13-582.66-1.13-582.66s0-30.43-.58-49c-.36-11.85,1.72-26.54,3.28-35.6a4,4,0,0,1-1.49-1.64c-1.7-3.61-2.41-7.49-1-11.35a6.27,6.27,0,0,1,.93-1.69c-.7-3.15-.33-6.48-1.3-9.54a42.76,42.76,0,0,0-3.54-7,18.66,18.66,0,0,0-5-6.37c-2-1.48-4.08-2.5-5.8-4.27-1.74-.72-3.49-1.42-5.2-2.21l-.4-.21H29.41a5.1,5.1,0,0,1-3.58,1.27,5.83,5.83,0,0,1-2.25,1.44L23.19,6,23,6.05c-.42.25-.87.47-1.29.74a7.34,7.34,0,0,0-1.22.84c1-.91-.26.24-.45.41a5.85,5.85,0,0,1-2.83,1.33,52.05,52.05,0,0,0-3.9,4c-4.59,5.47-4.83,13.51-6.24,20.2,0,.14-.08.27-.11.4a11.08,11.08,0,0,1,.29,1.52c-.16-1.2.09.35.14.59q.14.63.3,1.26a21,21,0,0,0,.88,2.57c1.07,2.59-1.17,5.4-3.49,6.15a3.22,3.22,0,0,1-.7.14C5.94,55.14,8.24,70.62,7.86,83c-.58,18.57-.58,49-.58,49s.64,576.13-1,587.33a5.14,5.14,0,0,1,3.07,6,29.15,29.15,0,0,1-2.67,7,4.68,4.68,0,0,1,.85,2.91c-.27,14.38,12.13,22.59,23.77,28.18a5.7,5.7,0,0,1,.88.53h216.9a5.09,5.09,0,0,1,2.84-1.08,4.1,4.1,0,0,1,1.59-1.45c1-.5,2.07-.93,3.12-1.37l.64-.27-.55.24a6.87,6.87,0,0,0,1.29-.6c.22-.11.45-.18.68-.27,1-1,1.86-1.92,2.41-2.37,2.91-2.43,6.23-4.26,7.86-7.81a4.38,4.38,0,0,1,1.74-2c.81-4.9,2.13-9.72,2.58-14.7a5.32,5.32,0,0,1,.57-2c0-.19-.07-.36-.11-.51-.38-1.74-.87-3.44-1.28-5.17A4.8,4.8,0,0,1,275.08,719Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M275.28,654.52v-554c.77-12.76,2.64-38.62,5.52-48.14l.21-.69-.6-.38a21.36,21.36,0,0,1-3.68-3.14,62.8,62.8,0,0,1,2.34-9.56l.12-.34L276.7,10.17l-1.08-.34c-2.52-.8-9.71-4-9.71-8.12V0H15.09V1.71c0,4.13-7,7.26-9.71,8.12l-1.08.34L1.82,38.28l.12.34a64,64,0,0,1,2.34,9.54A21,21,0,0,1,.6,51.32L0,51.7l.21.69C3.09,61.89,5,87.7,5.72,100.48v554C5,667.23,3.09,703.1.21,712.61L0,713.3l.6.38a20.83,20.83,0,0,1,3.68,3.14,61.64,61.64,0,0,1-2.34,9.56l-.12.35,2.48,28.1,1.08.34c2.7.86,9.71,4,9.71,8.12V765H265.91v-1.71c0-4.13,7-7.26,9.71-8.12l1.08-.34,2.48-28.1-.12-.35a64,64,0,0,1-2.34-9.54,21,21,0,0,1,3.68-3.16l.6-.38-.21-.69c-2.88-9.5-4.74-45.31-5.51-58.09m-3.84,73.29s.45,1.07,1,2.61a29.79,29.79,0,0,1-1.33,12.42C268.18,751.6,261,758,250.25,761.58H30.68c-23-7.63-22.8-25.7-22.16-31.09.59-1.63,1.06-2.75,1.09-2.83a12.21,12.21,0,0,0-2.1-9.76c3.38-18.83,1.66-42.81,1.58-43.89V91.12c.09-1.19,1.81-25.21-1.57-44.05a12.41,12.41,0,0,0,2.05-9.88s-.45-1.07-1-2.61A29.8,29.8,0,0,1,9.87,22.16C12.82,13.4,20,7,30.76,3.42H250.32c23.05,7.63,22.8,25.7,22.16,31.09-.59,1.63-1.06,2.75-1.09,2.84a12.19,12.19,0,0,0,2.1,9.75c-3.38,18.83-1.66,42.81-1.58,43.89V673.88c-.09,1.19-1.81,25.21,1.57,44a12.41,12.41,0,0,0-2.05,9.88m7.41-675.3c-1.71,6.15-3,17.57-4,28.45a191.48,191.48,0,0,1,1.5-30.51,23.59,23.59,0,0,0,2.5,2.06m-5.72-14.58c.09-.21,1.13-2.72,2.12-5.82l.51,5.74A61.16,61.16,0,0,0,274,44.4a9.5,9.5,0,0,1-.89-6.47m.42-25.21,1.24,14.07c-.25,1.21-.59,2.48-1,3.69a30.1,30.1,0,0,0-1.55-8.72c-2-6-6.88-13.57-18.42-18.34h8.89c1.25,5.24,8,8.26,10.8,9.3M18.25,3.42h8.88C10.49,10.29,7.46,23.17,7.21,30.61c-.38-1.25-.74-2.56-1-3.82L7.45,12.72c2.79-1,9.55-4.06,10.8-9.3m-13,34.43.51-5.74c1,3.07,2,5.53,2.07,5.66A9.73,9.73,0,0,1,7,44.33a62.24,62.24,0,0,0-1.73-6.48m-.6,12.59A191.42,191.42,0,0,1,6.15,81c-1-10.87-2.29-22.29-4-28.44a21.9,21.9,0,0,0,2.49-2.07M2.15,712.49c1.71-6.15,3-17.57,4-28.44a191.41,191.41,0,0,1-1.5,30.5,23.59,23.59,0,0,0-2.5-2.06m5.72,14.58c-.09.21-1.13,2.72-2.12,5.82l-.51-5.74A60.54,60.54,0,0,0,7,720.6a9.5,9.5,0,0,1,.89,6.47m-.42,25.21L6.21,738.21c.25-1.21.59-2.47,1-3.69a30,30,0,0,0,1.55,8.72c2,6,6.88,13.57,18.42,18.34H18.25c-1.25-5.24-8-8.26-10.8-9.3m255.3,9.3h-8.88c16.64-6.86,19.67-19.75,19.92-27.19.38,1.26.74,2.56,1,3.82l-1.24,14.07c-2.79,1-9.55,4.06-10.8,9.3m13-34.43-.51,5.74c-1-3.08-2-5.53-2.07-5.66a9.73,9.73,0,0,1,.85-6.56,62.24,62.24,0,0,0,1.73,6.48m.6-12.59a191.37,191.37,0,0,1-1.51-30.51c1,10.88,2.29,22.29,4,28.44a21.9,21.9,0,0,0-2.49,2.07\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const FancyCorner = getSquarePart();\r\nexport const FancySide = getSquarePart('translate(0,-100)');\r\nexport const FancyTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3.5px solid ${color}`, boxSizing: 'border-box' }} />\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    FrameContainer,\r\n    FrameTopRowContainer,\r\n    FrameMiddleRowContainer,\r\n    FrameBottomRowContainer,\r\n    FrameMiddleFill,\r\n    TopLeftCornerStyles,\r\n    TopRightCornerStyles,\r\n    BottomLeftCornerStyles,\r\n    BottomRightCornerStyles,\r\n    TopStyles,\r\n    BottomStyles,\r\n    LeftStyles,\r\n    RightStyles,\r\n} from './style';\r\nimport { SquareCorner, SquareTop, SquareSide } from './svg/square';\r\nimport { ScrollCorner, ScrollTop, ScrollSide } from './svg/scroll';\r\nimport { FancyCorner, FancyTop, FancySide } from './svg/fancy';\r\n\r\nexport interface FrameProps {\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    className?: string;\r\n    forceUpdateProp?: any;\r\n}\r\n\r\nexport interface FrameFactoryProps {\r\n    partSize: number;\r\n    Corner: React.ComponentType<FramePartProps>;\r\n    Top: React.ComponentType<FramePartProps>;\r\n    Side: React.ComponentType<FramePartProps>;\r\n}\r\n\r\nexport interface FramePartProps extends FrameProps {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst frameFactory = ({\r\n    partSize,\r\n    Corner,\r\n    Top,\r\n    Side,\r\n}: FrameFactoryProps) => {\r\n    const FrameTopLeftCorner = styled(Corner)`${TopLeftCornerStyles}`;\r\n    const FrameTopRightCorner = styled(Corner)`${TopRightCornerStyles}`;\r\n    const FrameBottomLeftCorner = styled(Corner)`${BottomLeftCornerStyles}`;\r\n    const FrameBottomRightCorner = styled(Corner)`${BottomRightCornerStyles}`;\r\n    const FrameTop = styled(Top)`${TopStyles}`;\r\n    const FrameBottom = styled(Top)`${BottomStyles}`;\r\n    const FrameLeft = styled(Side)`${LeftStyles}`;\r\n    const FrameRight = styled(Side)`${RightStyles}`;\r\n\r\n    const Frame: React.FC<FrameProps> = ({ color = '#b13735', backgroundColor, className, forceUpdateProp }) => {\r\n        const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n        const [topPartWidth, setTopPartWidth] = useState<number>(partSize);\r\n        const [sidePartHeight, setSidePartHeight] = useState<number>(partSize);\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            handleResize();\r\n        }, [containerRef, forceUpdateProp]);\r\n\r\n        const handleResize = () => {\r\n            const { current: container } = containerRef;\r\n            if (container) {\r\n                setTopPartWidth(Math.max(container.clientWidth - partSize * 2, 0));\r\n                setSidePartHeight(Math.max(container.clientHeight - partSize * 2, 0));\r\n            }\r\n        };\r\n\r\n        const framePartProps: FramePartProps = { color, backgroundColor, width: partSize, height: partSize };\r\n\r\n        return (\r\n            <FrameContainer ref={containerRef} className={className}>\r\n                {containerRef.current\r\n                    ? (\r\n                        <React.Fragment>\r\n                            <FrameTopRowContainer>\r\n                                <FrameTopLeftCorner {...framePartProps} />\r\n                                <FrameTop {...framePartProps} width={topPartWidth} />\r\n                                <FrameTopRightCorner {...framePartProps} />\r\n                            </FrameTopRowContainer>\r\n                            <FrameMiddleRowContainer>\r\n                                <FrameLeft {...framePartProps} height={sidePartHeight} />\r\n                                <FrameMiddleFill {...framePartProps} height={sidePartHeight} width={topPartWidth} />\r\n                                <FrameRight {...framePartProps} height={sidePartHeight} />\r\n                            </FrameMiddleRowContainer>\r\n                            <FrameBottomRowContainer>\r\n                                <FrameBottomLeftCorner {...framePartProps} />\r\n                                <FrameBottom {...framePartProps} width={topPartWidth} />\r\n                                <FrameBottomRightCorner {...framePartProps} />\r\n                            </FrameBottomRowContainer>\r\n                        </React.Fragment>\r\n                    )\r\n                    : null\r\n                }\r\n            </FrameContainer>\r\n        );\r\n    };\r\n\r\n    return Frame;\r\n};\r\n\r\nexport const SquareFrame = frameFactory({ partSize: 32, Corner: SquareCorner, Top: SquareTop, Side: SquareSide });\r\nexport const ScrollFrame = frameFactory({ partSize: 32, Corner: ScrollCorner, Top: ScrollTop, Side: ScrollSide });\r\nexport const FancyFrame = frameFactory({ partSize: 100, Corner: FancyCorner, Top: FancyTop, Side: FancySide });\r\n\r\nexport default frameFactory;\r\n","import styled from 'styled-components';\r\nimport { Avatar as AvatarMui } from '@material-ui/core';\r\n\r\ninterface Multisize {\r\n    small?: boolean;\r\n}\r\n\r\nexport const EntityListItemScrollContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '56' : '80'}px;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const EntityListItemContainer = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n`;\r\n\r\nexport const EntityListItemWrapper = styled.div<Multisize & { isSelected?: boolean }>`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n\r\n    ${props => props.small && `\r\n        transition: 300ms;\r\n        border-radius: 4px;\r\n        padding-left: 0;\r\n        ${props.isSelected ? `\r\n            background-color: #ddd;\r\n            box-shadow: 0px 3px 3px -2px rgba(0,0,0,0.4), 0px 3px 4px 0px rgba(0,0,0,0.24), 0px 1px 8px 0px rgba(0,0,0,0.18);\r\n        ` : `\r\n            background-color: white;\r\n            box-shadow: 0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12);\r\n        `}\r\n    `}\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div<Multisize>`\r\n    ${props => props.small ? `\r\n        width: 40px;\r\n        height: 40px;\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n    ` : `\r\n        width: 60px;\r\n        height: 60px;\r\n        min-width: 60px;\r\n        min-height: 60px;\r\n    `}\r\n    margin: 0 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Avatar = styled(AvatarMui)`\r\n    && {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const NameAndSavesContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    margin-right: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Name = styled.div<Multisize>`\r\n    font-size: ${props => props.small ? '18' : '24'}px;\r\n    line-height: ${props => props.small ? '18' : '24'}px;\r\n`;\r\n\r\nexport const SavesContainer = styled.div<Multisize>`\r\n    height: 24px;\r\n    width: ${props => props.small ? '100%' : '150px'};\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport interface SaveItemProps {\r\n    fail?: boolean;\r\n    enabled?: boolean;\r\n}\r\n\r\nexport const SaveItem = styled.div<SaveItemProps>`\r\n    height: 18px;\r\n    width: 18px;\r\n    border: 2px solid ${props => props.fail ? '#b13735' : '#08a300'};\r\n    border-radius: 50%;\r\n    box-sizing: border-box;\r\n    ${props => props.enabled && `background-color: ${props.fail ? '#b13735' : '#08a300'};`}\r\n`;\r\n\r\nexport const HitPointsContainer = styled.div<Multisize & { onClick?: (e: React.MouseEvent<HTMLElement>) => void }>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    width: ${props => props.small ? '144' : '200'}px;\r\n    margin-left: auto;\r\n    margin-right: ${props => props.small ? '8' : '16'}px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    ${props => props.onClick ? 'cursor: pointer;' : ''}\r\n`;\r\n\r\nexport const HitPoints = styled.div<{ width: number } & Multisize>`\r\n    font-size: ${props => props.small ? '20' : '32'}px;\r\n    line-height: ${props => props.small ? '20' : '32'}px;\r\n    width: ${props => props.width}px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const HitPointMenuContentWrapper = styled.div<Multisize>`\r\n    padding: 0 8px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const HitPointMenuButtonWrapper = styled.div`\r\n    padding-top: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > *:not(:last-child) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Menu, TextField, Button, ThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { DeathSaves, State } from '../../redux/types';\r\nimport { updateBeyondCharacterById } from '../../redux/actions/beyondCharacters';\r\nimport { selectEntity, updateCustomCharacterHitPoints } from '../../redux/actions/encounter';\r\nimport { Concentration } from '../Concentration';\r\nimport { SquareFrame } from '../Frame';\r\nimport {\r\n    EntityListItemScrollContainer,\r\n    EntityListItemContainer,\r\n    EntityListItemWrapper,\r\n    NameAndSavesContainer,\r\n    Avatar,\r\n    Name,\r\n    SavesContainer,\r\n    SaveItem,\r\n    HitPointsContainer,\r\n    HitPoints,\r\n    AvatarWrapper,\r\n    HitPointMenuContentWrapper,\r\n    HitPointMenuButtonWrapper,\r\n} from './style';\r\n\r\ninterface StateProps {\r\n    selectedKey: number | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateBeyondCharacterById: (id: number, maxHitPoints: number) => void;\r\n    selectEntity: typeof selectEntity;\r\n    updateCustomCharacterHitPoints: typeof updateCustomCharacterHitPoints;\r\n}\r\n\r\nexport enum EntityType {\r\n    BeyondCharacter = 'BEYOND_CHARACTER',\r\n    CustomCharacter = 'CUSTOM_CHARACTER',\r\n}\r\n\r\nexport interface EntityListItemProps {\r\n    entityKey: number;\r\n    type: EntityType;\r\n    name: string;\r\n\r\n    maxHitPoints: number;\r\n    removedHitPoints?: number;\r\n    temporaryHitPoints?: number;\r\n    deathSaves?: DeathSaves;\r\n\r\n    color: string;\r\n    id?: number;\r\n    avatarUrl?: string;\r\n    isInCurrentTurn?: boolean;\r\n    isCurrentlyFirst?: boolean;\r\n}\r\n\r\nconst EntityListItem: React.FC<EntityListItemProps & StateProps & DispatchProps> = ({\r\n    id,\r\n    entityKey,\r\n    type,\r\n    name,\r\n    maxHitPoints,\r\n    removedHitPoints = 0, \r\n    temporaryHitPoints = 0,\r\n    deathSaves,\r\n    avatarUrl,\r\n    isInCurrentTurn,\r\n    isCurrentlyFirst,\r\n    color,\r\n    selectedKey,\r\n    updateBeyondCharacterById,\r\n    selectEntity,\r\n    updateCustomCharacterHitPoints,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n    const [menuInputValue, setMenuInputValue] = useState('');\r\n\r\n    const isSelected = useMemo(() => selectedKey === entityKey, [selectedKey, entityKey]);\r\n\r\n    useEffect(() => {\r\n        if (type === EntityType.BeyondCharacter && id) {\r\n            updateBeyondCharacterById(id, maxHitPoints);\r\n        }\r\n    }, [type, id, maxHitPoints, updateBeyondCharacterById, isSelected, isCurrentlyFirst]);\r\n\r\n    const openMenu = (e: React.MouseEvent<HTMLElement>) => setMenuAnchorElement(e.currentTarget);\r\n    const closeMenu = () => {\r\n        selectEntity(null);\r\n        setMenuAnchorElement(null);\r\n        setMenuInputValue('');\r\n    };\r\n\r\n    const handleMenuInputChange = (e: React.ChangeEvent<HTMLInputElement>) => setMenuInputValue(e.target.value);\r\n\r\n    const handleClick = () => {\r\n        selectEntity(isSelected ? null : entityKey);\r\n    };\r\n\r\n    const handleDamageClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateCustomCharacterHitPoints(entityKey, -Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleTempClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateCustomCharacterHitPoints(entityKey, 0, Math.abs(updateHP));\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleHealClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateCustomCharacterHitPoints(entityKey, Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    return (\r\n        <EntityListItemScrollContainer small={small}>\r\n            <EntityListItemContainer>\r\n                {small ? null : <SquareFrame color={color} backgroundColor={isSelected ? '#ddd' : 'white' } />}\r\n                <EntityListItemWrapper small={small} isSelected={isSelected}>\r\n                    <AvatarWrapper small={small} onClick={handleClick}>\r\n                        <Avatar src={avatarUrl} variant=\"rounded\" />\r\n                    </AvatarWrapper>\r\n                    <NameAndSavesContainer small={small} onClick={handleClick}>\r\n                        <Name small={small}>{name}</Name>\r\n                        <SavesContainer small={small}>\r\n                            {deathSaves && !small && (removedHitPoints >= maxHitPoints) ? (\r\n                                <React.Fragment>\r\n                                    <SaveItem fail enabled={(deathSaves.failCount && deathSaves.failCount > 0) || false} />\r\n                                    <SaveItem fail enabled={(deathSaves.failCount && deathSaves.failCount > 1) || false} />\r\n                                    <SaveItem fail enabled={(deathSaves.failCount && deathSaves.failCount > 2) || false} />\r\n                                    <div style={{ width: '16px' }} />\r\n                                    <SaveItem enabled={(deathSaves.successCount && deathSaves.successCount > 0) || false} />\r\n                                    <SaveItem enabled={(deathSaves.successCount && deathSaves.successCount > 1) || false} />\r\n                                    <SaveItem enabled={(deathSaves.successCount && deathSaves.successCount > 2) || false} />\r\n                                </React.Fragment>\r\n                            ) : null}\r\n                        </SavesContainer>\r\n                    </NameAndSavesContainer>\r\n                    <div style={{ flex: 1 }} />\r\n                    <Concentration entityKey={entityKey} color={color} small={small} isInCurrentTurn={isInCurrentTurn} />\r\n                    <HitPointsContainer small={small} onClick={type === EntityType.CustomCharacter ? openMenu : undefined}>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints - removedHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 16 : 12} style={{ color: 'grey' }}>/</HitPoints>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 48 : 36} style={{ color: 'grey' }}>[{temporaryHitPoints}]</HitPoints>\r\n                    </HitPointsContainer>\r\n                    <Menu anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu} style={{ marginTop: small ? '70px' : '80px' }}>\r\n                        <HitPointMenuContentWrapper>\r\n                            <TextField style={{ width: '100%' }} label=\"Hit Points\" type=\"number\" autoFocus value={menuInputValue} onChange={handleMenuInputChange} />\r\n                            <HitPointMenuButtonWrapper>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleDamageClick}>Damage</Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={handleTempClick}>Temp</Button>\r\n                                <ThemeProvider theme={createMuiTheme({ ...theme, palette: { ...theme.palette, primary: { main: '#08a300' }}})}>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleHealClick}>Heal</Button>\r\n                                </ThemeProvider>\r\n                            </HitPointMenuButtonWrapper>\r\n                        </HitPointMenuContentWrapper>\r\n                    </Menu>\r\n                </EntityListItemWrapper>\r\n            </EntityListItemContainer>\r\n        </EntityListItemScrollContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    selectedKey: (state.encounter && state.encounter.selectedEntityKey !== null) ? state.encounter.selectedEntityKey : null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateBeyondCharacterById, selectEntity, updateCustomCharacterHitPoints })(EntityListItem);\r\n","import { keys } from 'lodash/fp';\r\nimport { EncounterState } from '../redux/reducers/encounter';\r\nimport { BeyondCharacter, CustomCharacter } from '../redux/types';\r\nimport { EntityType } from '../components/EntityListItem';\r\n\r\nexport interface EntityWithInitiative {\r\n    initiative: number;\r\n    type: EntityType;\r\n    entity: BeyondCharacter | CustomCharacter;\r\n    key: number;\r\n    dividerAfterThisOne?: boolean;\r\n    isCurrentlyFirst?: boolean;\r\n}\r\n\r\nexport const sortEntitiesWithInitiative = (encounter: EncounterState | null) => {\r\n    if (!encounter) {\r\n        return [];\r\n    }\r\n\r\n    const { beyondCharacters, customCharacters, initiativeById, currentTurnKey } = encounter;\r\n\r\n    let sortedByInitiative: EntityWithInitiative[] = [];\r\n\r\n    keys(beyondCharacters).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.BeyondCharacter,\r\n                entity: beyondCharacters[key],\r\n                key,\r\n                dividerAfterThisOne: false,\r\n            });\r\n        }\r\n    });\r\n\r\n    keys(customCharacters).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.CustomCharacter,\r\n                entity: customCharacters[key],\r\n                key,\r\n                dividerAfterThisOne: false,\r\n            });\r\n        }\r\n    });\r\n\r\n    sortedByInitiative.sort((e1, e2) => {\r\n        if (e1.initiative < e2.initiative) {\r\n            return 1;\r\n        } else if (e1.initiative > e2.initiative) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    if (sortedByInitiative.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    sortedByInitiative[sortedByInitiative.length - 1].dividerAfterThisOne = true;\r\n\r\n    while (sortedByInitiative[0].key !== currentTurnKey) {\r\n        sortedByInitiative.push(sortedByInitiative.shift() as EntityWithInitiative);\r\n    }\r\n\r\n    sortedByInitiative[0].isCurrentlyFirst = true;\r\n\r\n    return sortedByInitiative;\r\n};\r\n","import { omit, findKey, filter, reduce, keys } from 'lodash/fp';\r\nimport { BeyondCharacter, CustomCharacter } from '../types';\r\nimport {\r\n    ENC_BEYOND_CHARACTER_ADDED,\r\n    ENC_CUSTOM_CHARACTER_ADDED,\r\n    ENC_BEYOND_CHARACTER_REMOVED,\r\n    ENC_CUSTOM_CHARACTER_REMOVED,\r\n    ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_RESET,\r\n    ENC_CREATED,\r\n    ENC_NEXT_TURN,\r\n    ENC_PREV_TURN,\r\n    ENC_ENTITY_SELECTED,\r\n    ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED,\r\n    ENC_TEXT_NOTES_UPDATED,\r\n    ENC_IMG_NOTES_UPDATED,\r\n    ENC_ENTITY_CONCENTRATION_UPDATED,\r\n    ENC_BEYOND_CHARACTER_UPDATED_BY_ID,\r\n    EncBeyondCharacterAddedAction,\r\n    EncCustomCharacterAddedAction,\r\n    EncBeyondCharacterRemovedAction,\r\n    EncCustomCharacterRemovedAction,\r\n    EncBeyondCharacterInitiativeUpdatedAction,\r\n    EncCustomCharacterInitiativeUpdatedAction,\r\n    EncCustomCharacterHitPointsUpdatedAction,\r\n    EncEntityConcentrationUpdatedAction,\r\n    EncBeyondCharacterUpdatedByIdAction,\r\n    EncounterActionType,\r\n} from '../actions/encounter/types';\r\nimport { sortEntitiesWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\n\r\nconst INIT_INITIATIVE = 1000000;\r\n\r\nexport interface EncounterState {\r\n    beyondCharacters: Record<number, BeyondCharacter>;\r\n    customCharacters: Record<number, CustomCharacter>;\r\n    initiativeById: Record<number, number>;\r\n    currentId: number;\r\n    currentTurnInitiative: number;\r\n    currentTurnKey: number;\r\n    currentRound: number;\r\n    selectedEntityKey: number | null;\r\n    customCharacterHitPoints: Record<number, {\r\n        removedHitPoints: number;\r\n        temporaryHitPoints: number;\r\n    }>;\r\n    textNotesByKey: Record<number, string>;\r\n    imgNotesByKey: Record<number, string>;\r\n    concentrationByKey: Record<number, number>;\r\n}\r\n\r\nconst initialState: EncounterState = {\r\n    beyondCharacters: {},\r\n    customCharacters: {},\r\n    initiativeById: {},\r\n    currentId: 1,\r\n    currentTurnInitiative: INIT_INITIATIVE,\r\n    currentTurnKey: 0,\r\n    currentRound: 1,\r\n    selectedEntityKey: null,\r\n    customCharacterHitPoints: {},\r\n    textNotesByKey: {},\r\n    imgNotesByKey: {},\r\n    concentrationByKey: {},\r\n};\r\n\r\nconst addBeyondCharacter = (state: EncounterState, action: EncBeyondCharacterAddedAction) => {\r\n    const { beyondCharacters } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const characterNumber = filter(key => beyondCharacters[parseInt(key)].name.startsWith(name), keys(beyondCharacters)).length;\r\n\r\n    if (characterNumber === 0) {\r\n        return {\r\n            ...state,\r\n            currentId: state.currentId + 1,\r\n            beyondCharacters: { ...state.beyondCharacters, [state.currentId]: action.payload },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} \\n` }\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            currentId: state.currentId + 1,\r\n            beyondCharacters: {\r\n                ...state.beyondCharacters,\r\n                [state.currentId]: {\r\n                    ...action.payload,\r\n                    name: `${name} #${characterNumber + 1}`,\r\n                },\r\n            },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} #${characterNumber + 1} \\n` }\r\n        };\r\n    }\r\n};\r\n\r\nconst addCustomCharacter = (state: EncounterState, action: EncCustomCharacterAddedAction) => {\r\n    const { customCharacters } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const characterNumber = filter(key => customCharacters[parseInt(key)].name.startsWith(name), keys(customCharacters)).length;\r\n\r\n    if (characterNumber === 0) {\r\n        return {\r\n            ...state,\r\n            currentId: state.currentId + 1,\r\n            customCharacters: { ...state.customCharacters, [state.currentId]: action.payload },\r\n            customCharacterHitPoints: { ...state.customCharacterHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 0 } },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} \\n` }\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            currentId: state.currentId + 1,\r\n            customCharacters: {\r\n                ...state.customCharacters,\r\n                [state.currentId]: {\r\n                    ...action.payload,\r\n                    name: `${name} #${characterNumber + 1}`,\r\n                },\r\n            },\r\n            customCharacterHitPoints: { ...state.customCharacterHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 0 } },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} #${characterNumber + 1} \\n` }\r\n        };\r\n    }\r\n};\r\n\r\nconst removeBeyondCharacter = (state: EncounterState, action: EncBeyondCharacterRemovedAction) => {\r\n    const characterKey = findKey((c: BeyondCharacter) => c.id === action.payload.id, state.beyondCharacters);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        beyondCharacters: (omit(characterKey, state.beyondCharacters) || {}) as Record<number, BeyondCharacter>,\r\n        initiativeById: (omit(characterKey, state.initiativeById) || {}) as Record<number, number>,\r\n    };\r\n};\r\n\r\nconst removeCustomCharacter = (state: EncounterState, action: EncCustomCharacterRemovedAction) => {\r\n    const { customCharacters } = state;\r\n    const { name } = action.payload;\r\n    const addedCustomCharactersKeys = filter(key => customCharacters[parseInt(key)].name.startsWith(name), keys(customCharacters));\r\n\r\n    if (addedCustomCharactersKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    const latestAddedCharacter = reduce(\r\n        (accumulator, keyString) => {\r\n            const key = parseInt(keyString);\r\n            const character = customCharacters[key];\r\n\r\n            if (character.name === name) {\r\n                if (accumulator.number < 1) {\r\n                    return { key, number: 1 };\r\n                }\r\n                return accumulator;\r\n            }\r\n\r\n            const splitByHash = character.name.slice(name.length).split('#');\r\n            const number = parseInt(splitByHash[splitByHash.length - 1]);\r\n\r\n            if (number > accumulator.number) {\r\n                return { key, number };\r\n            }\r\n\r\n            return accumulator;\r\n        },\r\n        {\r\n            key: 0,\r\n            number: -1,\r\n        },\r\n        addedCustomCharactersKeys,\r\n    );\r\n\r\n    return {\r\n        ...state,\r\n        customCharacters: omit(latestAddedCharacter.key, customCharacters) || {},\r\n    };\r\n};\r\n\r\nconst updateBeyondCharacterInitiative = (state: EncounterState, action: EncBeyondCharacterInitiativeUpdatedAction) => {\r\n    const { beyondCharacters, initiativeById } = state;\r\n    const { character, initiative } = action.payload;\r\n\r\n    const characterKey = keys(beyondCharacters).find(key => beyondCharacters[parseInt(key)].id === character.id);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            [characterKey]: initiative,\r\n        },\r\n    };\r\n};\r\n\r\nconst updateCustomCharacterInitiative = (state: EncounterState, action: EncCustomCharacterInitiativeUpdatedAction) => {\r\n    const { customCharacters, initiativeById } = state;\r\n    const { character, initiative } = action.payload;\r\n\r\n    const characterKeys = keys(customCharacters).filter(key => customCharacters[parseInt(key)].name.startsWith(character.name));\r\n    if (characterKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    let initiatives: Record<number, number> = {};\r\n    characterKeys.forEach(key => (initiatives[parseInt(key)] = initiative));\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            ...initiatives,\r\n        },\r\n    };\r\n};\r\n\r\nconst recalculateCurrentTurnKey = (state: EncounterState): EncounterState => {\r\n    const { currentTurnInitiative, beyondCharacters, customCharacters, initiativeById } = state;\r\n\r\n    if (currentTurnInitiative === INIT_INITIATIVE) {\r\n        const findMaxInitiative = (maxInitiative: { key: number, initiative: number}, keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative > maxInitiative.initiative) {\r\n                return { key, initiative };\r\n            }\r\n\r\n            return maxInitiative;\r\n        };\r\n\r\n        const { key: beyondKey, initiative: beyondInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(beyondCharacters));\r\n        const { key: customKey, initiative: customInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(customCharacters));\r\n\r\n        if (customInitiative === -100 && beyondInitiative === -100) {\r\n            return state;\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            currentTurnInitiative: Math.max(beyondInitiative, customInitiative),\r\n            currentTurnKey: beyondInitiative > customInitiative ? beyondKey : customKey,\r\n        };\r\n    } else {\r\n        const findWithInitiative = (keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative === currentTurnInitiative) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const keyWithInitiative = parseInt(keys(beyondCharacters).find(findWithInitiative) as string) || parseInt(keys(customCharacters).find(findWithInitiative) as string);\r\n        if (!isNaN(keyWithInitiative)) {\r\n            return {\r\n                ...state,\r\n                currentTurnKey: keyWithInitiative,\r\n            };\r\n        }\r\n\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    }\r\n};\r\n\r\nconst nextTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: null,\r\n            currentRound: state.currentRound + 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[1];\r\n    let round = state.currentRound;\r\n    if (initiative > sortedEntities[0].initiative) {\r\n        round += 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst prevTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: null,\r\n            currentRound: state.currentRound - 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[sortedEntities.length - 1];\r\n    let round = state.currentRound;\r\n    if (initiative < sortedEntities[0].initiative) {\r\n        round -= 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst updateCustomCharacterHitPoints = (state: EncounterState, action: EncCustomCharacterHitPointsUpdatedAction) => {\r\n    const { key, update, temp } = action.payload;\r\n    const { removedHitPoints, temporaryHitPoints } = state.customCharacterHitPoints[key];\r\n\r\n    let newTemp = temporaryHitPoints;\r\n    if (temp) {\r\n        newTemp = Math.max(0, temporaryHitPoints + temp);\r\n    }\r\n    if (update < 0) {\r\n        newTemp = Math.max(0, temporaryHitPoints + update);\r\n    }\r\n\r\n    let newRemoved = removedHitPoints;\r\n    if (update >= 0) {\r\n        newRemoved = Math.max(0, removedHitPoints - update);\r\n    } else {\r\n        newRemoved = Math.max(0, removedHitPoints - update - Math.min(Math.abs(update), temporaryHitPoints));\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        customCharacterHitPoints: {\r\n            ...state.customCharacterHitPoints,\r\n            [key]: {\r\n                removedHitPoints: newRemoved,\r\n                temporaryHitPoints: newTemp,\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nconst updateEntityConcentration = (state: EncounterState, action: EncEntityConcentrationUpdatedAction) => {\r\n    const { key, since } = action.payload;\r\n    if (since === null) {\r\n        return {\r\n            ...state,\r\n            concentrationByKey: omit(key, state.concentrationByKey),\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        concentrationByKey: {\r\n            ...state.concentrationByKey,\r\n            [key]: since,\r\n        },\r\n    };\r\n};\r\n\r\nconst updateBeyondCharacterById = (state: EncounterState, action: EncBeyondCharacterUpdatedByIdAction) => {\r\n    const { id, character: updatedBeyondCharacter } = action.payload;\r\n    const { beyondCharacters } = state;\r\n    const key = keys(beyondCharacters).find(k => beyondCharacters[parseInt(k)].id === id);\r\n\r\n    if (!key || isNaN(parseInt(key))) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        beyondCharacters: {\r\n            ...beyondCharacters,\r\n            [parseInt(key)]: updatedBeyondCharacter,\r\n        },\r\n    };\r\n};\r\n\r\nexport const encounter = (state = initialState, action: EncounterActionType) => {\r\n    switch (action.type) {\r\n    case ENC_BEYOND_CHARACTER_ADDED:\r\n        return recalculateCurrentTurnKey(addBeyondCharacter(state, action));\r\n\r\n    case ENC_CUSTOM_CHARACTER_ADDED:\r\n        return recalculateCurrentTurnKey(addCustomCharacter(state, action));\r\n\r\n    case ENC_BEYOND_CHARACTER_REMOVED:\r\n        return recalculateCurrentTurnKey(removeBeyondCharacter(state, action));\r\n\r\n    case ENC_CUSTOM_CHARACTER_REMOVED:\r\n        return recalculateCurrentTurnKey(removeCustomCharacter(state, action));\r\n\r\n    case ENC_BEYOND_CHARACTER_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateBeyondCharacterInitiative(state, action));\r\n    \r\n    case ENC_CUSTOM_CHARACTER_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateCustomCharacterInitiative(state, action));\r\n\r\n    case ENC_RESET:\r\n        return initialState;\r\n\r\n    case ENC_CREATED:\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    \r\n    case ENC_NEXT_TURN:\r\n        return nextTurn(state);\r\n\r\n    case ENC_PREV_TURN:\r\n        return prevTurn(state);\r\n\r\n    case ENC_ENTITY_SELECTED:\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: action.payload.key,\r\n        };\r\n\r\n    case ENC_CUSTOM_CHARACTER_HIT_POINTS_UPDATED:\r\n        return updateCustomCharacterHitPoints(state, action);\r\n\r\n    case ENC_TEXT_NOTES_UPDATED:\r\n        return {\r\n            ...state,\r\n            textNotesByKey: {\r\n                ...state.textNotesByKey,\r\n                [action.payload.key]: action.payload.text,\r\n            },\r\n        };\r\n\r\n    case ENC_IMG_NOTES_UPDATED:\r\n        return {\r\n            ...state,\r\n            imgNotesByKey: {\r\n                ...state.imgNotesByKey,\r\n                [action.payload.key]: action.payload.img,\r\n            },\r\n        };\r\n\r\n    case ENC_ENTITY_CONCENTRATION_UPDATED:\r\n        return updateEntityConcentration(state, action);\r\n\r\n    case ENC_BEYOND_CHARACTER_UPDATED_BY_ID:\r\n        return updateBeyondCharacterById(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { beyondCharacters } from './beyondCharacters';\r\nimport { customCharacters } from './customCharacters';\r\nimport { ui } from './ui';\r\nimport { encounter } from './encounter';\r\n\r\nconst rootReducer = combineReducers({\r\n    beyondCharacters,\r\n    customCharacters,\r\n    ui,\r\n    encounter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n    blacklist: ['ui'],\r\n};\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer as Reducer<any, any>), applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingViewBackground = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666666;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewImage = styled.img`\r\n    width: 400px;\r\n    max-width: 80%;\r\n`;\r\n\r\nexport const LoadingViewText = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport { LoadingViewBackground, LoadingViewContainer, LoadingViewImage, LoadingViewText } from './style';\r\n\r\nconst LoadingView = () => (\r\n    <LoadingViewBackground>\r\n        <LoadingViewContainer>\r\n            <LoadingViewImage src={`${process.env.PUBLIC_URL}/fire.gif`} />\r\n            <LoadingViewText>Loading</LoadingViewText>\r\n        </LoadingViewContainer>\r\n    </LoadingViewBackground>\r\n);\r\n\r\nexport default LoadingView;\r\n","import styled from 'styled-components';\r\n\r\nexport interface ImageProps {\r\n    opacity: number;\r\n    src?: string;\r\n}\r\n\r\nexport const Image = styled.div<ImageProps>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: ${props => props.opacity};\r\n    background-image: url(\"${props => props.src}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image } from './style';\r\n\r\nexport interface AnimatedImageProps {\r\n    src?: string;\r\n    transitionDuration?: number;\r\n}\r\n\r\nconst AnimatedImage: React.FC<AnimatedImageProps> = ({ src, transitionDuration = 200 }) => {\r\n    const firstImageRef = useRef<HTMLDivElement | null>(null);\r\n    const secondImageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const [opacity, setOpacity] = useState(1);\r\n    const [firstImageSrc, setFirstImageSrc] = useState(src);\r\n    const [secondImageSrc, setSecondImageSrc] = useState<string | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        const { current: firstImage } = firstImageRef;\r\n        const { current: secondImage } = secondImageRef;\r\n\r\n        let animationRequest1Id: number | null = null;\r\n        let timeoutId: number | null = null;\r\n        let animationRequest2Id: number | null = null;\r\n\r\n        if (firstImage && secondImage) {\r\n            firstImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            secondImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            setSecondImageSrc(src);\r\n            animationRequest1Id = window.requestAnimationFrame(() => {\r\n                setOpacity(0);\r\n                timeoutId = setTimeout(() => {\r\n                    firstImage.style.transition = '';\r\n                    secondImage.style.transition = '';\r\n                    setFirstImageSrc(src);\r\n                    animationRequest2Id = window.requestAnimationFrame(() => {\r\n                        setOpacity(1);\r\n                    });\r\n                }, transitionDuration);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (animationRequest1Id) {\r\n                window.cancelAnimationFrame(animationRequest1Id);\r\n            }\r\n\r\n            if (timeoutId) {\r\n                window.clearTimeout(timeoutId);\r\n            }\r\n\r\n            if (animationRequest2Id) {\r\n                window.cancelAnimationFrame(animationRequest2Id);\r\n            }\r\n        };\r\n    }, [src, transitionDuration]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Image opacity={opacity} src={firstImageSrc} ref={firstImageRef} />\r\n            <Image opacity={1 - opacity} src={secondImageSrc} ref={secondImageRef} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AnimatedImage;\r\n","import styled from 'styled-components';\r\nimport { Multisize } from './DividedList';\r\n\r\nexport const DividedListContainer = styled.div<Multisize>`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    ${props => props.small ? `\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    ` : `\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    `}\r\n`;\r\n\r\nexport const DividedListWrapper = styled.div<Multisize>`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    ${props => props.small && 'flex-direction: column;'}\r\n`;\r\n\r\nexport const DividedListSublistContainer = styled.div<Multisize>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    ${props => props.small ? `\r\n        width: 100%;\r\n    ` : `\r\n        width: 500px;\r\n        min-width: 300px;\r\n        max-width: 500px;\r\n        margin: 16px;\r\n    `}\r\n\r\n    & > :not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport interface DividerProps {\r\n    color: string;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nexport const Divider = styled.div<DividerProps & Multisize>`\r\n    border: 1px solid ${props => props.color};\r\n    border-radius: 50%;\r\n    opacity: 0.5;\r\n    margin-bottom: 10px;\r\n\r\n    ${props => props.small ? `\r\n        height: 0;\r\n        margin: 16px;\r\n    ` : `\r\n        width: 0;\r\n        margin-top: 56px;\r\n\r\n        ${props.marginTopOverride ? `margin-top: ${props.marginTopOverride}px;` : ''}\r\n        ${props.marginBottomOverride ? `margin-bottom: ${props.marginBottomOverride}px;` : ''}\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useMediaQuery, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { DividedListContainer, DividedListWrapper, Divider, DividedListSublistContainer } from './style';\r\n\r\nexport interface Multisize {\r\n    small: boolean;\r\n}\r\n\r\nexport interface DividedListProps {\r\n    titles: string[];\r\n    children: Array<null | React.ReactElement<unknown & Multisize>>;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nconst DividedList = ({ titles, children, marginBottomOverride, marginTopOverride }: DividedListProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const filteredChildren = children.filter(c => c !== null) as Array<React.ReactElement<unknown & Multisize>>;\r\n\r\n    return (\r\n        <DividedListContainer small={small}>\r\n            <DividedListWrapper small={small}>\r\n                {filteredChildren.length > 0 ? (\r\n                    <DividedListSublistContainer small={small}>\r\n                        <Typography variant=\"h5\">{titles[0]}</Typography>\r\n                        {React.cloneElement(filteredChildren[0], { small })}\r\n                    </DividedListSublistContainer>\r\n                ) : null}\r\n                {filteredChildren.length > 1 ? filteredChildren.slice(1).map((child, idx) => (\r\n                    <React.Fragment key={child.key || idx}>\r\n                        <Divider color={theme.palette.secondary.main} small={small} marginTopOverride={marginTopOverride} marginBottomOverride={marginBottomOverride} />\r\n                        <DividedListSublistContainer small={small}>\r\n                            <Typography variant=\"h5\">{titles[idx + 1]}</Typography>\r\n                            {React.cloneElement(child, { small })}\r\n                        </DividedListSublistContainer>\r\n                    </React.Fragment>\r\n                )) : null}\r\n            </DividedListWrapper>\r\n        </DividedListContainer>\r\n    );\r\n};\r\n\r\nexport default DividedList;\r\n","import styled, { css } from 'styled-components';\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const EntityListContainer = styled.div<{ fullWidth?: boolean, fullScreen?: boolean } & Multiheight>`\r\n    position: relative;\r\n    ${props => props.fullWidth ? `\r\n        width: 98%;\r\n        height: calc(100% - ${props.fullScreen ? 138 : 100}px);\r\n    ` : `\r\n        width: 50%;\r\n        max-width: 600px;\r\n        height: ${props.short ? '420' : '480'}px;\r\n    `}\r\n`;\r\n\r\nexport const EntityListWrapper = styled.div`\r\n    height: calc(100% - 32px);\r\n    padding: 16px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n\r\n    overflow-y: scroll;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst EntityListFade = css`\r\n    position: absolute;\r\n    left: calc(2%);\r\n    width: 96%;\r\n    border-radius: 16px;\r\n    height: 20px;\r\n`;\r\n\r\nexport const EntityListTopFade = styled.div`\r\n    ${EntityListFade}\r\n    top: 0;\r\n    background: linear-gradient(white, transparent);\r\n`;\r\n\r\nexport const EntityListBottomFade = styled.div`\r\n    ${EntityListFade}\r\n    bottom: 0;\r\n    background: linear-gradient(transparent, white);\r\n`;\r\n\r\nexport const Divider = styled.div<{ color: string }>`\r\n    width: 100%;\r\n    margin-bottom: 16px;\r\n    border: 1px solid ${props => props.color};\r\n    border-radius: 50%;\r\n    opacity: 0.5;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTheme } from '@material-ui/core';\r\nimport { State, BeyondCharacter } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { sortEntitiesWithInitiative, EntityWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\nimport { FancyFrame } from '../Frame';\r\nimport { EntityListItem, EntityType } from '../EntityListItem';\r\nimport { EntityListContainer, EntityListWrapper, EntityListBottomFade, EntityListTopFade, Divider } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\nexport interface EntityListProps {\r\n    fullWidth?: boolean;\r\n    fullScreen?: boolean;\r\n    short?: boolean;\r\n}\r\n\r\nconst EntityList: React.FC<EntityListProps & StateProps> = ({ encounter, fullWidth, fullScreen, short }) => {\r\n    const theme = useTheme();\r\n    const entitiesByInitiative: EntityWithInitiative[] = useMemo(() => sortEntitiesWithInitiative(encounter), [encounter]);\r\n    const dividerIndex = useMemo(() => entitiesByInitiative.findIndex(e => e.dividerAfterThisOne), [entitiesByInitiative]);\r\n\r\n    return (\r\n        <EntityListContainer fullWidth={fullWidth} fullScreen={fullScreen} short={short}>\r\n            <EntityListWrapper>\r\n                {entitiesByInitiative.map(({ type, entity, key, dividerAfterThisOne, isCurrentlyFirst }, index)=> {\r\n                    let entityListItemProps = { key, entityKey: key, type, isInCurrentTurn: index <= dividerIndex, isCurrentlyFirst, ...entity };\r\n\r\n                    if (type === EntityType.CustomCharacter) {\r\n                        entityListItemProps = {\r\n                            ...entityListItemProps,\r\n                            removedHitPoints: (encounter && encounter.customCharacterHitPoints[key] && encounter.customCharacterHitPoints[key].removedHitPoints) || 0,\r\n                            temporaryHitPoints: (encounter && encounter.customCharacterHitPoints[key] && encounter.customCharacterHitPoints[key].temporaryHitPoints) || 0,\r\n                        };\r\n                    }\r\n\r\n                    const color = ((entity as BeyondCharacter).themeColor && (entity as BeyondCharacter).themeColor?.themeColor) || theme.palette.primary.main;\r\n\r\n                    return (\r\n                        <React.Fragment key={key}>\r\n                            <EntityListItem {...entityListItemProps} color={type === EntityType.BeyondCharacter ? color : theme.palette.secondary.main} />\r\n                            {dividerAfterThisOne ? <Divider color={theme.palette.secondary.main} key={`${key}-div`} /> : null}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </EntityListWrapper>\r\n            <EntityListBottomFade />\r\n            <FancyFrame forceUpdateProp={`${short}${fullWidth}${fullScreen}`} />\r\n        </EntityListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect<StateProps>(mapStateToProps)(EntityList);\r\n","import styled from 'styled-components';\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    height: 56px;\r\n    min-height: 56px;\r\n    max-height: 56px;\r\n`;\r\n","import React from 'react';\r\nimport { AppBar, AppBarProps, Toolbar } from '@material-ui/core';\r\nimport { NavbarContainer } from './style';\r\n\r\nconst Navbar: React.FC<AppBarProps> = ({ children, ...other }) => {\r\n    return (\r\n        <NavbarContainer>\r\n            <AppBar position=\"fixed\" color=\"secondary\" style={{ minHeight: '56px' }} {...other}>\r\n                <Toolbar style={{ minHeight: '56px', paddingLeft: '4px', paddingRight: '10px' }}>\r\n                    {children}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const NewEncBeyondCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Checkbox, Paper, Typography, TextField } from '@material-ui/core';\r\nimport { BeyondCharacter, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addBeyondCharacterToEncounter, removeBeyondCharacterFromEncounter, updateBeyondCharacterInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncBeyondCharacterListItemContainer } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addBeyondCharacterToEncounter: typeof addBeyondCharacterToEncounter;\r\n    removeBeyondCharacterFromEncounter: typeof removeBeyondCharacterFromEncounter;\r\n    updateBeyondCharacterInitiative: typeof updateBeyondCharacterInitiative;\r\n}\r\n\r\nexport interface NewEncBeyondCharacterListItemProps {\r\n    character: BeyondCharacter;\r\n}\r\n\r\nconst NewEncBeyondCharacterListItem = ({\r\n    character,\r\n    encounter,\r\n    addBeyondCharacterToEncounter,\r\n    removeBeyondCharacterFromEncounter,\r\n    updateBeyondCharacterInitiative,\r\n}: NewEncBeyondCharacterListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const isCharacterSelected = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        return Object.keys(encounter.beyondCharacters).some(key => encounter.beyondCharacters[parseInt(key)].name === character.name);\r\n    }, [character, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!isCharacterSelected) {\r\n            setInitiative('');\r\n        }\r\n    }, [isCharacterSelected]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.beyondCharacters).find(k => encounter.beyondCharacters[parseInt(k)].name === character.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);  // eslint-disable-line\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (isCharacterSelected) {\r\n            removeBeyondCharacterFromEncounter(character);\r\n            setInitiative('');\r\n        } else {\r\n            addBeyondCharacterToEncounter(character);\r\n\r\n            const initiativeInt = parseInt(initiative);\r\n            if (!isNaN(initiativeInt)) {\r\n                updateBeyondCharacterInitiative(character, initiativeInt);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateBeyondCharacterInitiative(character, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !isCharacterSelected,\r\n        label: isCharacterSelected ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncBeyondCharacterListItemContainer>\r\n                <Checkbox disabled={!encounter} checked={isCharacterSelected} color=\"primary\" onClick={handleCheckboxClick} />\r\n                <Typography variant={small ? 'body1' : 'h6'}>{character.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n            </NewEncBeyondCharacterListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addBeyondCharacterToEncounter, removeBeyondCharacterFromEncounter, updateBeyondCharacterInitiative })(NewEncBeyondCharacterListItem);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\nimport { Palette } from '@material-ui/core/styles/createPalette';\r\n\r\nexport const NewEncCustomCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n\r\nexport interface CounterProps {\r\n    palette: Palette;\r\n    children: number | null;\r\n}\r\n\r\nexport const Counter = styled.div<CounterProps>`\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 12px;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    color: white;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    transition: background-color 300ms, border-color 300ms;\r\n\r\n    ${props => props.children ? `\r\n        background-color: ${props.palette.primary.main};\r\n        border: 2px solid rgba(0, 0, 0, ${props.palette.primary.main});\r\n    ` : `\r\n        border: 2px solid rgba(0, 0, 0, 0.54);\r\n    `}\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, reduce, isNaN } from 'lodash/fp';\r\nimport { Paper, Typography, TextField, IconButton, useTheme, useMediaQuery } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { CustomCharacter, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addCustomCharacterToEncounter, removeCustomCharacterFromEncounter, updateCustomCharacterInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncCustomCharacterListItemContainer, Counter } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCustomCharacterToEncounter: typeof addCustomCharacterToEncounter;\r\n    removeCustomCharacterFromEncounter: typeof removeCustomCharacterFromEncounter;\r\n    updateCustomCharacterInitiative: typeof updateCustomCharacterInitiative;\r\n}\r\n\r\nexport interface NewEncCustomCharacterListItemProps {\r\n    character: CustomCharacter;\r\n}\r\n\r\nconst NewEncCustomCharacterListItem = ({ character, encounter, addCustomCharacterToEncounter, removeCustomCharacterFromEncounter, updateCustomCharacterInitiative }: NewEncCustomCharacterListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const addedCharactersCount = useMemo(() => {\r\n        if (!encounter) {\r\n            return null;\r\n        }\r\n\r\n        const count = reduce((accumulator, c) => accumulator + (c.name.startsWith(character.name) ? 1 : 0), 0, encounter.customCharacters);\r\n        return count === 0 ? null : count;\r\n    }, [character, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!addedCharactersCount) {\r\n            setInitiative('');\r\n        }\r\n    }, [addedCharactersCount]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.customCharacters).find(k => encounter.customCharacters[parseInt(k)].name === character.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);  // eslint-disable-line\r\n\r\n    const handleRemoveClick = () => removeCustomCharacterFromEncounter(character);\r\n    const handleAddClick = () => {\r\n        addCustomCharacterToEncounter(character);\r\n\r\n        const initiativeInt = parseInt(initiative);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateCustomCharacterInitiative(character, initiativeInt);\r\n        }\r\n    };\r\n    const handleCounterClick = () => {\r\n        if (!addedCharactersCount || addedCharactersCount === 0) {\r\n            handleAddClick();\r\n        } else {\r\n            for (let i = 0; i < addedCharactersCount; ++i) {\r\n                handleRemoveClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateCustomCharacterInitiative(character, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !addedCharactersCount,\r\n        label: !!addedCharactersCount ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncCustomCharacterListItemContainer>\r\n                <Counter palette={theme.palette} onClick={handleCounterClick}>\r\n                    {addedCharactersCount}\r\n                </Counter>\r\n                <Typography variant={small ? 'body1' : 'h6'}>{character.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n                <IconButton size=\"small\" onClick={handleRemoveClick} disabled={!addedCharactersCount}>\r\n                    <Remove />\r\n                </IconButton>\r\n                <IconButton size=\"small\" onClick={handleAddClick}>\r\n                    <Add />\r\n                </IconButton>\r\n            </NewEncCustomCharacterListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCustomCharacterToEncounter, removeCustomCharacterFromEncounter, updateCustomCharacterInitiative })(NewEncCustomCharacterListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, BeyondCharacter } from '../../redux/types';\r\nimport { NewEncBeyondCharacterListItem } from '../NewEncBeyondCharacterListItem';\r\nimport { NewEncCustomCharacterListItem } from '../NewEncCustomCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: BeyondCharacter[];\r\n}\r\n\r\nconst NewEncBeyondCharactersList = ({ characters }: StateProps) => (\r\n    <React.Fragment>\r\n        {characters.length > 0 \r\n            ? (\r\n                navigator.onLine ? (\r\n                    characters.map(c => <NewEncBeyondCharacterListItem key={c.id} character={c} />)\r\n                ) : (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"body1\">While you are offline your D&D Beyond characters will be treated as custom characters - you'll have to keep track of their hit points manually.</Typography>\r\n                        {characters.map(c => <NewEncCustomCharacterListItem key={c.id} character={{ name: c.name, maxHitPoints: c.maxHitPoints, avatarUrl: c.avatarUrl }} />)}\r\n                    </React.Fragment>\r\n                )\r\n            ) : (\r\n                <Typography variant=\"body1\">Currently you don't have any imported D&D Beyond characters.</Typography>\r\n            )\r\n        }\r\n    </React.Fragment>\r\n);\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.beyondCharacters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncBeyondCharactersList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, CustomCharacter } from '../../redux/types';\r\nimport { NewEncCustomCharacterListItem } from '../NewEncCustomCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: CustomCharacter[];\r\n}\r\n\r\nconst NewEncCustomCharactersList = ({ characters }: StateProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <NewEncCustomCharacterListItem key={c.name} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved custom characters.</Typography>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.customCharacters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncCustomCharactersList);\r\n","import styled from 'styled-components';\r\n\r\nexport const NotesContainer = styled.div<{ short?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.short ? 885 : 920}px;\r\n    height: ${props => props.short ? 220 : 260}px;\r\n    margin-top: 16px;\r\n`;\r\n\r\nexport const NotesCanvas = styled.canvas`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 12px;\r\n    touch-action: none;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State } from '../../redux/types';\r\nimport { updateImgNotes } from '../../redux/actions/encounter';\r\nimport { FancyFrame } from '../Frame';\r\nimport { NotesContainer, NotesCanvas } from './style';\r\n\r\ninterface StateProps {\r\n    imageNotes: Record<number, string>;\r\n    currentKey: number | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateImgNotes: typeof updateImgNotes;\r\n}\r\n\r\nexport interface NotesProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Notes = ({ short, imageNotes, currentKey, updateImgNotes }: NotesProps & StateProps & DispatchProps) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const prevPointerPosition = useRef<{ x: number, y: number } | null>(null);\r\n    const [prevKey, setPrevKey] = useState<number | null>(null);\r\n\r\n    const [canvasSize, setCanvasSize] = useState<{ width?: number, height?: number }>({});\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateCanvasSize);\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateCanvasSize();\r\n    }, [canvasRef]);\r\n\r\n    useEffect(() => {\r\n        if (!prevKey) {\r\n            setPrevKey(currentKey);\r\n            loadNote();\r\n            return;\r\n        }\r\n\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            updateImgNotes(prevKey, canvas.toDataURL());\r\n            loadNote();\r\n        }\r\n\r\n        setPrevKey(currentKey);\r\n    }, [currentKey]);  // eslint-disable-line\r\n\r\n    const loadNote = () => {\r\n        if (currentKey) {\r\n            const note = imageNotes[currentKey];\r\n            const { current: canvas } = canvasRef;\r\n            if (canvas) {\r\n                canvas.getContext('2d')?.clearRect(0, 0, 100000, 100000);\r\n                if (note) {\r\n                    var img = new window.Image();\r\n                    img.addEventListener('load', () => {\r\n                        canvas.getContext('2d')?.drawImage(img, 0, 0);\r\n                    });\r\n                    img.setAttribute('src', note);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateCanvasSize = () => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const { width, height } = canvas.getBoundingClientRect();\r\n            setCanvasSize({ width, height });\r\n        }\r\n    };\r\n\r\n    const handlePointerMove = (e: React.PointerEvent<HTMLCanvasElement>) => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                const { pressure, buttons, clientX, clientY } = e;\r\n                const x = clientX - canvas.getBoundingClientRect().x;\r\n                const y = clientY - canvas.getBoundingClientRect().y;\r\n                const lineThickness = pressure || 1;\r\n\r\n                if (!pressure || !buttons) {\r\n                    prevPointerPosition.current = null;\r\n                    return;\r\n                } \r\n\r\n                if (prevPointerPosition.current) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(prevPointerPosition.current.x, prevPointerPosition.current.y);\r\n                    ctx.lineTo(x, y);\r\n                    ctx.lineWidth = lineThickness * 2;\r\n                    ctx.stroke();\r\n                }\r\n\r\n                prevPointerPosition.current = { x, y };\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePointerUp = () => (prevPointerPosition.current = null);\r\n\r\n    const canvasProps = {\r\n        ref: canvasRef,\r\n        onPointerMove: handlePointerMove,\r\n        onPointerUp: handlePointerUp,\r\n        ...canvasSize,\r\n    };\r\n\r\n    return (\r\n        <NotesContainer short={short}>\r\n            <NotesCanvas {...canvasProps}></NotesCanvas>\r\n            <FancyFrame forceUpdateProp={short} />\r\n        </NotesContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    imageNotes: (state.encounter && state.encounter.imgNotesByKey) || {},\r\n    currentKey: (state.encounter && (state.encounter.selectedEntityKey || state.encounter.currentTurnKey)) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateImgNotes })(Notes);\r\n","import styled from 'styled-components';\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const NumpadFrameContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '243' : '288'}px;\r\n    height: ${props => props.short ? '420' : '480'}px;\r\n`;\r\n\r\nexport const NumpadContainer = styled.div<Multiheight>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: ${props => props.short ? '211' : '256'}px;\r\n    height: ${props => props.short ? '400' : '460'}px;\r\n    padding: 16px;\r\n    padding-bottom: 0;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const NumpadValueContainer = styled.div<Multiheight>`\r\n    width: 100%;\r\n    height: 80px;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const NumpadValueWrapper = styled.div<Multiheight>`\r\n    position: absolute;\r\n    width: calc(100% - 32px);\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    user-select: none;\r\n    z-index: 10;\r\n`;\r\n\r\nexport const NumpadButtonContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '65' : '80'}px;\r\n    height: ${props => props.short ? '65' : '80'}px;\r\n    margin-bottom: 8px;\r\n\r\n    &:not(:nth-child(3n + 1)) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const NumpadButtonValueContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadButtonValue = styled.div<Multiheight>`\r\n    font-size: ${props => props.short ? '30' : '40'}px;\r\n    line-height: ${props => props.short ? '30' : '40'}px;\r\n    text-align: center;\r\n    user-select: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateCustomCharacterHitPoints } from '../../redux/actions/encounter';\r\nimport { SquareFrame, ScrollFrame, FancyFrame } from '../Frame';\r\nimport {\r\n    NumpadFrameContainer,\r\n    NumpadContainer,\r\n    NumpadValueContainer,\r\n    NumpadValueWrapper,\r\n    NumpadValue,\r\n    NumpadButtonContainer,\r\n    NumpadButtonValueContainer,\r\n    NumpadButtonValue,\r\n} from './style';\r\n\r\ninterface NumpadButtonProps {\r\n    children: React.ReactNode;\r\n    onClick?: () => void;\r\n    color?: string;\r\n    padding?: string;\r\n    short?: boolean;\r\n}\r\n\r\nconst NumpadButton: React.FC<NumpadButtonProps> = ({ children, padding, color, onClick, short }) => {\r\n    const [backgroundColor, setBackgroundColor] = useState('white');\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n        setBackgroundColor('#ccc');\r\n        setTimeout(() => setBackgroundColor('white'), 100);\r\n    };\r\n\r\n    return (\r\n        <NumpadButtonContainer onClick={handleClick} short={short}>\r\n            <SquareFrame forceUpdateProp={short} color={color || '#555'} backgroundColor={backgroundColor} />\r\n            <NumpadButtonValueContainer>\r\n                <NumpadButtonValue style={{ padding }} short={short}>{children}</NumpadButtonValue>\r\n            </NumpadButtonValueContainer>\r\n        </NumpadButtonContainer>\r\n    );\r\n};\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateCustomCharacterHitPoints: typeof updateCustomCharacterHitPoints;\r\n}\r\n\r\nexport interface NumpadProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Numpad = ({ short, encounter, updateCustomCharacterHitPoints }: NumpadProps & StateProps & DispatchProps) => {\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n\r\n    const handleValueClick = () => setCurrentValue(0);\r\n    const handleButtonClick = (number: number) => () => setCurrentValue(v => v * 10 + number);\r\n    const handleSubmit = (sign: number) => () => {\r\n        if (encounter && encounter.selectedEntityKey && encounter.customCharacters[encounter.selectedEntityKey]) {\r\n            updateCustomCharacterHitPoints(encounter.selectedEntityKey, sign * currentValue);\r\n        }\r\n\r\n        setCurrentValue(0);\r\n    };\r\n\r\n    return (\r\n        <NumpadFrameContainer short={short}>\r\n            <FancyFrame forceUpdateProp={short} backgroundColor=\"rgba(255, 255, 255, 0.8)\" />\r\n            <NumpadContainer short={short}>\r\n                <NumpadValueContainer onClick={handleValueClick}>\r\n                    <NumpadValueWrapper>\r\n                        <NumpadValue>{currentValue || ''}</NumpadValue>\r\n                        <ScrollFrame color=\"#555\" backgroundColor=\"white\" />\r\n                    </NumpadValueWrapper>\r\n                </NumpadValueContainer>\r\n                <NumpadButton short={short} onClick={handleButtonClick(7)}>7</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(8)}>8</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(9)}>9</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(4)}>4</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(5)}>5</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(6)}>6</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(1)}>1</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(2)}>2</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(3)}>3</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(-1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#b13735'><KeyboardArrowDown fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(0)}>0</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#08a300'><KeyboardArrowUp fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n            </NumpadContainer>\r\n        </NumpadFrameContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateCustomCharacterHitPoints })(Numpad);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedBeyondCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { BeyondCharacter } from '../../redux/types';\r\nimport { updateBeyondCharacterMaxHp, deleteBeyondCharacter } from '../../redux/actions/beyondCharacters';\r\nimport { SavedBeyondCharacterListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateBeyondCharacterMaxHp: typeof updateBeyondCharacterMaxHp;\r\n    deleteBeyondCharacter: typeof deleteBeyondCharacter;\r\n}\r\n\r\nexport interface SavedBeyondCharacterListItemProps {\r\n    character: BeyondCharacter;\r\n}\r\n\r\nconst SavedBeyondCharacterListItem: React.FC<SavedBeyondCharacterListItemProps & DispatchProps> = ({ character, updateBeyondCharacterMaxHp, deleteBeyondCharacter }) => {\r\n    const [maxHp, setMaxHp] = useState<string>(character.maxHitPoints.toString());\r\n    const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n    const openConfirmationDialog = () => setIsDialogOpen(true);\r\n    const closeConfirmationDialog = () => setIsDialogOpen(false);\r\n\r\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { id } = character;\r\n        const { value } = e.target;\r\n\r\n        setMaxHp(value);\r\n        updateBeyondCharacterMaxHp(id, parseInt(value) || 0);\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        const { id } = character;\r\n        deleteBeyondCharacter(id);\r\n        closeConfirmationDialog();\r\n    };\r\n\r\n    const { name, avatarUrl } = character;\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedBeyondCharacterListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <TextField label=\"Max HP\" type=\"number\" value={maxHp} onChange={onInputChange} style={{ width: '64px' }} />\r\n                <IconButton onClick={openConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedBeyondCharacterListItemContainer>\r\n            <Dialog open={isDialogOpen} onClose={closeConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved D&D Beyond characters. You will only be able to undo this by importing this character again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateBeyondCharacterMaxHp, deleteBeyondCharacter })(SavedBeyondCharacterListItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addBeyondCharacterByUrl } from '../../redux/actions/beyondCharacters';\r\nimport { State, BeyondCharacter } from '../../redux/types';\r\nimport { SavedBeyondCharacterListItem } from '../SavedBeyondCharacterListItem';\r\nimport { Tooltip } from '../Tooltip';\r\n\r\ninterface StateProps {\r\n    characters: BeyondCharacter[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addBeyondCharacterByUrl: (url: string, maxHitPoints: number) => void;\r\n}\r\n\r\nconst SavedBeyondCharactersList: React.FC<StateProps & DispatchProps> = ({ characters, addBeyondCharacterByUrl }) => {\r\n    const [isNewCharacterDialogOpen, setIsNewCharacterDailogOpen] = useState<boolean>(false);\r\n    const [characterURL, setCharacterURL] = useState<string>('');\r\n    const [characterMaxHitPoints, setCharacterMaxHitPoints] = useState<string>('');\r\n\r\n    const openNewCharacterDialog = () => setIsNewCharacterDailogOpen(true);\r\n    const closeNewCharacterDialog = () => setIsNewCharacterDailogOpen(false);\r\n\r\n    const handleURLChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterURL(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterMaxHitPoints(e.target.value);\r\n\r\n    const handleImportConfirmed = () => {\r\n        closeNewCharacterDialog();\r\n        addBeyondCharacterByUrl(characterURL, parseInt(characterMaxHitPoints) || 0);\r\n        setCharacterURL('');\r\n        setCharacterMaxHitPoints('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <SavedBeyondCharacterListItem key={c.id} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any imported D&D Beyond characters.</Typography>\r\n            }\r\n            <Tooltip title={navigator.onLine ? '' : 'You have to be online to import a new D&D Beyond character'}>\r\n                <span>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={openNewCharacterDialog} disabled={!navigator.onLine}>Add character</Button>\r\n                </span>\r\n            </Tooltip>\r\n            <Dialog open={isNewCharacterDialogOpen} onClose={closeNewCharacterDialog}>\r\n                <DialogTitle>Import new character from D&D Beyond</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Paste a link to the character you want to add in the input field below. Make sure the character privacy is set to \"Public\", otherwise it will not be imported.\r\n                        <br /> <br />\r\n                        Optionally, specify character's maximum hit points. You will be able to change them later.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Character URL\" value={characterURL} onChange={handleURLChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={characterMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewCharacterDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleImportConfirmed} color=\"primary\" variant=\"contained\" disabled={!characterURL}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.beyondCharacters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addBeyondCharacterByUrl })(SavedBeyondCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedCustomCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :first-child {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\nimport { CustomCharacter } from '../../redux/types';\r\nimport { updateCustomCharacterSafe, deleteCustomCharacter, UpdateCustomCharacterProps } from '../../redux/actions/customCharacters';\r\nimport { SavedCustomCharacterListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateCustomCharacterSafe: (props: UpdateCustomCharacterProps) => void;\r\n    deleteCustomCharacter: typeof deleteCustomCharacter;\r\n}\r\n\r\nexport interface SavedCustomCharacterListItemProps {\r\n    character: CustomCharacter;\r\n}\r\n\r\nconst SavedCustomCharacterListItem: React.FC<SavedCustomCharacterListItemProps & DispatchProps> = ({ character, updateCustomCharacterSafe, deleteCustomCharacter }) => {\r\n    const { name, avatarUrl, maxHitPoints } = character;\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState<boolean>(false);\r\n    const [isDeleteConfirmationDialogOpen, setIsDeleteConfirmationDialogOpen] = useState<boolean>(false);\r\n    const [nameInputValue, setnameInputValue] = useState<string>(name);\r\n    const [hitPointsInputValue, setHitPointsInputValue] = useState<string>(maxHitPoints.toString());\r\n    const [avatarUrlInputValue, setAvatarUrlInputValue] = useState<string>(avatarUrl || '');\r\n\r\n    const openEditDialog = () => setIsEditDialogOpen(true);\r\n    const closeEditDialog = () => setIsEditDialogOpen(false);\r\n\r\n    const openDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(true);\r\n    const closeDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(false);\r\n\r\n    const handlenameInputValueChange = (e: React.ChangeEvent<HTMLInputElement>) => setnameInputValue(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setHitPointsInputValue(e.target.value);\r\n    const handleAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setAvatarUrlInputValue(e.target.value); \r\n\r\n    const handleEditConfirmed = () => {\r\n        updateCustomCharacterSafe({\r\n            originalCharacter: character,\r\n            updatedCharacter: {\r\n                name: nameInputValue,\r\n                avatarUrl: avatarUrlInputValue,\r\n                maxHitPoints: parseInt(hitPointsInputValue) || 0,\r\n            },\r\n        });\r\n        closeEditDialog();\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        closeDeleteConfirmationDialog();\r\n        deleteCustomCharacter(character);\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedCustomCharacterListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <IconButton onClick={openEditDialog}>\r\n                    <Edit />\r\n                </IconButton>\r\n                <IconButton onClick={openDeleteConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedCustomCharacterListItemContainer>\r\n            <Dialog open={isEditDialogOpen} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Change name, max hit points or avatar url of your custom character.</DialogContentText>\r\n                    <TextField fullWidth margin=\"dense\" label=\"Character Name\" value={nameInputValue} onChange={handlenameInputValueChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={hitPointsInputValue} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={avatarUrlInputValue} onChange={handleAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeEditDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleEditConfirmed} color=\"primary\" variant=\"contained\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isDeleteConfirmationDialogOpen} onClose={closeDeleteConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved custom characters. You will only be able to undo this by creating this character again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCustomCharacterSafe, deleteCustomCharacter })(SavedCustomCharacterListItem);\r\n","import styled from 'styled-components';\r\nimport { Avatar as AvatarMui } from '@material-ui/core';\r\n\r\nexport const DefaultAvatarList = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div<{ selected?: boolean, color: string }>`\r\n    margin-top: 16px;\r\n    border: 2px solid ${props => props.selected ? props.color : 'white'};\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Avatar = styled(AvatarMui)`\r\n    && > {\r\n        width: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTheme, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addCustomCharacterSafe } from '../../redux/actions/customCharacters';\r\nimport { State, CustomCharacter } from '../../redux/types';\r\nimport { SavedCustomCharacterListItem } from '../SavedCustomCharacterListItem';\r\nimport { DefaultAvatarList, AvatarWrapper, Avatar } from './style';\r\n\r\nconst defaultAvatarSources = [\r\n    `${process.env.PUBLIC_URL}/zombie.png`,\r\n    `${process.env.PUBLIC_URL}/skeleton.png`,\r\n    `${process.env.PUBLIC_URL}/devil.png`,\r\n    `${process.env.PUBLIC_URL}/commoner.png`,\r\n    `${process.env.PUBLIC_URL}/wizard.png`,\r\n];\r\n\r\ninterface StateProps {\r\n    characters: CustomCharacter[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCustomCharacterSafe: (npc: CustomCharacter) => void;\r\n}\r\n\r\nconst SavedCustomCharactersList: React.FC<StateProps & DispatchProps> = ({ characters, addCustomCharacterSafe }) => {\r\n    const theme = useTheme();\r\n\r\n    const [isNewCharacterDialogOpen, setIsNewCharacterDialogOpen] = useState<boolean>(false);\r\n    const [characterName, setCharacterName] = useState<string>('');\r\n    const [characterMaxHitPoints, setCharacterMaxHitPoints] = useState<string>('');\r\n    const [characterAvtarUrl, setCharacterAvtarUrl] = useState<string>('');\r\n\r\n    const openNewCharacterDialog = () => setIsNewCharacterDialogOpen(true);\r\n    const closeNewCharacterDialog = () => setIsNewCharacterDialogOpen(false);\r\n\r\n    const handleCharacterNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterAvtarUrl(e.target.value); \r\n\r\n    const handleNewCharacterConfirmed = () => {\r\n        const maxHitPoints = parseInt(characterMaxHitPoints) || 0;\r\n        addCustomCharacterSafe({ name: characterName, maxHitPoints, avatarUrl: characterAvtarUrl });\r\n\r\n        closeNewCharacterDialog();\r\n        setCharacterName('');\r\n        setCharacterMaxHitPoints('');\r\n        setCharacterAvtarUrl('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <SavedCustomCharacterListItem key={c.name} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved custom characters.</Typography>\r\n            }\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewCharacterDialog}>Add Character</Button>\r\n            <Dialog open={isNewCharacterDialogOpen} onClose={closeNewCharacterDialog}>\r\n                <DialogTitle>Create new custom character</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Choose a name for your character and specify maximum hit points. Optionally, specify an avatar URL or pick one of the default avatars.\r\n                        <br /> <br />\r\n                        It is not possible to have several custom characters with the same name.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Character Name\" value={characterName} onChange={handleCharacterNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={characterMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={characterAvtarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                    <DefaultAvatarList>\r\n                        {defaultAvatarSources.map(src => (\r\n                            <AvatarWrapper key={src} onClick={() => setCharacterAvtarUrl(src)} color={theme.palette.primary.main} selected={src === characterAvtarUrl}>\r\n                                <Avatar src={src} variant=\"rounded\" />\r\n                            </AvatarWrapper>\r\n                        ))}\r\n                    </DefaultAvatarList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewCharacterDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleNewCharacterConfirmed} color=\"primary\" variant=\"contained\" disabled={!characterName || !characterMaxHitPoints}>Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: state.customCharacters || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCustomCharacterSafe })(SavedCustomCharactersList);\r\n","import styled from 'styled-components';\r\n\r\nexport const TextNotesContainer = styled.div<{ rows: string; fullWidth?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.fullWidth ? '98vw' : '600px'};\r\n    height: ${props => parseInt(props.rows) * 19 + 33}px;\r\n    margin-top: 8px;\r\n`;\r\n\r\nexport const TextNotesTextFieldWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 32px);\r\n    margin: 12px 12px 20px 12px;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TextField } from '@material-ui/core';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateTextNotes } from '../../redux/actions/encounter';\r\nimport { SquareFrame } from '../Frame';\r\nimport { TextNotesContainer, TextNotesTextFieldWrapper } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateTextNotes: typeof updateTextNotes;\r\n}\r\n\r\nexport interface TextNotesProps {\r\n    rows: string;\r\n    fullWidth?: boolean;\r\n}\r\n\r\nconst TextNotes: React.FC<TextNotesProps & StateProps & DispatchProps> = ({ rows, fullWidth, encounter, updateTextNotes }) => {\r\n    const notesValue = useMemo(() => {\r\n        if (!encounter) {\r\n            return '';\r\n        }\r\n\r\n        const key = encounter.selectedEntityKey || encounter.currentTurnKey;\r\n        return encounter.textNotesByKey[key] || '';\r\n    }, [encounter]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (encounter) {\r\n            const key = encounter.selectedEntityKey || encounter.currentTurnKey;\r\n            updateTextNotes(key, e.target.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TextNotesContainer rows={rows} fullWidth={fullWidth}>\r\n            <TextNotesTextFieldWrapper>\r\n                <TextField multiline rows={rows} style={{ width: '100%' }} value={notesValue} onChange={handleChange} />\r\n            </TextNotesTextFieldWrapper>\r\n            <SquareFrame forceUpdateProp={rows} />\r\n        </TextNotesContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateTextNotes })(TextNotes);\r\n","import styled from 'styled-components';\r\n\r\nexport const RootComponentContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const RootComponentWrapper = styled.div`\r\n    position: absolute;\r\n    top: 56px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: calc(100% - 64px);\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div<{ small?: boolean }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    ${props => props.small && 'align-items: center;'}\r\n`;\r\n\r\nexport const ListAndNumpadContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nexport const NotesContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTheme, useMediaQuery, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Typography, Menu, MenuItem } from '@material-ui/core';\r\nimport { People, Close, Send, MoreVert, Edit, HighlightOff, Fullscreen, FullscreenExit, TouchApp, Keyboard } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { resetEncounter, createEncounter, nextTurn, prevTurn } from '../../redux/actions/encounter';\r\nimport { closeErrorDialog } from '../../redux/actions/ui';\r\nimport { AnimatedImage } from '../AnimatedImage';\r\nimport { DividedList } from '../DividedList';\r\nimport { EntityList } from '../EntityList';\r\nimport { Navbar } from '../Navbar';\r\nimport { NewEncBeyondCharactersList } from '../NewEncBeyondCharactersList';\r\nimport { NewEncCustomCharactersList } from '../NewEncCustomCharactersList';\r\nimport { Notes } from '../Notes';\r\nimport { Numpad } from '../Numpad';\r\nimport { SavedBeyondCharactersList } from '../SavedBeyondCharactersList';\r\nimport { SavedCustomCharactersList } from '../SavedCustomCharactersList';\r\nimport { TextNotes } from '../TextNotes';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { RootComponentContainer, RootComponentWrapper, ContentContainer, ListAndNumpadContainer, NotesContainer } from './style';\r\n\r\nexport interface StateProps {\r\n    isErrorDialogOpen: boolean;\r\n    errorMessage?: JSX.Element;\r\n    encounter: EncounterState | null;\r\n    hasBeyondCharacters?: boolean;\r\n}\r\n\r\nexport interface DispatchProps {\r\n    closeErrorDialog: typeof closeErrorDialog;\r\n    resetEncounter: typeof resetEncounter;\r\n    createEncounter: typeof createEncounter;\r\n    nextTurn: typeof nextTurn;\r\n    prevTurn: typeof prevTurn;\r\n}\r\n\r\nconst RootComponent: React.FC<StateProps & DispatchProps> = ({\r\n    isErrorDialogOpen,\r\n    errorMessage,\r\n    encounter,\r\n    hasBeyondCharacters,\r\n    closeErrorDialog,\r\n    resetEncounter,\r\n    createEncounter,\r\n    nextTurn,\r\n    prevTurn,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const short = useMediaQuery('(max-height: 830px)');\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n\r\n    const [isSavedCharactersDialogOpen, setIsSavedCharactersDialogOpen] = useState(false);\r\n    const [isNewEncounterDialogOpen, setIsNewEncounterDialogOpen] = useState(false);\r\n\r\n    const [isCreatingNewEncounter, setIsCreatingNewEncounter] = useState(false);\r\n    const [isKeyboardMode, setIsKeyboardMode] = useState(false);\r\n\r\n    const canNewEncounterBeCreated = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        const { beyondCharacters, customCharacters, initiativeById } = encounter;\r\n        const allBeyondHaveInitiative = Object.keys(beyondCharacters).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n        const allCustomHaveInitiative = Object.keys(customCharacters).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n\r\n        return allBeyondHaveInitiative && allCustomHaveInitiative && Object.keys(initiativeById).length > 0;\r\n    }, [encounter]);\r\n\r\n    const currentBackgroundUrl = useMemo(() => {\r\n        if (!encounter) {\r\n            return undefined;\r\n        }\r\n\r\n        const { beyondCharacters, currentTurnKey } = encounter;\r\n        const currentBeyondCharacter = beyondCharacters[currentTurnKey];\r\n        if (currentBeyondCharacter) {\r\n            return currentBeyondCharacter.defaultBackdrop.largeBackdropAvatarUrl;\r\n        }\r\n\r\n        return undefined;\r\n    }, [encounter]);\r\n\r\n    const toggleFullscreen = () => {\r\n        const isFullscreen = document.fullscreenElement !== null;\r\n        if (isFullscreen) {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n        } else {\r\n            const element = document.documentElement;\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n            }\r\n        }\r\n    };\r\n\r\n    const openMenu = (event: React.MouseEvent<HTMLButtonElement>) => setMenuAnchorElement(event.currentTarget);\r\n    const closeMenu = () => setMenuAnchorElement(null);\r\n\r\n    const toggleInputMode = () => {\r\n        if (isKeyboardMode) {\r\n            setIsKeyboardMode(false);\r\n        } else {\r\n            setIsKeyboardMode(true);\r\n        }\r\n    };\r\n\r\n    const openBeyondCharacterDialog = () => setIsSavedCharactersDialogOpen(true);\r\n    const closeBeyondCharacterDialog = () => setIsSavedCharactersDialogOpen(false);\r\n\r\n    const openNewEncounterDialog = () => {\r\n        if (!!encounter && encounter.currentId === 1) {\r\n            setIsCreatingNewEncounter(true);\r\n        } else {\r\n            setIsCreatingNewEncounter(false);\r\n        }\r\n        setIsNewEncounterDialogOpen(true);\r\n    };\r\n    const closeNewEncounterDialog = () => setIsNewEncounterDialogOpen(false);\r\n\r\n    const handleNewEncounterCancel = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            resetEncounter();\r\n        }\r\n    };\r\n\r\n    const handleNewEncounterOk = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            createEncounter();\r\n        }\r\n    };\r\n\r\n    const isFullscreen = document.fullscreenElement !== null;\r\n\r\n    return (\r\n        <RootComponentContainer>\r\n            {small ? null : <AnimatedImage src={currentBackgroundUrl} />}\r\n            <Navbar>\r\n                <IconButton color=\"inherit\" onClick={openMenu}>\r\n                    <MoreVert />\r\n                </IconButton>\r\n                {(encounter && encounter.currentId > 1) ? (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"h5\">Round {encounter.currentRound}</Typography>\r\n                        <div style={{ flex: '1' }} />\r\n                        <Tooltip title=\"Previous turn\">\r\n                            <IconButton color=\"inherit\" onClick={prevTurn}>\r\n                                <Send style={{ transform: 'rotateY(180deg)', opacity: '0.7' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Button disableElevation variant=\"contained\" color=\"primary\" endIcon={<Send />} onClick={nextTurn}>Next turn</Button>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <Typography variant=\"h5\">No encounter</Typography>\r\n                )}\r\n            </Navbar>\r\n            <Menu anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu}>\r\n                <MenuItem onClick={() => { openBeyondCharacterDialog(); closeMenu(); }}>\r\n                    <People color=\"secondary\" style={{ marginRight: '16px' }} /> Saved characters\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { openNewEncounterDialog(); closeMenu(); }}>\r\n                    <Edit color=\"secondary\" style={{ marginRight: '16px' }} /> {!!encounter && encounter.currentId === 1 ? 'Create new encounter' : 'Edit current encounter'}\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { resetEncounter(); closeMenu(); }} disabled={!!encounter && encounter.currentId === 1}>\r\n                    <HighlightOff color=\"secondary\" style={{ marginRight: '16px' }} /> Clear current encounter\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { toggleFullscreen(); closeMenu(); }}>\r\n                    {isFullscreen ? <FullscreenExit color=\"secondary\" style={{ marginRight: '16px' }} /> : <Fullscreen color=\"secondary\" style={{ marginRight: '16px' }} />} Toggle fullscreen\r\n                </MenuItem>\r\n                {small ? null : (\r\n                    <MenuItem onClick={toggleInputMode}>\r\n                        {isKeyboardMode ? <TouchApp color=\"secondary\" style={{ marginRight: '16px' }} /> : <Keyboard color=\"secondary\" style={{ marginRight: '16px' }} />} \r\n                        {isKeyboardMode ? 'Enable touchscreen mode' : 'Enable keyboard mode'}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n            <RootComponentWrapper>\r\n                <ContentContainer small={small}>\r\n                    {(encounter && encounter.currentId > 1)\r\n                        ? (\r\n                            small ? (\r\n                                <React.Fragment>\r\n                                    <EntityList fullWidth fullScreen={isFullscreen} />\r\n                                    <NotesContainer>\r\n                                        <TextNotes fullWidth rows={isFullscreen ? '4' : '2'} />\r\n                                    </NotesContainer>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    <ListAndNumpadContainer>\r\n                                        <EntityList short={short} />\r\n                                        {isKeyboardMode ? null : <Numpad short={short} />}\r\n                                    </ListAndNumpadContainer>\r\n                                    <NotesContainer>\r\n                                        {isKeyboardMode\r\n                                            ? <TextNotes rows=\"8\" />\r\n                                            : <Notes short={short} />\r\n                                        }\r\n                                    </NotesContainer>\r\n                                </React.Fragment>\r\n                            )\r\n                        )\r\n                        : (\r\n                            <div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'flex-start', paddingTop: '32px' }}>\r\n                                <Typography variant=\"h5\">Create a new encounter to begin</Typography>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </ContentContainer>\r\n            </RootComponentWrapper>\r\n            <Dialog fullScreen open={isSavedCharactersDialogOpen} onClose={closeBeyondCharacterDialog}>\r\n                <Navbar color=\"primary\">\r\n                    <IconButton color=\"inherit\" onClick={closeBeyondCharacterDialog}>\r\n                        <Close />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '8px' }}>\r\n                        Saved Characters\r\n                    </Typography>\r\n                </Navbar>\r\n                <DialogContent>\r\n                    <DividedList titles={(hasBeyondCharacters || navigator.onLine) ? ['D&D Beyond Characters', 'Custom Characters'] : ['Custom Characters']} marginBottomOverride=\"60\">\r\n                        {(hasBeyondCharacters || navigator.onLine) ? <SavedBeyondCharactersList /> : null}\r\n                        <SavedCustomCharactersList />\r\n                    </DividedList>\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Dialog maxWidth=\"lg\" fullScreen={small} open={isNewEncounterDialogOpen}>\r\n                {small ? (\r\n                    <Navbar color=\"primary\">\r\n                        <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                            {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                        </Typography>\r\n                    </Navbar>\r\n                ) : (\r\n                    <DialogTitle>\r\n                        {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                    </DialogTitle>\r\n                )}\r\n                <DialogContent>\r\n                    <DividedList titles={hasBeyondCharacters ? ['D&D Beyond Characters', 'Custom Characters'] : ['Custom Characters']}>\r\n                        {hasBeyondCharacters ? <NewEncBeyondCharactersList /> : null}\r\n                        <NewEncCustomCharactersList />\r\n                    </DividedList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"secondary\" onClick={handleNewEncounterCancel}>Cancel</Button>\r\n                    <Button disabled={!canNewEncounterBeCreated} variant=\"contained\" color=\"primary\" onClick={handleNewEncounterOk}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isErrorDialogOpen} onClose={closeErrorDialog}>\r\n                <DialogTitle>Error</DialogTitle>\r\n                <DialogContent>\r\n                    {errorMessage ? <DialogContentText>{errorMessage}</DialogContentText> : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={closeErrorDialog}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </RootComponentContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    isErrorDialogOpen: (state.ui && state.ui.errorDialog.isOpen) || false,\r\n    errorMessage: state.ui && state.ui.errorDialog.message,\r\n    encounter: state.encounter || null,\r\n    hasBeyondCharacters: !!(state.beyondCharacters && state.beyondCharacters.length > 0),\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeErrorDialog, resetEncounter, createEncounter, nextTurn, prevTurn })(RootComponent);\r\n","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { persistor, store } from './redux';\r\nimport { RootComponent, LoadingView } from './components';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#b13735',\r\n        },\r\n        secondary: {\r\n            main: '#555',\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: 'Cairo',\r\n    },\r\n    breakpoints: {\r\n        values: {\r\n            xs: 0,\r\n            sm: 500,\r\n            md: 960,\r\n            lg: 1280,\r\n            xl: 1920,\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => (\r\n    <ThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <PersistGate loading={<LoadingView />} persistor={persistor}>\r\n                <RootComponent />\r\n            </PersistGate>\r\n        </Provider>\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(<App />);\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}