{"version":3,"sources":["redux/reducers/characters.ts","redux/reducers/index.ts","redux/actions/types.ts","redux/index.ts","components/LoadingView/style.ts","components/LoadingView/LoadingView.tsx","components/Navbar/style.ts","components/Navbar/Navbar.tsx","components/Tooltip/Tooltip.tsx","components/Frame/style.ts","components/Frame/svg/square.tsx","components/Frame/svg/scroll.tsx","components/Frame/svg/fancy.tsx","components/Frame/Frame.tsx","helpers/dnd-beyond/getCharacterStats.ts","redux/actions/characters.ts","components/CharacterListItem/style.ts","components/CharacterListItem/CharacterListItem.tsx","components/EntityList/style.ts","components/EntityList/EntityList.tsx","components/Numpad/style.ts","components/Numpad/Numpad.tsx","components/Notes/style.ts","components/Notes/Notes.tsx","components/RootComponent/style.ts","components/RootComponent/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","rootReducer","combineReducers","characters","state","action","type","payload","id","character","prevCharacter","find","c","index","indexOf","slice","persistConfig","key","storage","stateReconciler","autoMergeLevel2","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","LoadingViewBackground","styled","div","LoadingViewContainer","LoadingViewImage","img","LoadingViewText","LoadingView","src","NavbarContainer","Navbar","children","other","AppBar","position","color","Toolbar","withStyles","theme","tooltip","fontSize","backgroundColor","palette","secondary","main","arrow","props","Tooltip","FrameContainer","FrameTopRowContainer","FrameMiddleRowContainer","FrameBottomRowContainer","FrameMiddleFill","width","height","CornerBaseStyles","css","TopLeftCornerStyles","TopRightCornerStyles","BottomLeftCornerStyles","BottomRightCornerStyles","TopStyles","BottomStyles","LeftStyles","RightStyles","getSquarePart","transform","className","data-name","xmlns","viewBox","style","fill","zIndex","transition","d","boxShadow","SquareCorner","SquareSide","getScrollPart","points","ScrollCorner","ScrollTop","ScrollSide","FancyCorner","FancySide","frameFactory","partSize","Corner","Top","Side","FrameTopLeftCorner","FrameTopRightCorner","FrameBottomLeftCorner","FrameBottomRightCorner","FrameTop","FrameBottom","FrameLeft","FrameRight","containerRef","useRef","useState","topPartWidth","setTopPartWidth","sidePartHeight","setSidePartHeight","useEffect","window","addEventListener","handleResize","removeEventListener","container","current","clientWidth","clientHeight","framePartProps","ref","Fragment","SquareFrame","borderTop","boxSizing","ScrollFrame","FancyFrame","getCharacterStats","a","characterId","jsonUrl","axios","method","url","withCredentials","response","data","updateCharacterById","maxHitPoints","dispatch","getState","toString","then","stats","name","removedHitPoints","temporaryHitPoints","deathSaves","avatarUrl","themeColor","defaultBackdrop","updateCharacter","error","characterFetchFailed","message","split","length","every","addCharacter","parseInt","addCharacterByUrl","CharacterListItemScrollContainer","CharacterListItemContainer","CharacterListItemWrapper","Avatar","NameAndSavesContainer","Name","SavesContainer","HitPointsContainer","HitPoints","connect","undefined","EntityListContainer","EntityListWrapper","EntityListFade","EntityListTopFade","EntityListBottomFade","map","NumpadFrameContainer","NumpadContainer","NumpadValueContainer","NumpadValueWrapper","NumpadValue","NumpadButtonContainer","NumpadButtonValueContainer","NumpadButtonValue","NumpadButton","paddingBottom","onClick","setBackgroundColor","setTimeout","Numpad","currentValue","setCurrentValue","handleButtonClick","number","v","handleSubmit","sign","console","log","NotesContainer","NotesCanvas","canvas","Notes","canvasRef","prevPointerPosition","canvasSize","setCanvasSize","updateCanvasSize","getBoundingClientRect","canvasProps","onPointerMove","e","ctx","getContext","pressure","buttons","clientX","clientY","x","y","lineThickness","beginPath","moveTo","lineTo","lineWidth","stroke","onPointerUp","RootComponentContainer","backgroundImageSrc","RootComponentWrapper","ContentContainer","ListAndNumpadContainer","currentBackgroundUrl","largeBackdropAvatarUrl","isCharacterDialogOpen","setIsCharacterDialogOpen","closeCharacterDialog","title","IconButton","People","Dialog","fullScreen","open","onClose","Close","Typography","variant","marginLeft","createMuiTheme","primary","typography","fontFamily","App","ThemeProvider","loading","Boolean","location","hostname","match","ReactDOM","createRoot","document","getElementById","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ee83acce.chunk.js","sourcesContent":["import { Character } from '../types';\r\nimport {\r\n    CHARACTER_ADDED,\r\n    CHARACTER_UPDATED,\r\n    CHARACTER_FETCH_FAILED,\r\n    CHARACTER_ALREADY_EXISTS,\r\n    CharacterActionType,\r\n} from '../actions/types';\r\n\r\nexport type CharactersState = Character[];\r\n\r\nconst initialState: CharactersState = [];\r\n\r\nexport const characters = (state = initialState, action: CharacterActionType) => {\r\n    switch (action.type) {\r\n    case CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case CHARACTER_UPDATED:\r\n        const { id, character } = action.payload;\r\n        const prevCharacter = state.find(c => c.id === id);\r\n        if (prevCharacter) {\r\n            const index = state.indexOf(prevCharacter);\r\n            return [...state.slice(0, index), character, ...state.slice(index + 1)];\r\n        }\r\n        return [...state, character];\r\n\r\n    case CHARACTER_ALREADY_EXISTS:\r\n    case CHARACTER_FETCH_FAILED:\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { characters } from './characters';\r\n\r\nconst rootReducer = combineReducers({\r\n    characters,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { Character } from '../types';\r\n\r\nexport const CHARACTER_ADDED = 'CHARACTER_ADDED';\r\nexport const CHARACTER_UPDATED = 'CHARACTER_UPDATED';\r\nexport const CHARACTER_FETCH_FAILED = 'CHARACTER_FETCH_FAILED';\r\nexport const CHARACTER_ALREADY_EXISTS = 'CHARACTER_ALREADY_EXISTS';\r\n\r\nexport interface CharacterAddedAction {\r\n    type: typeof CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface CharacterUpdatedAction {\r\n    type: typeof CHARACTER_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        character: Character;\r\n    };\r\n}\r\n\r\nexport interface CharacterFetchFailedAction {\r\n    type: typeof CHARACTER_FETCH_FAILED;\r\n    error: string;\r\n}\r\n\r\nexport interface CharacterAlreadyExistsAction {\r\n    type: typeof CHARACTER_ALREADY_EXISTS;\r\n}\r\n\r\nexport type CharacterActionType = CharacterAddedAction | CharacterUpdatedAction | CharacterFetchFailedAction | CharacterAlreadyExistsAction;\r\n","import { createStore, applyMiddleware, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer as Reducer<any, any>), applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingViewBackground = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666666;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewImage = styled.img`\r\n    width: 400px;\r\n    max-width: 80%;\r\n`;\r\n\r\nexport const LoadingViewText = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport { LoadingViewBackground, LoadingViewContainer, LoadingViewImage, LoadingViewText } from './style';\r\n\r\nconst LoadingView = () => (\r\n    <LoadingViewBackground>\r\n        <LoadingViewContainer>\r\n            <LoadingViewImage src=\"/fire.gif\" />\r\n            <LoadingViewText>Loading</LoadingViewText>\r\n        </LoadingViewContainer>\r\n    </LoadingViewBackground>\r\n);\r\n\r\nexport default LoadingView;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    flex-grow: 1;\r\n`;\r\n","import React from 'react';\r\nimport { AppBar, AppBarProps, Toolbar } from '@material-ui/core';\r\nimport { NavbarContainer } from './style';\r\n\r\nconst Navbar: React.FC<AppBarProps> = ({ children, ...other }) => {\r\n    return (\r\n        <NavbarContainer>\r\n            <AppBar position=\"relative\" color=\"secondary\" {...other}>\r\n                <Toolbar>\r\n                    {children}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport default withStyles(theme => ({\r\n    tooltip: {\r\n        fontSize: 20,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    arrow: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}))((props: TooltipProps) => <Tooltip arrow {...props} />);\r\n","import styled, { css } from 'styled-components';\r\nimport { FramePartProps } from './Frame';\r\n\r\nexport const FrameContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const FrameTopRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\nexport const FrameMiddleRowContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nexport const FrameBottomRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const FrameMiddleFill = styled.div<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    ${props => props.backgroundColor && `background-color: ${props.backgroundColor};`}\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst CornerBaseStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const TopLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n`;\r\nexport const TopRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n`;\r\nexport const BottomLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n    transform: rotateX(180deg);\r\n`;\r\nexport const BottomRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nexport const TopStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const BottomStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n    transform: rotate(180deg);\r\n`;\r\nexport const LeftStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n`;\r\nexport const RightStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    transform: rotate(180deg);\r\n`;\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M615.2,646.2c-1.7,5.7-12.9,11.7-14.5,11.7H22.5c-1.7,0-12.8-6-14.5-11.7L8.2,19.3V12S16.1,2.3,23.4,1.4H599.80005c7.3.8,15.1,10.6,15.1,10.6v7.3Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M611.9,0H11L0,11.5v637L11,660H612l11-11.5V11.5ZM3,12.8l9.2-9.6h5.9A25.8384,25.8384,0,0,0,7,12.9H6.9v.2A36.38553,36.38553,0,0,0,3,21.7ZM3,26.9A42.92655,42.92655,0,0,1,6.9,15.7V644.3a13.90069,13.90069,0,0,1-1.1-2.1,51.50646,51.50646,0,0,1-2.9-9L3,26.9Zm9.2,629.9L3,647.2v-8.9a40.90524,40.90524,0,0,0,3.9,8.6v.2H7a24.86426,24.86426,0,0,0,11.1,9.8H12.2Zm10.1,0A22.56646,22.56646,0,0,1,8.6,647V13A23.74954,23.74954,0,0,1,22.4,3.1H600.6a22.56647,22.56647,0,0,1,13.7,9.8v634a23.74956,23.74956,0,0,1-13.8,9.9Zm597.6-9.6-9.2,9.6h-5.9a24.86437,24.86437,0,0,0,11.1-9.8h.1v-.2a36.38635,36.38635,0,0,0,3.9-8.6l.00006,9Zm0-14.1a41.717,41.717,0,0,1-3.9,11.2V15.7a13.89825,13.89825,0,0,1,1.1,2.1,51.50837,51.50837,0,0,1,2.9,9l-.1,606.3Zm0-611.4a40.9054,40.9054,0,0,0-3.9-8.6v-.2h-.1a24.86433,24.86433,0,0,0-11.1-9.8h5.9l9.2,9.6-.00007,9Z\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const SquareCorner = getSquarePart();\r\nexport const SquareSide = getSquarePart('translate(0,-32)');\r\nexport const SquareTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3px solid ${color}`, boxSizing: 'border-box', transition: 'background-color 0.3s' }} />\r\n);\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getScrollPart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor ? <polygon fill={backgroundColor} style={{ zIndex: -2 }} transform={transform} points=\"8 93 337 93 337 2 8 2 8 93\"/> : null}\r\n        <path fill={color} transform={transform} d=\"M344,6.39V4.47h-6.14V0h-2.68s-1.06,1.54-3.91,1.54H12.73C9.88,1.54,8.82,0,8.82,0H6.14V4.47H0V6.39c2.53,0,2.67,4.14,2.67,4.14V81.91S2.53,86,0,86v2H6.14v7H8.82V3.31H335.18V91.69H8.82V95s1.06-1.54,3.91-1.54H331.27c2.84,0,3.9,1.52,3.91,1.54h2.68V88H344V86c-2.53,0-2.67-4.13-2.67-4.13V10.53S341.47,6.39,344,6.39ZM6.27,81.91H4.14V12.12H6.27Zm333.79.48h-2.12V12.61h2.12Z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ScrollCorner = getScrollPart();\r\nexport const ScrollTop = getScrollPart('translate(-32,0)');\r\nexport const ScrollSide = getScrollPart('translate(0,-32)');\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M275.08,719a32.47,32.47,0,0,0-1.23-4.29c-1.71-4.36-1.13-582.66-1.13-582.66s0-30.43-.58-49c-.36-11.85,1.72-26.54,3.28-35.6a4,4,0,0,1-1.49-1.64c-1.7-3.61-2.41-7.49-1-11.35a6.27,6.27,0,0,1,.93-1.69c-.7-3.15-.33-6.48-1.3-9.54a42.76,42.76,0,0,0-3.54-7,18.66,18.66,0,0,0-5-6.37c-2-1.48-4.08-2.5-5.8-4.27-1.74-.72-3.49-1.42-5.2-2.21l-.4-.21H29.41a5.1,5.1,0,0,1-3.58,1.27,5.83,5.83,0,0,1-2.25,1.44L23.19,6,23,6.05c-.42.25-.87.47-1.29.74a7.34,7.34,0,0,0-1.22.84c1-.91-.26.24-.45.41a5.85,5.85,0,0,1-2.83,1.33,52.05,52.05,0,0,0-3.9,4c-4.59,5.47-4.83,13.51-6.24,20.2,0,.14-.08.27-.11.4a11.08,11.08,0,0,1,.29,1.52c-.16-1.2.09.35.14.59q.14.63.3,1.26a21,21,0,0,0,.88,2.57c1.07,2.59-1.17,5.4-3.49,6.15a3.22,3.22,0,0,1-.7.14C5.94,55.14,8.24,70.62,7.86,83c-.58,18.57-.58,49-.58,49s.64,576.13-1,587.33a5.14,5.14,0,0,1,3.07,6,29.15,29.15,0,0,1-2.67,7,4.68,4.68,0,0,1,.85,2.91c-.27,14.38,12.13,22.59,23.77,28.18a5.7,5.7,0,0,1,.88.53h216.9a5.09,5.09,0,0,1,2.84-1.08,4.1,4.1,0,0,1,1.59-1.45c1-.5,2.07-.93,3.12-1.37l.64-.27-.55.24a6.87,6.87,0,0,0,1.29-.6c.22-.11.45-.18.68-.27,1-1,1.86-1.92,2.41-2.37,2.91-2.43,6.23-4.26,7.86-7.81a4.38,4.38,0,0,1,1.74-2c.81-4.9,2.13-9.72,2.58-14.7a5.32,5.32,0,0,1,.57-2c0-.19-.07-.36-.11-.51-.38-1.74-.87-3.44-1.28-5.17A4.8,4.8,0,0,1,275.08,719Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M275.28,654.52v-554c.77-12.76,2.64-38.62,5.52-48.14l.21-.69-.6-.38a21.36,21.36,0,0,1-3.68-3.14,62.8,62.8,0,0,1,2.34-9.56l.12-.34L276.7,10.17l-1.08-.34c-2.52-.8-9.71-4-9.71-8.12V0H15.09V1.71c0,4.13-7,7.26-9.71,8.12l-1.08.34L1.82,38.28l.12.34a64,64,0,0,1,2.34,9.54A21,21,0,0,1,.6,51.32L0,51.7l.21.69C3.09,61.89,5,87.7,5.72,100.48v554C5,667.23,3.09,703.1.21,712.61L0,713.3l.6.38a20.83,20.83,0,0,1,3.68,3.14,61.64,61.64,0,0,1-2.34,9.56l-.12.35,2.48,28.1,1.08.34c2.7.86,9.71,4,9.71,8.12V765H265.91v-1.71c0-4.13,7-7.26,9.71-8.12l1.08-.34,2.48-28.1-.12-.35a64,64,0,0,1-2.34-9.54,21,21,0,0,1,3.68-3.16l.6-.38-.21-.69c-2.88-9.5-4.74-45.31-5.51-58.09m-3.84,73.29s.45,1.07,1,2.61a29.79,29.79,0,0,1-1.33,12.42C268.18,751.6,261,758,250.25,761.58H30.68c-23-7.63-22.8-25.7-22.16-31.09.59-1.63,1.06-2.75,1.09-2.83a12.21,12.21,0,0,0-2.1-9.76c3.38-18.83,1.66-42.81,1.58-43.89V91.12c.09-1.19,1.81-25.21-1.57-44.05a12.41,12.41,0,0,0,2.05-9.88s-.45-1.07-1-2.61A29.8,29.8,0,0,1,9.87,22.16C12.82,13.4,20,7,30.76,3.42H250.32c23.05,7.63,22.8,25.7,22.16,31.09-.59,1.63-1.06,2.75-1.09,2.84a12.19,12.19,0,0,0,2.1,9.75c-3.38,18.83-1.66,42.81-1.58,43.89V673.88c-.09,1.19-1.81,25.21,1.57,44a12.41,12.41,0,0,0-2.05,9.88m7.41-675.3c-1.71,6.15-3,17.57-4,28.45a191.48,191.48,0,0,1,1.5-30.51,23.59,23.59,0,0,0,2.5,2.06m-5.72-14.58c.09-.21,1.13-2.72,2.12-5.82l.51,5.74A61.16,61.16,0,0,0,274,44.4a9.5,9.5,0,0,1-.89-6.47m.42-25.21,1.24,14.07c-.25,1.21-.59,2.48-1,3.69a30.1,30.1,0,0,0-1.55-8.72c-2-6-6.88-13.57-18.42-18.34h8.89c1.25,5.24,8,8.26,10.8,9.3M18.25,3.42h8.88C10.49,10.29,7.46,23.17,7.21,30.61c-.38-1.25-.74-2.56-1-3.82L7.45,12.72c2.79-1,9.55-4.06,10.8-9.3m-13,34.43.51-5.74c1,3.07,2,5.53,2.07,5.66A9.73,9.73,0,0,1,7,44.33a62.24,62.24,0,0,0-1.73-6.48m-.6,12.59A191.42,191.42,0,0,1,6.15,81c-1-10.87-2.29-22.29-4-28.44a21.9,21.9,0,0,0,2.49-2.07M2.15,712.49c1.71-6.15,3-17.57,4-28.44a191.41,191.41,0,0,1-1.5,30.5,23.59,23.59,0,0,0-2.5-2.06m5.72,14.58c-.09.21-1.13,2.72-2.12,5.82l-.51-5.74A60.54,60.54,0,0,0,7,720.6a9.5,9.5,0,0,1,.89,6.47m-.42,25.21L6.21,738.21c.25-1.21.59-2.47,1-3.69a30,30,0,0,0,1.55,8.72c2,6,6.88,13.57,18.42,18.34H18.25c-1.25-5.24-8-8.26-10.8-9.3m255.3,9.3h-8.88c16.64-6.86,19.67-19.75,19.92-27.19.38,1.26.74,2.56,1,3.82l-1.24,14.07c-2.79,1-9.55,4.06-10.8,9.3m13-34.43-.51,5.74c-1-3.08-2-5.53-2.07-5.66a9.73,9.73,0,0,1,.85-6.56,62.24,62.24,0,0,0,1.73,6.48m.6-12.59a191.37,191.37,0,0,1-1.51-30.51c1,10.88,2.29,22.29,4,28.44a21.9,21.9,0,0,0-2.49,2.07\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const FancyCorner = getSquarePart();\r\nexport const FancySide = getSquarePart('translate(0,-100)');\r\nexport const FancyTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3.5px solid ${color}`, boxSizing: 'border-box' }} />\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    FrameContainer,\r\n    FrameTopRowContainer,\r\n    FrameMiddleRowContainer,\r\n    FrameBottomRowContainer,\r\n    FrameMiddleFill,\r\n    TopLeftCornerStyles,\r\n    TopRightCornerStyles,\r\n    BottomLeftCornerStyles,\r\n    BottomRightCornerStyles,\r\n    TopStyles,\r\n    BottomStyles,\r\n    LeftStyles,\r\n    RightStyles,\r\n} from './style';\r\nimport { SquareCorner, SquareTop, SquareSide } from './svg/square';\r\nimport { ScrollCorner, ScrollTop, ScrollSide } from './svg/scroll';\r\nimport { FancyCorner, FancyTop, FancySide } from './svg/fancy';\r\n\r\nexport interface FrameProps {\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    className?: string;\r\n}\r\n\r\nexport interface FrameFactoryProps {\r\n    partSize: number;\r\n    Corner: React.ComponentType<FramePartProps>;\r\n    Top: React.ComponentType<FramePartProps>;\r\n    Side: React.ComponentType<FramePartProps>;\r\n}\r\n\r\nexport interface FramePartProps extends FrameProps {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst frameFactory = ({\r\n    partSize,\r\n    Corner,\r\n    Top,\r\n    Side,\r\n}: FrameFactoryProps) => {\r\n    const FrameTopLeftCorner = styled(Corner)`${TopLeftCornerStyles}`;\r\n    const FrameTopRightCorner = styled(Corner)`${TopRightCornerStyles}`;\r\n    const FrameBottomLeftCorner = styled(Corner)`${BottomLeftCornerStyles}`;\r\n    const FrameBottomRightCorner = styled(Corner)`${BottomRightCornerStyles}`;\r\n    const FrameTop = styled(Top)`${TopStyles}`;\r\n    const FrameBottom = styled(Top)`${BottomStyles}`;\r\n    const FrameLeft = styled(Side)`${LeftStyles}`;\r\n    const FrameRight = styled(Side)`${RightStyles}`;\r\n\r\n    const Frame: React.FC<FrameProps> = ({ color = '#b13735', backgroundColor, className }) => {\r\n        const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n        const [topPartWidth, setTopPartWidth] = useState<number>(partSize);\r\n        const [sidePartHeight, setSidePartHeight] = useState<number>(partSize);\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            handleResize();\r\n        }, [containerRef]);\r\n\r\n        const handleResize = () => {\r\n            const { current: container } = containerRef;\r\n            if (container) {\r\n                setTopPartWidth(container.clientWidth - partSize * 2);\r\n                setSidePartHeight(container.clientHeight - partSize * 2);\r\n            }\r\n        };\r\n\r\n        const framePartProps: FramePartProps = { color, backgroundColor, width: partSize, height: partSize };\r\n\r\n        return (\r\n            <FrameContainer ref={containerRef} className={className}>\r\n                {containerRef.current\r\n                    ? (\r\n                        <React.Fragment>\r\n                            <FrameTopRowContainer>\r\n                                <FrameTopLeftCorner {...framePartProps} />\r\n                                <FrameTop {...framePartProps} width={topPartWidth}/>\r\n                                <FrameTopRightCorner {...framePartProps} />\r\n                            </FrameTopRowContainer>\r\n                            <FrameMiddleRowContainer>\r\n                                <FrameLeft {...framePartProps} height={sidePartHeight} />\r\n                                <FrameMiddleFill {...framePartProps} height={sidePartHeight} width={topPartWidth} />\r\n                                <FrameRight {...framePartProps} height={sidePartHeight} />\r\n                            </FrameMiddleRowContainer>\r\n                            <FrameBottomRowContainer>\r\n                                <FrameBottomLeftCorner {...framePartProps} />\r\n                                <FrameBottom {...framePartProps} width={topPartWidth}/>\r\n                                <FrameBottomRightCorner {...framePartProps} />\r\n                            </FrameBottomRowContainer>\r\n                        </React.Fragment>\r\n                    )\r\n                    : null\r\n                }\r\n            </FrameContainer>\r\n        );\r\n    };\r\n\r\n    return Frame;\r\n};\r\n\r\nexport const SquareFrame = frameFactory({ partSize: 32, Corner: SquareCorner, Top: SquareTop, Side: SquareSide });\r\nexport const ScrollFrame = frameFactory({ partSize: 32, Corner: ScrollCorner, Top: ScrollTop, Side: ScrollSide });\r\nexport const FancyFrame = frameFactory({ partSize: 128, Corner: FancyCorner, Top: FancyTop, Side: FancySide });\r\n\r\nexport default frameFactory;\r\n","import axios from 'axios';\nimport { DnDBeyondCharacter } from './types';\n\nexport interface GetCharacterStatsProps {\n    characterId: string;\n}\n\nexport interface CharacterStats {\n    currentHp: number;\n    maxHp: number;\n    tempHp: number;\n    armorClass: number;\n    passivePerception: number;\n}\n\nconst getCharacterStats = async ({ characterId }: GetCharacterStatsProps): Promise<DnDBeyondCharacter> => {\n    const jsonUrl = `https://www.dndbeyond.com/character/${characterId}/json`;\n\n    const response = await axios({ method: 'GET', url: jsonUrl, withCredentials: false });\n    return response.data as DnDBeyondCharacter;\n};\n\nexport default getCharacterStats;\n","import { Dispatch } from 'redux';\r\nimport { getCharacterStats } from '../../helpers/dnd-beyond';\r\nimport { State, Character } from '../types';\r\nimport { CHARACTER_ADDED, CHARACTER_UPDATED, CHARACTER_FETCH_FAILED, CHARACTER_ALREADY_EXISTS } from './types';\r\n\r\nexport const addCharacterByUrl = (url: string, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const characterId = url.split('/')[url.split('/').length - 1];\r\n    const { characters } = getState();\r\n    if (characters && characters.every(c => c.id.toString() !== characterId)) {\r\n        getCharacterStats({ characterId }).then(\r\n            stats => {\r\n                const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                const character: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                dispatch(addCharacter(character));\r\n            },\r\n            (error) => dispatch(characterFetchFailed(error.message)),\r\n        );\r\n    } else {\r\n        dispatch(updateCharacterById(parseInt(characterId), maxHitPoints));\r\n    }\r\n};\r\n\r\nexport const updateCharacterById = (id: number, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { characters } = getState();\r\n    if (characters) {\r\n        const character = characters.find(c => c.id === id);\r\n        if (character) {\r\n            getCharacterStats({ characterId: id.toString() }).then(\r\n                stats => {\r\n                    const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                    const updatedCharacter: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                    dispatch(updateCharacter(id, updatedCharacter));\r\n                },\r\n                (error) => dispatch(characterFetchFailed(error.message)),\r\n            );\r\n        } else {\r\n            dispatch(addCharacterByUrl(id.toString(), maxHitPoints));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addCharacter = (character: Character) => ({\r\n    type: CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateCharacter = (id: number, character: Character) => ({\r\n    type: CHARACTER_UPDATED,\r\n    payload: { id, character },\r\n});\r\n\r\nexport const characterFetchFailed = (error: string) => ({\r\n    type: CHARACTER_FETCH_FAILED,\r\n    error,\r\n});\r\n\r\nexport const characterAlreadyExists = () => ({\r\n    type: CHARACTER_ALREADY_EXISTS,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const CharacterListItemScrollContainer = styled.div`\r\n    height: 80px;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const CharacterListItemContainer = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const CharacterListItemWrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Avatar = styled.img<{ color?: string }>`\r\n    border-radius: 16px;\r\n    height: 64px;\r\n    width: 64px;\r\n    margin: 0 8px;\r\n    border: 3px solid ${props => props.color || '#b13735'};\r\n    box-shadow: 0 0 10px grey;\r\n    box-sizing: border-box;\r\n    object-fit: cover;\r\n`;\r\n\r\nexport const NameAndSavesContainer = styled.div`\r\n    height: 64px;\r\n    margin-right: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n`;\r\n\r\nexport const SavesContainer = styled.div`\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const HitPointsContainer = styled.div`\r\n    height: 64px;\r\n    width: 200px;\r\n    margin-left: auto;\r\n    margin-right: 16px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nexport const HitPoints = styled.div<{ width: number }>`\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n    width: ${props => props.width}px;\r\n    text-align: center;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Character } from '../../redux/types';\r\nimport { updateCharacterById } from '../../redux/actions/characters';\r\nimport { SquareFrame } from '../Frame';\r\nimport {\r\n    CharacterListItemScrollContainer,\r\n    CharacterListItemContainer,\r\n    CharacterListItemWrapper,\r\n    Avatar,\r\n    NameAndSavesContainer,\r\n    Name,\r\n    SavesContainer,\r\n    HitPointsContainer,\r\n    HitPoints,\r\n} from './style';\r\n\r\nexport interface DispatchProps {\r\n    updateCharacterById: (id: number, maxHitPoints: number) => void;\r\n}\r\n\r\nexport interface CharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst CharacterListItem: React.FC<CharacterListItemProps & DispatchProps> = ({ character, updateCharacterById }) => {\r\n    const { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = character;\r\n\r\n    useEffect(() => updateCharacterById(id, maxHitPoints), [id, maxHitPoints, updateCharacterById]);\r\n\r\n    return (\r\n        <CharacterListItemScrollContainer>\r\n            <CharacterListItemContainer>\r\n                <SquareFrame color={(themeColor && themeColor.themeColor) || undefined} backgroundColor=\"white\" />\r\n                <CharacterListItemWrapper>\r\n                    <Avatar src={avatarUrl || '/avatar-placeholder.png'} color={(themeColor && themeColor.themeColor) || undefined} />\r\n                    <NameAndSavesContainer>\r\n                        <Name>{name}</Name>\r\n                        <SavesContainer />\r\n                    </NameAndSavesContainer>\r\n                    <HitPointsContainer>\r\n                        <HitPoints width={64}>{maxHitPoints - removedHitPoints}</HitPoints>\r\n                        <HitPoints width={16} style={{ color: 'grey' }}>/</HitPoints>\r\n                        <HitPoints width={64}>{maxHitPoints}</HitPoints>\r\n                        <HitPoints width={48} style={{ color: 'grey' }}>[{temporaryHitPoints}]</HitPoints>\r\n                    </HitPointsContainer>\r\n                </CharacterListItemWrapper>\r\n            </CharacterListItemContainer>\r\n        </CharacterListItemScrollContainer>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCharacterById })(CharacterListItem);\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const EntityListContainer = styled.div`\r\n    position: relative;\r\n    width: 50%;\r\n    max-width: 600px;\r\n    height: 480px;\r\n`;\r\n\r\nexport const EntityListWrapper = styled.div`\r\n    height: 448px;\r\n    padding: 16px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n\r\n    overflow-y: scroll;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst EntityListFade = css`\r\n    position: absolute;\r\n    left: calc(2%);\r\n    width: 96%;\r\n    border-radius: 16px;\r\n    height: 20px;\r\n`;\r\n\r\nexport const EntityListTopFade = styled.div`\r\n    ${EntityListFade}\r\n    top: 0;\r\n    background: linear-gradient(white, transparent);\r\n`;\r\n\r\nexport const EntityListBottomFade = styled.div`\r\n    ${EntityListFade}\r\n    bottom: 0;\r\n    background: linear-gradient(transparent, white);\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State, Character } from '../../redux/types';\r\nimport { FancyFrame } from '../Frame';\r\nimport { CharacterListItem } from '../CharacterListItem';\r\nimport { EntityListContainer, EntityListWrapper, EntityListBottomFade, EntityListTopFade } from './style';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\nconst EntityList: React.FC<StateProps> = ({ characters }) => {\r\n    return (\r\n        <EntityListContainer>\r\n            <EntityListWrapper>\r\n                {characters.map(c => (\r\n                    <CharacterListItem key={c.id} character={c} />\r\n                ))}\r\n            </EntityListWrapper>\r\n            <EntityListTopFade />\r\n            <EntityListBottomFade />\r\n            <FancyFrame />\r\n        </EntityListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    characters: state.characters || [],\r\n});\r\n\r\nexport default connect<StateProps>(mapStateToProps)(EntityList);\r\n","import styled from 'styled-components';\r\n\r\nexport const NumpadFrameContainer = styled.div`\r\n    position: relative;\r\n    width: 288px;\r\n    height: 480px;\r\n`;\r\n\r\nexport const NumpadContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 256px;\r\n    height: 460px;\r\n    padding: 16px;\r\n    padding-bottom: 0;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const NumpadValueContainer = styled.div`\r\n    width: 256px;\r\n    height: 80px;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const NumpadValueWrapper = styled.div`\r\n    position: absolute;\r\n    width: 256px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    user-select: none;\r\n    z-index: 10;\r\n`;\r\n\r\nexport const NumpadButtonContainer = styled.div`\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-bottom: 8px;\r\n\r\n    &:not(:nth-child(3n + 1)) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const NumpadButtonValueContainer = styled.div`\r\n    position: absolute;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadButtonValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    text-align: center;\r\n    user-select: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { SquareFrame, ScrollFrame, FancyFrame } from '../Frame';\r\nimport {\r\n    NumpadFrameContainer,\r\n    NumpadContainer,\r\n    NumpadValueContainer,\r\n    NumpadValueWrapper,\r\n    NumpadValue,\r\n    NumpadButtonContainer,\r\n    NumpadButtonValueContainer,\r\n    NumpadButtonValue,\r\n} from './style';\r\n\r\ninterface NumpadButtonProps {\r\n    children: React.ReactNode;\r\n    onClick?: () => void;\r\n    color?: string;\r\n    paddingBottom?: string;\r\n}\r\n\r\nconst NumpadButton: React.FC<NumpadButtonProps> = ({ children, paddingBottom, color, onClick }) => {\r\n    const [backgroundColor, setBackgroundColor] = useState('white');\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n        setBackgroundColor('#ccc');\r\n        setTimeout(() => setBackgroundColor('white'), 100);\r\n    };\r\n\r\n    return (\r\n        <NumpadButtonContainer onClick={handleClick}>\r\n            <SquareFrame color={color || '#555'} backgroundColor={backgroundColor} />\r\n            <NumpadButtonValueContainer>\r\n                <NumpadButtonValue style={{ paddingBottom }}>{children}</NumpadButtonValue>\r\n            </NumpadButtonValueContainer>\r\n        </NumpadButtonContainer>\r\n    );\r\n};\r\n\r\nconst Numpad = () => {\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n\r\n    const handleValueClick = () => setCurrentValue(0);\r\n    const handleButtonClick = (number: number) => () => setCurrentValue(v => v * 10 + number);\r\n    const handleSubmit = (sign: number) => () => {\r\n        console.log(`Submitted: ${sign * currentValue}`);\r\n        setCurrentValue(0);\r\n    };\r\n\r\n    return (\r\n        <NumpadFrameContainer>\r\n            <FancyFrame backgroundColor=\"rgba(255, 255, 255, 0.8)\" />\r\n            <NumpadContainer>\r\n                <NumpadValueContainer onClick={handleValueClick}>\r\n                    <NumpadValueWrapper>\r\n                        <NumpadValue>{currentValue || ''}</NumpadValue>\r\n                        <ScrollFrame color=\"#555\" backgroundColor=\"white\" />\r\n                    </NumpadValueWrapper>\r\n                </NumpadValueContainer>\r\n                <NumpadButton onClick={handleButtonClick(7)}>7</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(8)}>8</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(9)}>9</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(4)}>4</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(5)}>5</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(6)}>6</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(1)}>1</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(2)}>2</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(3)}>3</NumpadButton>\r\n                <NumpadButton onClick={handleSubmit(-1)} paddingBottom=\"6px\" color='#b13735'>-</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(0)}>0</NumpadButton>\r\n                <NumpadButton onClick={handleSubmit(1)} paddingBottom=\"8px\" color='#08a300'>+</NumpadButton>\r\n            </NumpadContainer>\r\n        </NumpadFrameContainer>\r\n    );\r\n};\r\n\r\nexport default Numpad;\r\n","import styled from 'styled-components';\r\n\r\nexport const NotesContainer = styled.div`\r\n    position: relative;\r\n    width: 920px;\r\n    height: 260px;\r\n    margin-top: 16px;\r\n`;\r\n\r\nexport const NotesCanvas = styled.canvas`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 12px;\r\n    touch-action: none;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { FancyFrame } from '../Frame';\r\nimport { NotesContainer, NotesCanvas } from './style';\r\n\r\nconst Notes = () => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const prevPointerPosition = useRef<{ x: number, y: number } | null>(null);\r\n\r\n    const [canvasSize, setCanvasSize] = useState<{ width?: number, height?: number }>({});\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateCanvasSize);\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateCanvasSize();\r\n    }, [canvasRef]);\r\n\r\n    const updateCanvasSize = () => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const { width, height } = canvas.getBoundingClientRect();\r\n            setCanvasSize({ width, height });\r\n        }\r\n    };\r\n\r\n    const handlePointerMove = (e: React.PointerEvent<HTMLCanvasElement>) => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                const { pressure, buttons, clientX, clientY } = e;\r\n                const x = clientX - canvas.getBoundingClientRect().x;\r\n                const y = clientY - canvas.getBoundingClientRect().y;\r\n                const lineThickness = pressure || 1;\r\n\r\n                if (!pressure || !buttons) {\r\n                    prevPointerPosition.current = null;\r\n                    return;\r\n                } \r\n\r\n                if (prevPointerPosition.current) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(prevPointerPosition.current.x, prevPointerPosition.current.y);\r\n                    ctx.lineTo(x, y);\r\n                    ctx.lineWidth = lineThickness * 2;\r\n                    ctx.stroke();\r\n                }\r\n\r\n                prevPointerPosition.current = { x, y };\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePointerUp = () => (prevPointerPosition.current = null);\r\n\r\n    const canvasProps = {\r\n        ref: canvasRef,\r\n        onPointerMove: handlePointerMove,\r\n        onPointerUp: handlePointerUp,\r\n        ...canvasSize,\r\n    };\r\n\r\n    return (\r\n        <NotesContainer>\r\n            <NotesCanvas {...canvasProps}></NotesCanvas>\r\n            <FancyFrame />\r\n        </NotesContainer>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import styled from 'styled-components';\r\n\r\nexport interface RootComponentContainerProps {\r\n    backgroundImageSrc?: string;\r\n}\r\n\r\nexport const RootComponentContainer = styled.div<RootComponentContainerProps>`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(\"${props => props.backgroundImageSrc}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n\r\nexport const RootComponentWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ListAndNumpadContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nexport const NotesContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import React, { useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IconButton, Dialog, Typography } from '@material-ui/core';\r\nimport { People, Close } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { Navbar } from '../Navbar';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { EntityList } from '../EntityList';\r\nimport { Numpad } from '../Numpad';\r\nimport { Notes } from '../Notes';\r\nimport { RootComponentContainer, RootComponentWrapper, ContentContainer, ListAndNumpadContainer, NotesContainer } from './style';\r\n\r\nexport interface StateProps {\r\n    currentBackgroundUrl?: string;\r\n}\r\n\r\nconst RootComponent: React.FC<StateProps> = ({ currentBackgroundUrl }) => {\r\n    const [isCharacterDialogOpen, setIsCharacterDialogOpen] = useState<boolean>(false);\r\n\r\n    const openCharacterDialog = () => setIsCharacterDialogOpen(true);\r\n    const closeCharacterDialog = () => setIsCharacterDialogOpen(false);\r\n\r\n    return (\r\n        <RootComponentContainer backgroundImageSrc={currentBackgroundUrl}>\r\n            <Navbar>\r\n                <Tooltip title=\"View and edit saved characters\">\r\n                    <IconButton color=\"inherit\" onClick={openCharacterDialog}>\r\n                        <People fontSize=\"large\" />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Navbar>\r\n            <RootComponentWrapper>\r\n                <ContentContainer>\r\n                    <ListAndNumpadContainer>\r\n                        <EntityList />\r\n                        <Numpad />\r\n                    </ListAndNumpadContainer>\r\n                    <NotesContainer>\r\n                        <Notes />\r\n                    </NotesContainer>\r\n                </ContentContainer>\r\n            </RootComponentWrapper>\r\n            <Dialog fullScreen open={!!isCharacterDialogOpen} onClose={closeCharacterDialog}>\r\n                <Navbar color=\"primary\">\r\n                    <IconButton color=\"inherit\" onClick={closeCharacterDialog}>\r\n                        <Close fontSize=\"large\" />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" style={{ marginLeft: '8px' }}>\r\n                        Saved Characters\r\n                    </Typography>\r\n                </Navbar>\r\n            </Dialog>\r\n        </RootComponentContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    currentBackgroundUrl: state.characters && state.characters[1] && state.characters[1].defaultBackdrop.largeBackdropAvatarUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RootComponent);\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './redux';\nimport { RootComponent, LoadingView } from './components';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#b13735',\n        },\n        secondary: {\n            main: '#555',\n        },\n    },\n    typography: {\n        fontFamily: 'Cairo',\n    },\n});\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <Provider store={store}>\n            <PersistGate loading={<LoadingView />} persistor={persistor}>\n                <RootComponent />\n            </PersistGate>\n        </Provider>\n    </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(<App />);\nserviceWorker.unregister();\n"],"sourceRoot":""}