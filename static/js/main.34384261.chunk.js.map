{"version":3,"sources":["helpers/dnd-beyond/getCharacterStats.ts","redux/actions/characters/actionCreators.ts","redux/actions/characters/types.ts","redux/reducers/characters.ts","redux/reducers/npcs.ts","redux/reducers/index.ts","redux/actions/npcs/types.ts","redux/index.ts","components/LoadingView/style.ts","components/LoadingView/LoadingView.tsx","components/Navbar/style.ts","components/Navbar/Navbar.tsx","components/Tooltip/Tooltip.tsx","components/Frame/style.ts","components/Frame/svg/square.tsx","components/Frame/svg/scroll.tsx","components/Frame/svg/fancy.tsx","components/Frame/Frame.tsx","components/CharacterListItem/style.ts","components/CharacterListItem/CharacterListItem.tsx","components/EntityList/style.ts","components/EntityList/EntityList.tsx","components/Numpad/style.ts","components/Numpad/Numpad.tsx","components/Notes/style.ts","components/Notes/Notes.tsx","components/RootComponent/style.ts","components/SavedCharacterListItem/style.ts","components/SavedCharacterListItem/SavedCharacterListItem.tsx","components/SavedCharactersList/style.ts","components/SavedCharactersList/SavedCharactersList.tsx","components/SavedNPCsListItem/style.ts","components/SavedNPCsListItem/SavedNPCsListItem.tsx","redux/actions/npcs/actionCreators.ts","components/SavedNPCsList/style.ts","components/SavedNPCsList/SavedNPCsList.tsx","components/CharacterDialogContent/style.tsx","components/CharacterDialogContent/CharacterDialogContent.tsx","components/RootComponent/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCharacterStats","a","characterId","jsonUrl","axios","method","url","withCredentials","response","data","addCharacterByUrl","maxHitPoints","dispatch","getState","split","length","characters","every","c","id","toString","then","stats","name","removedHitPoints","temporaryHitPoints","deathSaves","avatarUrl","themeColor","defaultBackdrop","addCharacter","error","characterFetchFailed","message","updateCharacterById","parseInt","find","updateCharacter","character","type","payload","initialState","state","action","prevCharacter","index","indexOf","slice","updateMaxHpById","maxHp","deleteById","deleteNPC","npc","updateNPC","originalNPC","updatedNPC","rootReducer","combineReducers","npcs","persistConfig","key","storage","stateReconciler","autoMergeLevel2","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","LoadingViewBackground","styled","div","LoadingViewContainer","LoadingViewImage","img","LoadingViewText","LoadingView","src","NavbarContainer","Navbar","children","other","AppBar","position","color","Toolbar","withStyles","theme","tooltip","fontSize","backgroundColor","palette","secondary","main","arrow","props","Tooltip","FrameContainer","FrameTopRowContainer","FrameMiddleRowContainer","FrameBottomRowContainer","FrameMiddleFill","width","height","CornerBaseStyles","css","TopLeftCornerStyles","TopRightCornerStyles","BottomLeftCornerStyles","BottomRightCornerStyles","TopStyles","BottomStyles","LeftStyles","RightStyles","getSquarePart","transform","className","data-name","xmlns","viewBox","style","fill","zIndex","transition","d","boxShadow","SquareCorner","SquareSide","getScrollPart","points","ScrollCorner","ScrollTop","ScrollSide","FancyCorner","FancySide","frameFactory","partSize","Corner","Top","Side","FrameTopLeftCorner","FrameTopRightCorner","FrameBottomLeftCorner","FrameBottomRightCorner","FrameTop","FrameBottom","FrameLeft","FrameRight","containerRef","useRef","useState","topPartWidth","setTopPartWidth","sidePartHeight","setSidePartHeight","useEffect","window","addEventListener","handleResize","removeEventListener","container","current","clientWidth","clientHeight","framePartProps","ref","Fragment","SquareFrame","borderTop","boxSizing","ScrollFrame","FancyFrame","CharacterListItemScrollContainer","CharacterListItemContainer","CharacterListItemWrapper","Avatar","AvatarMui","NameAndSavesContainer","Name","SavesContainer","HitPointsContainer","HitPoints","connect","undefined","variant","EntityListContainer","EntityListWrapper","EntityListFade","EntityListTopFade","EntityListBottomFade","map","NumpadFrameContainer","NumpadContainer","NumpadValueContainer","NumpadValueWrapper","NumpadValue","NumpadButtonContainer","NumpadButtonValueContainer","NumpadButtonValue","NumpadButton","padding","onClick","setBackgroundColor","setTimeout","Numpad","currentValue","setCurrentValue","handleButtonClick","number","v","handleSubmit","sign","console","log","KeyboardArrowDown","KeyboardArrowUp","NotesContainer","NotesCanvas","canvas","Notes","canvasRef","prevPointerPosition","canvasSize","setCanvasSize","updateCanvasSize","getBoundingClientRect","canvasProps","onPointerMove","e","ctx","getContext","pressure","buttons","clientX","clientY","x","y","lineThickness","beginPath","moveTo","lineTo","lineWidth","stroke","onPointerUp","RootComponentContainer","backgroundImageSrc","RootComponentWrapper","ContentContainer","ListAndNumpadContainer","SavedCharacterListItemContainer","Grow","updateCharacterMaxHp","deleteCharacter","setMaxHp","isDialogOpen","setIsDialogOpen","closeConfirmationDialog","Paper","elevation","Typography","TextField","label","value","onChange","target","IconButton","Delete","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","SavedCharactersListContainer","small","isNewCharacterDialogOpen","setIsNewCharacterDailogOpen","characterURL","setCharacterURL","characterMaxHitPoints","setCharacterMaxHitPoints","closeNewCharacterDialog","autoFocus","fullWidth","margin","disabled","SavedNPCListItemContainer","isEditDialogOpen","setIsEditDialogOpen","isDeleteConfirmationDialogOpen","setIsDeleteConfirmationDialogOpen","NPCName","setNPCName","NPCMaxHitPoints","setNPCMaxHitPoints","NPCAvatarUrl","setNPCAvatarUrl","closeEditDialog","closeDeleteConfirmationDialog","Edit","SavedNPCsListContainer","addNPC","isNewNPCDialogOpen","setIsNewNPCDialogOpen","closeNewNPCDialog","SavedNPCsListItem","CharacterDialogContentContainer","CharacterDialogContentWrapper","Divider","CharacterDialogContent","useTheme","useMediaQuery","breakpoints","down","SavedNPCsList","currentBackgroundUrl","largeBackdropAvatarUrl","isCharacterDialogOpen","setIsCharacterDialogOpen","closeCharacterDialog","title","People","fullScreen","Close","marginLeft","createMuiTheme","primary","typography","fontFamily","App","ThemeProvider","loading","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.34384261.chunk.js","sourcesContent":["import axios from 'axios';\nimport { DnDBeyondCharacter } from './types';\n\nexport interface GetCharacterStatsProps {\n    characterId: string;\n}\n\nexport interface CharacterStats {\n    currentHp: number;\n    maxHp: number;\n    tempHp: number;\n    armorClass: number;\n    passivePerception: number;\n}\n\nconst getCharacterStats = async ({ characterId }: GetCharacterStatsProps): Promise<DnDBeyondCharacter> => {\n    const jsonUrl = `https://www.dndbeyond.com/character/${characterId}/json`;\n\n    const response = await axios({ method: 'GET', url: jsonUrl, withCredentials: false });\n    return response.data as DnDBeyondCharacter;\n};\n\nexport default getCharacterStats;\n","import { Dispatch } from 'redux';\r\nimport { getCharacterStats } from '../../../helpers/dnd-beyond';\r\nimport { State, Character } from '../../types';\r\nimport { CHARACTER_ADDED, CHARACTER_UPDATED, CHARACTER_MAX_HP_UPDATED, CHARACTER_FETCH_FAILED, CHARACTER_ALREADY_EXISTS, CHARACTER_DELETED } from './types';\r\n\r\nexport const addCharacterByUrl = (url: string, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const characterId = url.split('/')[url.split('/').length - 1];\r\n    const { characters } = getState();\r\n    if (characters && characters.every(c => c.id.toString() !== characterId)) {\r\n        getCharacterStats({ characterId }).then(\r\n            stats => {\r\n                const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                const character: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                dispatch(addCharacter(character));\r\n            },\r\n            (error) => dispatch(characterFetchFailed(error.message)),\r\n        );\r\n    } else {\r\n        dispatch(updateCharacterById(parseInt(characterId), maxHitPoints));\r\n    }\r\n};\r\n\r\nexport const updateCharacterById = (id: number, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { characters } = getState();\r\n    if (characters) {\r\n        const character = characters.find(c => c.id === id);\r\n        if (character) {\r\n            getCharacterStats({ characterId: id.toString() }).then(\r\n                stats => {\r\n                    const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                    const updatedCharacter: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                    dispatch(updateCharacter(id, updatedCharacter));\r\n                },\r\n                (error) => dispatch(characterFetchFailed(error.message)),\r\n            );\r\n        } else {\r\n            dispatch(addCharacterByUrl(id.toString(), maxHitPoints));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addCharacter = (character: Character) => ({\r\n    type: CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateCharacter = (id: number, character: Character) => ({\r\n    type: CHARACTER_UPDATED,\r\n    payload: { id, character },\r\n});\r\n\r\nexport const updateCharacterMaxHp = (id: number, maxHp: number) => ({\r\n    type: CHARACTER_MAX_HP_UPDATED,\r\n    payload: { id, maxHp },\r\n}); \r\n\r\nexport const deleteCharacter = (id: number) => ({\r\n    type: CHARACTER_DELETED,\r\n    payload: { id },\r\n});\r\n\r\nexport const characterFetchFailed = (error: string) => ({\r\n    type: CHARACTER_FETCH_FAILED,\r\n    error,\r\n});\r\n\r\nexport const characterAlreadyExists = () => ({\r\n    type: CHARACTER_ALREADY_EXISTS,\r\n});\r\n","import { Character } from '../../types';\r\n\r\nexport const CHARACTER_ADDED = 'CHARACTER_ADDED';\r\nexport const CHARACTER_UPDATED = 'CHARACTER_UPDATED';\r\nexport const CHARACTER_MAX_HP_UPDATED = 'CHARACTER_MAX_HP_UPDATED';\r\nexport const CHARACTER_DELETED = 'CHARACTER_DELETED';\r\n\r\nexport const CHARACTER_FETCH_FAILED = 'CHARACTER_FETCH_FAILED';\r\nexport const CHARACTER_ALREADY_EXISTS = 'CHARACTER_ALREADY_EXISTS';\r\n\r\nexport interface CharacterAddedAction {\r\n    type: typeof CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface CharacterUpdatedAction {\r\n    type: typeof CHARACTER_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        character: Character;\r\n    };\r\n}\r\n\r\nexport interface CharacterMaxHpUpdatedAction {\r\n    type: typeof CHARACTER_MAX_HP_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        maxHp: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterDeletedAction {\r\n    type: typeof CHARACTER_DELETED;\r\n    payload: {\r\n        id: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterFetchFailedAction {\r\n    type: typeof CHARACTER_FETCH_FAILED;\r\n    error: string;\r\n}\r\n\r\nexport interface CharacterAlreadyExistsAction {\r\n    type: typeof CHARACTER_ALREADY_EXISTS;\r\n}\r\n\r\nexport type CharacterActionType =\r\n    CharacterAddedAction |\r\n    CharacterUpdatedAction |\r\n    CharacterMaxHpUpdatedAction |\r\n    CharacterDeletedAction | \r\n    CharacterFetchFailedAction |\r\n    CharacterAlreadyExistsAction;\r\n","import { Character } from '../types';\r\nimport {\r\n    CHARACTER_ADDED,\r\n    CHARACTER_UPDATED,\r\n    CHARACTER_MAX_HP_UPDATED,\r\n    CHARACTER_DELETED,\r\n    CHARACTER_FETCH_FAILED,\r\n    CHARACTER_ALREADY_EXISTS,\r\n    CharacterUpdatedAction,\r\n    CharacterMaxHpUpdatedAction,\r\n    CharacterActionType,\r\n    CharacterDeletedAction,\r\n} from '../actions/characters';\r\n\r\nexport type CharactersState = Character[];\r\n\r\nconst initialState: CharactersState = [];\r\n\r\nconst updateCharacterById = (state: CharactersState, action: CharacterUpdatedAction) => {\r\n    const { id, character } = action.payload;\r\n    const prevCharacter = state.find(c => c.id === id);\r\n    if (prevCharacter) {\r\n        const index = state.indexOf(prevCharacter);\r\n        return [...state.slice(0, index), character, ...state.slice(index + 1)];\r\n    }\r\n    return [...state, character];\r\n};\r\n\r\nconst updateMaxHpById = (state: CharactersState, action: CharacterMaxHpUpdatedAction) => {\r\n    const { id, maxHp } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), { ...character, maxHitPoints: maxHp }, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst deleteById = (state: CharactersState, action: CharacterDeletedAction) => {\r\n    const { id } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const characters = (state = initialState, action: CharacterActionType) => {\r\n    switch (action.type) {\r\n    case CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case CHARACTER_UPDATED:\r\n        return updateCharacterById(state, action);\r\n\r\n    case CHARACTER_MAX_HP_UPDATED:\r\n        return updateMaxHpById(state, action);\r\n\r\n    case CHARACTER_DELETED:\r\n        return deleteById(state, action);\r\n\r\n    case CHARACTER_ALREADY_EXISTS:\r\n    case CHARACTER_FETCH_FAILED:\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { NPC } from '../types';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n    NPCActionType,\r\n    NPCDeletedActionType,\r\n    NPCUpdatedActionType,\r\n} from '../actions/npcs';\r\n\r\nexport type NPCState = NPC[];\r\n\r\nconst initialState: NPCState = [];\r\n\r\nconst deleteNPC = (state: NPCState, action: NPCDeletedActionType) => {\r\n    const { payload: npc } = action;\r\n    const index = state.indexOf(npc);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst updateNPC = (state: NPCState, action: NPCUpdatedActionType) => {\r\n    const { payload: { originalNPC, updatedNPC } } = action;\r\n    const index = state.indexOf(originalNPC);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), updatedNPC, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const npcs = (state = initialState, action: NPCActionType) => {\r\n    switch (action.type) {\r\n    case NPC_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case NPC_DELETED:\r\n        return deleteNPC(state, action);\r\n\r\n    case NPC_UPDATED:\r\n        return updateNPC(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { characters } from './characters';\r\nimport { npcs } from './npcs';\r\n\r\nconst rootReducer = combineReducers({\r\n    characters,\r\n    npcs,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { NPC } from '../../types';\r\n\r\nexport const NPC_ADDED = 'NPC_ADDED';\r\nexport const NPC_DELETED = 'NPC_DELETED';\r\nexport const NPC_UPDATED = 'NPC_UPDATED';\r\n\r\nexport interface NPCAddedActionType {\r\n    type: typeof NPC_ADDED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCDeletedActionType {\r\n    type: typeof NPC_DELETED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCUpdatedActionType {\r\n    type: typeof NPC_UPDATED;\r\n    payload: { \r\n        originalNPC: NPC;\r\n        updatedNPC: NPC;\r\n    };\r\n}\r\n\r\nexport type NPCActionType = NPCAddedActionType | NPCDeletedActionType | NPCUpdatedActionType;\r\n","import { createStore, applyMiddleware, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n};\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer as Reducer<any, any>), applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingViewBackground = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666666;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewImage = styled.img`\r\n    width: 400px;\r\n    max-width: 80%;\r\n`;\r\n\r\nexport const LoadingViewText = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport { LoadingViewBackground, LoadingViewContainer, LoadingViewImage, LoadingViewText } from './style';\r\n\r\nconst LoadingView = () => (\r\n    <LoadingViewBackground>\r\n        <LoadingViewContainer>\r\n            <LoadingViewImage src=\"/fire.gif\" />\r\n            <LoadingViewText>Loading</LoadingViewText>\r\n        </LoadingViewContainer>\r\n    </LoadingViewBackground>\r\n);\r\n\r\nexport default LoadingView;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    flex-grow: 1;\r\n`;\r\n","import React from 'react';\r\nimport { AppBar, AppBarProps, Toolbar } from '@material-ui/core';\r\nimport { NavbarContainer } from './style';\r\n\r\nconst Navbar: React.FC<AppBarProps> = ({ children, ...other }) => {\r\n    return (\r\n        <NavbarContainer>\r\n            <AppBar position=\"relative\" color=\"secondary\" {...other}>\r\n                <Toolbar>\r\n                    {children}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport default withStyles(theme => ({\r\n    tooltip: {\r\n        fontSize: 16,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    arrow: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}))((props: TooltipProps) => <Tooltip arrow {...props} />);\r\n","import styled, { css } from 'styled-components';\r\nimport { FramePartProps } from './Frame';\r\n\r\nexport const FrameContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const FrameTopRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\nexport const FrameMiddleRowContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nexport const FrameBottomRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const FrameMiddleFill = styled.div<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    ${props => props.backgroundColor && `background-color: ${props.backgroundColor};`}\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst CornerBaseStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const TopLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n`;\r\nexport const TopRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n`;\r\nexport const BottomLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n    transform: rotateX(180deg);\r\n`;\r\nexport const BottomRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nexport const TopStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const BottomStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n    transform: rotate(180deg);\r\n`;\r\nexport const LeftStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n`;\r\nexport const RightStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    transform: rotate(180deg);\r\n`;\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M615.2,646.2c-1.7,5.7-12.9,11.7-14.5,11.7H22.5c-1.7,0-12.8-6-14.5-11.7L8.2,19.3V12S16.1,2.3,23.4,1.4H599.80005c7.3.8,15.1,10.6,15.1,10.6v7.3Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M611.9,0H11L0,11.5v637L11,660H612l11-11.5V11.5ZM3,12.8l9.2-9.6h5.9A25.8384,25.8384,0,0,0,7,12.9H6.9v.2A36.38553,36.38553,0,0,0,3,21.7ZM3,26.9A42.92655,42.92655,0,0,1,6.9,15.7V644.3a13.90069,13.90069,0,0,1-1.1-2.1,51.50646,51.50646,0,0,1-2.9-9L3,26.9Zm9.2,629.9L3,647.2v-8.9a40.90524,40.90524,0,0,0,3.9,8.6v.2H7a24.86426,24.86426,0,0,0,11.1,9.8H12.2Zm10.1,0A22.56646,22.56646,0,0,1,8.6,647V13A23.74954,23.74954,0,0,1,22.4,3.1H600.6a22.56647,22.56647,0,0,1,13.7,9.8v634a23.74956,23.74956,0,0,1-13.8,9.9Zm597.6-9.6-9.2,9.6h-5.9a24.86437,24.86437,0,0,0,11.1-9.8h.1v-.2a36.38635,36.38635,0,0,0,3.9-8.6l.00006,9Zm0-14.1a41.717,41.717,0,0,1-3.9,11.2V15.7a13.89825,13.89825,0,0,1,1.1,2.1,51.50837,51.50837,0,0,1,2.9,9l-.1,606.3Zm0-611.4a40.9054,40.9054,0,0,0-3.9-8.6v-.2h-.1a24.86433,24.86433,0,0,0-11.1-9.8h5.9l9.2,9.6-.00007,9Z\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const SquareCorner = getSquarePart();\r\nexport const SquareSide = getSquarePart('translate(0,-32)');\r\nexport const SquareTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3px solid ${color}`, boxSizing: 'border-box', transition: 'background-color 0.3s' }} />\r\n);\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getScrollPart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor ? <polygon fill={backgroundColor} style={{ zIndex: -2 }} transform={transform} points=\"8 93 337 93 337 2 8 2 8 93\"/> : null}\r\n        <path fill={color} transform={transform} d=\"M344,6.39V4.47h-6.14V0h-2.68s-1.06,1.54-3.91,1.54H12.73C9.88,1.54,8.82,0,8.82,0H6.14V4.47H0V6.39c2.53,0,2.67,4.14,2.67,4.14V81.91S2.53,86,0,86v2H6.14v7H8.82V3.31H335.18V91.69H8.82V95s1.06-1.54,3.91-1.54H331.27c2.84,0,3.9,1.52,3.91,1.54h2.68V88H344V86c-2.53,0-2.67-4.13-2.67-4.13V10.53S341.47,6.39,344,6.39ZM6.27,81.91H4.14V12.12H6.27Zm333.79.48h-2.12V12.61h2.12Z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ScrollCorner = getScrollPart();\r\nexport const ScrollTop = getScrollPart('translate(-32,0)');\r\nexport const ScrollSide = getScrollPart('translate(0,-32)');\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M275.08,719a32.47,32.47,0,0,0-1.23-4.29c-1.71-4.36-1.13-582.66-1.13-582.66s0-30.43-.58-49c-.36-11.85,1.72-26.54,3.28-35.6a4,4,0,0,1-1.49-1.64c-1.7-3.61-2.41-7.49-1-11.35a6.27,6.27,0,0,1,.93-1.69c-.7-3.15-.33-6.48-1.3-9.54a42.76,42.76,0,0,0-3.54-7,18.66,18.66,0,0,0-5-6.37c-2-1.48-4.08-2.5-5.8-4.27-1.74-.72-3.49-1.42-5.2-2.21l-.4-.21H29.41a5.1,5.1,0,0,1-3.58,1.27,5.83,5.83,0,0,1-2.25,1.44L23.19,6,23,6.05c-.42.25-.87.47-1.29.74a7.34,7.34,0,0,0-1.22.84c1-.91-.26.24-.45.41a5.85,5.85,0,0,1-2.83,1.33,52.05,52.05,0,0,0-3.9,4c-4.59,5.47-4.83,13.51-6.24,20.2,0,.14-.08.27-.11.4a11.08,11.08,0,0,1,.29,1.52c-.16-1.2.09.35.14.59q.14.63.3,1.26a21,21,0,0,0,.88,2.57c1.07,2.59-1.17,5.4-3.49,6.15a3.22,3.22,0,0,1-.7.14C5.94,55.14,8.24,70.62,7.86,83c-.58,18.57-.58,49-.58,49s.64,576.13-1,587.33a5.14,5.14,0,0,1,3.07,6,29.15,29.15,0,0,1-2.67,7,4.68,4.68,0,0,1,.85,2.91c-.27,14.38,12.13,22.59,23.77,28.18a5.7,5.7,0,0,1,.88.53h216.9a5.09,5.09,0,0,1,2.84-1.08,4.1,4.1,0,0,1,1.59-1.45c1-.5,2.07-.93,3.12-1.37l.64-.27-.55.24a6.87,6.87,0,0,0,1.29-.6c.22-.11.45-.18.68-.27,1-1,1.86-1.92,2.41-2.37,2.91-2.43,6.23-4.26,7.86-7.81a4.38,4.38,0,0,1,1.74-2c.81-4.9,2.13-9.72,2.58-14.7a5.32,5.32,0,0,1,.57-2c0-.19-.07-.36-.11-.51-.38-1.74-.87-3.44-1.28-5.17A4.8,4.8,0,0,1,275.08,719Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M275.28,654.52v-554c.77-12.76,2.64-38.62,5.52-48.14l.21-.69-.6-.38a21.36,21.36,0,0,1-3.68-3.14,62.8,62.8,0,0,1,2.34-9.56l.12-.34L276.7,10.17l-1.08-.34c-2.52-.8-9.71-4-9.71-8.12V0H15.09V1.71c0,4.13-7,7.26-9.71,8.12l-1.08.34L1.82,38.28l.12.34a64,64,0,0,1,2.34,9.54A21,21,0,0,1,.6,51.32L0,51.7l.21.69C3.09,61.89,5,87.7,5.72,100.48v554C5,667.23,3.09,703.1.21,712.61L0,713.3l.6.38a20.83,20.83,0,0,1,3.68,3.14,61.64,61.64,0,0,1-2.34,9.56l-.12.35,2.48,28.1,1.08.34c2.7.86,9.71,4,9.71,8.12V765H265.91v-1.71c0-4.13,7-7.26,9.71-8.12l1.08-.34,2.48-28.1-.12-.35a64,64,0,0,1-2.34-9.54,21,21,0,0,1,3.68-3.16l.6-.38-.21-.69c-2.88-9.5-4.74-45.31-5.51-58.09m-3.84,73.29s.45,1.07,1,2.61a29.79,29.79,0,0,1-1.33,12.42C268.18,751.6,261,758,250.25,761.58H30.68c-23-7.63-22.8-25.7-22.16-31.09.59-1.63,1.06-2.75,1.09-2.83a12.21,12.21,0,0,0-2.1-9.76c3.38-18.83,1.66-42.81,1.58-43.89V91.12c.09-1.19,1.81-25.21-1.57-44.05a12.41,12.41,0,0,0,2.05-9.88s-.45-1.07-1-2.61A29.8,29.8,0,0,1,9.87,22.16C12.82,13.4,20,7,30.76,3.42H250.32c23.05,7.63,22.8,25.7,22.16,31.09-.59,1.63-1.06,2.75-1.09,2.84a12.19,12.19,0,0,0,2.1,9.75c-3.38,18.83-1.66,42.81-1.58,43.89V673.88c-.09,1.19-1.81,25.21,1.57,44a12.41,12.41,0,0,0-2.05,9.88m7.41-675.3c-1.71,6.15-3,17.57-4,28.45a191.48,191.48,0,0,1,1.5-30.51,23.59,23.59,0,0,0,2.5,2.06m-5.72-14.58c.09-.21,1.13-2.72,2.12-5.82l.51,5.74A61.16,61.16,0,0,0,274,44.4a9.5,9.5,0,0,1-.89-6.47m.42-25.21,1.24,14.07c-.25,1.21-.59,2.48-1,3.69a30.1,30.1,0,0,0-1.55-8.72c-2-6-6.88-13.57-18.42-18.34h8.89c1.25,5.24,8,8.26,10.8,9.3M18.25,3.42h8.88C10.49,10.29,7.46,23.17,7.21,30.61c-.38-1.25-.74-2.56-1-3.82L7.45,12.72c2.79-1,9.55-4.06,10.8-9.3m-13,34.43.51-5.74c1,3.07,2,5.53,2.07,5.66A9.73,9.73,0,0,1,7,44.33a62.24,62.24,0,0,0-1.73-6.48m-.6,12.59A191.42,191.42,0,0,1,6.15,81c-1-10.87-2.29-22.29-4-28.44a21.9,21.9,0,0,0,2.49-2.07M2.15,712.49c1.71-6.15,3-17.57,4-28.44a191.41,191.41,0,0,1-1.5,30.5,23.59,23.59,0,0,0-2.5-2.06m5.72,14.58c-.09.21-1.13,2.72-2.12,5.82l-.51-5.74A60.54,60.54,0,0,0,7,720.6a9.5,9.5,0,0,1,.89,6.47m-.42,25.21L6.21,738.21c.25-1.21.59-2.47,1-3.69a30,30,0,0,0,1.55,8.72c2,6,6.88,13.57,18.42,18.34H18.25c-1.25-5.24-8-8.26-10.8-9.3m255.3,9.3h-8.88c16.64-6.86,19.67-19.75,19.92-27.19.38,1.26.74,2.56,1,3.82l-1.24,14.07c-2.79,1-9.55,4.06-10.8,9.3m13-34.43-.51,5.74c-1-3.08-2-5.53-2.07-5.66a9.73,9.73,0,0,1,.85-6.56,62.24,62.24,0,0,0,1.73,6.48m.6-12.59a191.37,191.37,0,0,1-1.51-30.51c1,10.88,2.29,22.29,4,28.44a21.9,21.9,0,0,0-2.49,2.07\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const FancyCorner = getSquarePart();\r\nexport const FancySide = getSquarePart('translate(0,-100)');\r\nexport const FancyTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3.5px solid ${color}`, boxSizing: 'border-box' }} />\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    FrameContainer,\r\n    FrameTopRowContainer,\r\n    FrameMiddleRowContainer,\r\n    FrameBottomRowContainer,\r\n    FrameMiddleFill,\r\n    TopLeftCornerStyles,\r\n    TopRightCornerStyles,\r\n    BottomLeftCornerStyles,\r\n    BottomRightCornerStyles,\r\n    TopStyles,\r\n    BottomStyles,\r\n    LeftStyles,\r\n    RightStyles,\r\n} from './style';\r\nimport { SquareCorner, SquareTop, SquareSide } from './svg/square';\r\nimport { ScrollCorner, ScrollTop, ScrollSide } from './svg/scroll';\r\nimport { FancyCorner, FancyTop, FancySide } from './svg/fancy';\r\n\r\nexport interface FrameProps {\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    className?: string;\r\n}\r\n\r\nexport interface FrameFactoryProps {\r\n    partSize: number;\r\n    Corner: React.ComponentType<FramePartProps>;\r\n    Top: React.ComponentType<FramePartProps>;\r\n    Side: React.ComponentType<FramePartProps>;\r\n}\r\n\r\nexport interface FramePartProps extends FrameProps {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst frameFactory = ({\r\n    partSize,\r\n    Corner,\r\n    Top,\r\n    Side,\r\n}: FrameFactoryProps) => {\r\n    const FrameTopLeftCorner = styled(Corner)`${TopLeftCornerStyles}`;\r\n    const FrameTopRightCorner = styled(Corner)`${TopRightCornerStyles}`;\r\n    const FrameBottomLeftCorner = styled(Corner)`${BottomLeftCornerStyles}`;\r\n    const FrameBottomRightCorner = styled(Corner)`${BottomRightCornerStyles}`;\r\n    const FrameTop = styled(Top)`${TopStyles}`;\r\n    const FrameBottom = styled(Top)`${BottomStyles}`;\r\n    const FrameLeft = styled(Side)`${LeftStyles}`;\r\n    const FrameRight = styled(Side)`${RightStyles}`;\r\n\r\n    const Frame: React.FC<FrameProps> = ({ color = '#b13735', backgroundColor, className }) => {\r\n        const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n        const [topPartWidth, setTopPartWidth] = useState<number>(partSize);\r\n        const [sidePartHeight, setSidePartHeight] = useState<number>(partSize);\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            handleResize();\r\n        }, [containerRef]);\r\n\r\n        const handleResize = () => {\r\n            const { current: container } = containerRef;\r\n            if (container) {\r\n                setTopPartWidth(container.clientWidth - partSize * 2);\r\n                setSidePartHeight(container.clientHeight - partSize * 2);\r\n            }\r\n        };\r\n\r\n        const framePartProps: FramePartProps = { color, backgroundColor, width: partSize, height: partSize };\r\n\r\n        return (\r\n            <FrameContainer ref={containerRef} className={className}>\r\n                {containerRef.current\r\n                    ? (\r\n                        <React.Fragment>\r\n                            <FrameTopRowContainer>\r\n                                <FrameTopLeftCorner {...framePartProps} />\r\n                                <FrameTop {...framePartProps} width={topPartWidth}/>\r\n                                <FrameTopRightCorner {...framePartProps} />\r\n                            </FrameTopRowContainer>\r\n                            <FrameMiddleRowContainer>\r\n                                <FrameLeft {...framePartProps} height={sidePartHeight} />\r\n                                <FrameMiddleFill {...framePartProps} height={sidePartHeight} width={topPartWidth} />\r\n                                <FrameRight {...framePartProps} height={sidePartHeight} />\r\n                            </FrameMiddleRowContainer>\r\n                            <FrameBottomRowContainer>\r\n                                <FrameBottomLeftCorner {...framePartProps} />\r\n                                <FrameBottom {...framePartProps} width={topPartWidth}/>\r\n                                <FrameBottomRightCorner {...framePartProps} />\r\n                            </FrameBottomRowContainer>\r\n                        </React.Fragment>\r\n                    )\r\n                    : null\r\n                }\r\n            </FrameContainer>\r\n        );\r\n    };\r\n\r\n    return Frame;\r\n};\r\n\r\nexport const SquareFrame = frameFactory({ partSize: 32, Corner: SquareCorner, Top: SquareTop, Side: SquareSide });\r\nexport const ScrollFrame = frameFactory({ partSize: 32, Corner: ScrollCorner, Top: ScrollTop, Side: ScrollSide });\r\nexport const FancyFrame = frameFactory({ partSize: 128, Corner: FancyCorner, Top: FancyTop, Side: FancySide });\r\n\r\nexport default frameFactory;\r\n","import styled from 'styled-components';\r\nimport { Avatar as AvatarMui } from '@material-ui/core';\r\n\r\nexport const CharacterListItemScrollContainer = styled.div`\r\n    height: 80px;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const CharacterListItemContainer = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n    border-radius: 20px;\r\n`;\r\n\r\nexport const CharacterListItemWrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Avatar = styled(AvatarMui)`\r\n    && {\r\n        height: 60px;\r\n        width: 60px;\r\n    }\r\n    margin: 0 8px;\r\n`;\r\n\r\nexport const NameAndSavesContainer = styled.div`\r\n    height: 64px;\r\n    margin-right: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n`;\r\n\r\nexport const SavesContainer = styled.div`\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const HitPointsContainer = styled.div`\r\n    height: 64px;\r\n    width: 200px;\r\n    margin-left: auto;\r\n    margin-right: 16px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nexport const HitPoints = styled.div<{ width: number }>`\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n    width: ${props => props.width}px;\r\n    text-align: center;\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Character } from '../../redux/types';\r\nimport { updateCharacterById } from '../../redux/actions/characters';\r\nimport { SquareFrame } from '../Frame';\r\nimport {\r\n    CharacterListItemScrollContainer,\r\n    CharacterListItemContainer,\r\n    CharacterListItemWrapper,\r\n    NameAndSavesContainer,\r\n    Avatar,\r\n    Name,\r\n    SavesContainer,\r\n    HitPointsContainer,\r\n    HitPoints,\r\n} from './style';\r\n\r\nexport interface DispatchProps {\r\n    updateCharacterById: (id: number, maxHitPoints: number) => void;\r\n}\r\n\r\nexport interface CharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst CharacterListItem: React.FC<CharacterListItemProps & DispatchProps> = ({ character, updateCharacterById }) => {\r\n    const { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = character;\r\n\r\n    useEffect(() => updateCharacterById(id, maxHitPoints), [id, maxHitPoints, updateCharacterById]);\r\n\r\n    return (\r\n        <CharacterListItemScrollContainer>\r\n            <CharacterListItemContainer>\r\n                <SquareFrame color={(themeColor && themeColor.themeColor) || undefined} backgroundColor=\"white\" />\r\n                <CharacterListItemWrapper>\r\n                    <Avatar src={avatarUrl} variant=\"rounded\" />\r\n                    <NameAndSavesContainer>\r\n                        <Name>{name}</Name>\r\n                        <SavesContainer />\r\n                    </NameAndSavesContainer>\r\n                    <HitPointsContainer>\r\n                        <HitPoints width={64}>{maxHitPoints - removedHitPoints}</HitPoints>\r\n                        <HitPoints width={16} style={{ color: 'grey' }}>/</HitPoints>\r\n                        <HitPoints width={64}>{maxHitPoints}</HitPoints>\r\n                        <HitPoints width={48} style={{ color: 'grey' }}>[{temporaryHitPoints}]</HitPoints>\r\n                    </HitPointsContainer>\r\n                </CharacterListItemWrapper>\r\n            </CharacterListItemContainer>\r\n        </CharacterListItemScrollContainer>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCharacterById })(CharacterListItem);\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const EntityListContainer = styled.div`\r\n    position: relative;\r\n    width: 50%;\r\n    max-width: 600px;\r\n    height: 480px;\r\n`;\r\n\r\nexport const EntityListWrapper = styled.div`\r\n    height: 448px;\r\n    padding: 16px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n\r\n    overflow-y: scroll;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst EntityListFade = css`\r\n    position: absolute;\r\n    left: calc(2%);\r\n    width: 96%;\r\n    border-radius: 16px;\r\n    height: 20px;\r\n`;\r\n\r\nexport const EntityListTopFade = styled.div`\r\n    ${EntityListFade}\r\n    top: 0;\r\n    background: linear-gradient(white, transparent);\r\n`;\r\n\r\nexport const EntityListBottomFade = styled.div`\r\n    ${EntityListFade}\r\n    bottom: 0;\r\n    background: linear-gradient(transparent, white);\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { State, Character } from '../../redux/types';\r\nimport { FancyFrame } from '../Frame';\r\nimport { CharacterListItem } from '../CharacterListItem';\r\nimport { EntityListContainer, EntityListWrapper, EntityListBottomFade, EntityListTopFade } from './style';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\nconst EntityList: React.FC<StateProps> = ({ characters }) => {\r\n    return (\r\n        <EntityListContainer>\r\n            <EntityListWrapper>\r\n                {characters.map(c => (\r\n                    <CharacterListItem key={c.id} character={c} />\r\n                ))}\r\n            </EntityListWrapper>\r\n            <EntityListTopFade />\r\n            <EntityListBottomFade />\r\n            <FancyFrame />\r\n        </EntityListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    characters: state.characters || [],\r\n});\r\n\r\nexport default connect<StateProps>(mapStateToProps)(EntityList);\r\n","import styled from 'styled-components';\r\n\r\nexport const NumpadFrameContainer = styled.div`\r\n    position: relative;\r\n    width: 288px;\r\n    height: 480px;\r\n`;\r\n\r\nexport const NumpadContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 256px;\r\n    height: 460px;\r\n    padding: 16px;\r\n    padding-bottom: 0;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const NumpadValueContainer = styled.div`\r\n    width: 256px;\r\n    height: 80px;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const NumpadValueWrapper = styled.div`\r\n    position: absolute;\r\n    width: 256px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    user-select: none;\r\n    z-index: 10;\r\n`;\r\n\r\nexport const NumpadButtonContainer = styled.div`\r\n    position: relative;\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-bottom: 8px;\r\n\r\n    &:not(:nth-child(3n + 1)) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const NumpadButtonValueContainer = styled.div`\r\n    position: absolute;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadButtonValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    text-align: center;\r\n    user-select: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { SquareFrame, ScrollFrame, FancyFrame } from '../Frame';\r\nimport {\r\n    NumpadFrameContainer,\r\n    NumpadContainer,\r\n    NumpadValueContainer,\r\n    NumpadValueWrapper,\r\n    NumpadValue,\r\n    NumpadButtonContainer,\r\n    NumpadButtonValueContainer,\r\n    NumpadButtonValue,\r\n} from './style';\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\r\n\r\ninterface NumpadButtonProps {\r\n    children: React.ReactNode;\r\n    onClick?: () => void;\r\n    color?: string;\r\n    padding?: string;\r\n}\r\n\r\nconst NumpadButton: React.FC<NumpadButtonProps> = ({ children, padding, color, onClick }) => {\r\n    const [backgroundColor, setBackgroundColor] = useState('white');\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n        setBackgroundColor('#ccc');\r\n        setTimeout(() => setBackgroundColor('white'), 100);\r\n    };\r\n\r\n    return (\r\n        <NumpadButtonContainer onClick={handleClick}>\r\n            <SquareFrame color={color || '#555'} backgroundColor={backgroundColor} />\r\n            <NumpadButtonValueContainer>\r\n                <NumpadButtonValue style={{ padding }}>{children}</NumpadButtonValue>\r\n            </NumpadButtonValueContainer>\r\n        </NumpadButtonContainer>\r\n    );\r\n};\r\n\r\nconst Numpad = () => {\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n\r\n    const handleValueClick = () => setCurrentValue(0);\r\n    const handleButtonClick = (number: number) => () => setCurrentValue(v => v * 10 + number);\r\n    const handleSubmit = (sign: number) => () => {\r\n        console.log(`Submitted: ${sign * currentValue}`);\r\n        setCurrentValue(0);\r\n    };\r\n\r\n    return (\r\n        <NumpadFrameContainer>\r\n            <FancyFrame backgroundColor=\"rgba(255, 255, 255, 0.8)\" />\r\n            <NumpadContainer>\r\n                <NumpadValueContainer onClick={handleValueClick}>\r\n                    <NumpadValueWrapper>\r\n                        <NumpadValue>{currentValue || ''}</NumpadValue>\r\n                        <ScrollFrame color=\"#555\" backgroundColor=\"white\" />\r\n                    </NumpadValueWrapper>\r\n                </NumpadValueContainer>\r\n                <NumpadButton onClick={handleButtonClick(7)}>7</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(8)}>8</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(9)}>9</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(4)}>4</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(5)}>5</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(6)}>6</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(1)}>1</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(2)}>2</NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(3)}>3</NumpadButton>\r\n                <NumpadButton onClick={handleSubmit(-1)} padding='8px 0 0 0' color='#b13735'><KeyboardArrowDown fontSize=\"large\" /></NumpadButton>\r\n                <NumpadButton onClick={handleButtonClick(0)}>0</NumpadButton>\r\n                <NumpadButton onClick={handleSubmit(1)} padding='8px 0 0 0' color='#08a300'><KeyboardArrowUp fontSize=\"large\" /></NumpadButton>\r\n            </NumpadContainer>\r\n        </NumpadFrameContainer>\r\n    );\r\n};\r\n\r\nexport default Numpad;\r\n","import styled from 'styled-components';\r\n\r\nexport const NotesContainer = styled.div`\r\n    position: relative;\r\n    width: 920px;\r\n    height: 260px;\r\n    margin-top: 16px;\r\n`;\r\n\r\nexport const NotesCanvas = styled.canvas`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 12px;\r\n    touch-action: none;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { FancyFrame } from '../Frame';\r\nimport { NotesContainer, NotesCanvas } from './style';\r\n\r\nconst Notes = () => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const prevPointerPosition = useRef<{ x: number, y: number } | null>(null);\r\n\r\n    const [canvasSize, setCanvasSize] = useState<{ width?: number, height?: number }>({});\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateCanvasSize);\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateCanvasSize();\r\n    }, [canvasRef]);\r\n\r\n    const updateCanvasSize = () => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const { width, height } = canvas.getBoundingClientRect();\r\n            setCanvasSize({ width, height });\r\n        }\r\n    };\r\n\r\n    const handlePointerMove = (e: React.PointerEvent<HTMLCanvasElement>) => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                const { pressure, buttons, clientX, clientY } = e;\r\n                const x = clientX - canvas.getBoundingClientRect().x;\r\n                const y = clientY - canvas.getBoundingClientRect().y;\r\n                const lineThickness = pressure || 1;\r\n\r\n                if (!pressure || !buttons) {\r\n                    prevPointerPosition.current = null;\r\n                    return;\r\n                } \r\n\r\n                if (prevPointerPosition.current) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(prevPointerPosition.current.x, prevPointerPosition.current.y);\r\n                    ctx.lineTo(x, y);\r\n                    ctx.lineWidth = lineThickness * 2;\r\n                    ctx.stroke();\r\n                }\r\n\r\n                prevPointerPosition.current = { x, y };\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePointerUp = () => (prevPointerPosition.current = null);\r\n\r\n    const canvasProps = {\r\n        ref: canvasRef,\r\n        onPointerMove: handlePointerMove,\r\n        onPointerUp: handlePointerUp,\r\n        ...canvasSize,\r\n    };\r\n\r\n    return (\r\n        <NotesContainer>\r\n            <NotesCanvas {...canvasProps}></NotesCanvas>\r\n            <FancyFrame />\r\n        </NotesContainer>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import styled from 'styled-components';\r\n\r\nexport interface RootComponentContainerProps {\r\n    backgroundImageSrc?: string;\r\n}\r\n\r\nexport const RootComponentContainer = styled.div<RootComponentContainerProps>`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url(\"${props => props.backgroundImageSrc}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n\r\nexport const RootComponentWrapper = styled.div`\r\n    position: absolute;\r\n    top: 64px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: calc(100% - 64px);\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ListAndNumpadContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nexport const NotesContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n    }\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { Character } from '../../redux/types';\r\nimport { updateCharacterMaxHp, deleteCharacter } from '../../redux/actions/characters';\r\nimport { SavedCharacterListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateCharacterMaxHp: typeof updateCharacterMaxHp;\r\n    deleteCharacter: typeof deleteCharacter;\r\n}\r\n\r\nexport interface SavedCharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst SavedCharacterListItem: React.FC<SavedCharacterListItemProps & DispatchProps> = ({ character, updateCharacterMaxHp, deleteCharacter }) => {\r\n    const [maxHp, setMaxHp] = useState<string>(character.maxHitPoints.toString());\r\n    const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n    const openConfirmationDialog = () => setIsDialogOpen(true);\r\n    const closeConfirmationDialog = () => setIsDialogOpen(false);\r\n\r\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { id } = character;\r\n        const { value } = e.target;\r\n\r\n        setMaxHp(value);\r\n        updateCharacterMaxHp(id, parseInt(value) || 0);\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        const { id } = character;\r\n        deleteCharacter(id);\r\n        closeConfirmationDialog();\r\n    };\r\n\r\n    const { name, avatarUrl } = character;\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%' }}>\r\n            <SavedCharacterListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <TextField label=\"Max HP\" type=\"number\" value={maxHp} onChange={onInputChange} style={{ width: '64px' }} />\r\n                <IconButton onClick={openConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedCharacterListItemContainer>\r\n            <Dialog open={isDialogOpen} onClose={closeConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved characters. You will only be able to undo this by adding this character again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCharacterMaxHp, deleteCharacter })(SavedCharacterListItem);\r\n","import styled from 'styled-components';\r\n\r\nexport const SavedCharactersListContainer = styled.div<{ small: boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    ${props => props.small ? `\r\n        width: 100%;\r\n        padding: 16px;\r\n        box-sizing: border-box;\r\n    ` : `\r\n        width: 40%;\r\n        max-width: 600px;\r\n        margin: 16px;\r\n    `}\r\n\r\n    & > :not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    & > :last-child {\r\n        margin-top: 8px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addCharacterByUrl } from '../../redux/actions/characters';\r\nimport { State, Character } from '../../redux/types';\r\nimport { SavedCharacterListItem } from '../SavedCharacterListItem';\r\nimport { SavedCharactersListContainer } from './style';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCharacterByUrl: (url: string, maxHitPoints: number) => void;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, characters, addCharacterByUrl }) => {\r\n    const [isNewCharacterDialogOpen, setIsNewCharacterDailogOpen] = useState<boolean>(false);\r\n    const [characterURL, setCharacterURL] = useState<string>('');\r\n    const [characterMaxHitPoints, setCharacterMaxHitPoints] = useState<string>('');\r\n\r\n    const openNewCharacterDialog = () => setIsNewCharacterDailogOpen(true);\r\n    const closeNewCharacterDialog = () => setIsNewCharacterDailogOpen(false);\r\n\r\n    const handleCharacterURLChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterURL(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterMaxHitPoints(e.target.value);\r\n\r\n    const handleImportConfirmed = () => {\r\n        closeNewCharacterDialog();\r\n        addCharacterByUrl(characterURL, parseInt(characterMaxHitPoints) || 0);\r\n        setCharacterURL('');\r\n        setCharacterMaxHitPoints('');\r\n    };\r\n\r\n    return (\r\n        <SavedCharactersListContainer small={small}>\r\n            <Typography variant=\"h5\">Characters</Typography>\r\n            {characters.map(c => (\r\n                <SavedCharacterListItem key={c.id} character={c} />\r\n            ))}\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewCharacterDialog}>Add character</Button>\r\n            <Dialog open={isNewCharacterDialogOpen} onClose={closeNewCharacterDialog}>\r\n                <DialogTitle>Import new character from D&D Beyond</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Paste a link to the character you want to add in the input field below. Make sure the character privacy is set to \"Public\", otherwise it will not be imported.\r\n                        <br /> <br />\r\n                        Optionally, specify character's maximum hit points. You will be able to change them later.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Character URL\" value={characterURL} onChange={handleCharacterURLChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={characterMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewCharacterDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleImportConfirmed} color=\"primary\" variant=\"contained\" disabled={!characterURL}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </SavedCharactersListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.characters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCharacterByUrl })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedNPCListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n    }\r\n\r\n    & > :first-child {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\nimport { NPC } from '../../redux/types';\r\nimport { updateNPC, deleteNPC } from '../../redux/actions/npcs';\r\nimport { SavedNPCListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateNPC: typeof updateNPC;\r\n    deleteNPC: typeof deleteNPC;\r\n}\r\n\r\nexport interface SavedNPCListItemProps {\r\n    npc: NPC;\r\n}\r\n\r\nconst SavedNPCListItem: React.FC<SavedNPCListItemProps & DispatchProps> = ({ npc, updateNPC, deleteNPC }) => {\r\n    const { name, avatarUrl, maxHitPoints } = npc;\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState<boolean>(false);\r\n    const [isDeleteConfirmationDialogOpen, setIsDeleteConfirmationDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>(name);\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>(maxHitPoints.toString());\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>(avatarUrl || '');\r\n\r\n    const openEditDialog = () => setIsEditDialogOpen(true);\r\n    const closeEditDialog = () => setIsEditDialogOpen(false);\r\n\r\n    const openDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(true);\r\n    const closeDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleEditConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        updateNPC({\r\n            originalNPC: npc,\r\n            updatedNPC: { name: NPCName, avatarUrl: NPCAvatarUrl, maxHitPoints },\r\n        });\r\n        closeEditDialog();\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        closeDeleteConfirmationDialog();\r\n        deleteNPC(npc);\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%' }}>\r\n            <SavedNPCListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <IconButton onClick={openEditDialog}>\r\n                    <Edit />\r\n                </IconButton>\r\n                <IconButton onClick={openDeleteConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedNPCListItemContainer>\r\n            <Dialog open={isEditDialogOpen} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Change name, max hit points or avatar url of your NPC.</DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeEditDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleEditConfirmed} color=\"primary\" variant=\"contained\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isDeleteConfirmationDialogOpen} onClose={closeDeleteConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved NPCs. You will only be able to undo this by creating this NPC again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateNPC, deleteNPC })(SavedNPCListItem);\r\n","import { NPC } from '../../types';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n} from './types';\r\n\r\nexport const addNPC = (npc: NPC) => ({\r\n    type: NPC_ADDED,\r\n    payload: npc,\r\n});\r\n\r\nexport const deleteNPC = (npc: NPC) => ({\r\n    type: NPC_DELETED,\r\n    payload: npc,\r\n});\r\n\r\nexport interface UpdateNPCProps {\r\n    originalNPC: NPC;\r\n    updatedNPC: NPC;\r\n}\r\n\r\nexport const updateNPC = (props: UpdateNPCProps) => ({\r\n    type: NPC_UPDATED,\r\n    payload: props,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const SavedNPCsListContainer = styled.div<{ small: boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    ${props => props.small ? `\r\n        width: 100%;\r\n        padding: 16px;\r\n        box-sizing: border-box;\r\n    ` : `\r\n        width: 40%;\r\n        max-width: 600px;\r\n        margin: 16px;\r\n    `}\r\n\r\n    & > :not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    & > :last-child {\r\n        margin-top: 8px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addNPC } from '../../redux/actions/npcs';\r\nimport { State, NPC } from '../../redux/types';\r\nimport { SavedNPCsListItem } from '../SavedNPCsListItem';\r\nimport { SavedNPCsListContainer } from './style';\r\n\r\ninterface StateProps {\r\n    npcs: NPC[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addNPC: typeof addNPC;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, npcs, addNPC }) => {\r\n    const [isNewNPCDialogOpen, setIsNewNPCDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>('');\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>('');\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>('');\r\n\r\n    const openNewNPCDialog = () => setIsNewNPCDialogOpen(true);\r\n    const closeNewNPCDialog = () => setIsNewNPCDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleNewNPCConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        addNPC({ name: NPCName, maxHitPoints, avatarUrl: NPCAvatarUrl });\r\n\r\n        closeNewNPCDialog();\r\n        setNPCName('');\r\n        setNPCMaxHitPoints('');\r\n        setNPCAvatarUrl('');\r\n    };\r\n\r\n    return (\r\n        <SavedNPCsListContainer small={small}>\r\n            <Typography variant=\"h5\">NPCs</Typography>\r\n            {npcs.map(c => (\r\n                <SavedNPCsListItem key={c.name} npc={c} />\r\n            ))}\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewNPCDialog}>Add NPC</Button>\r\n            <Dialog open={isNewNPCDialogOpen} onClose={closeNewNPCDialog}>\r\n                <DialogTitle>Create new NPC</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Choose a name for your NPC and specify maximum hit points. Optionally, specify an avatar url or pick one of the default avatars.\r\n                        <br /> <br />\r\n                        It is not recommended to have several NPCs with the same name.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewNPCDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleNewNPCConfirmed} color=\"primary\" variant=\"contained\" disabled={!NPCName || !NPCMaxHitPoints}>Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </SavedNPCsListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    npcs: (state && state.npcs) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNPC })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\n\r\ninterface Multisize {\r\n    small: boolean;\r\n}\r\n\r\nexport const CharacterDialogContentContainer = styled.div<Multisize>`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    ${props => props.small ? `\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    ` : `\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    `}\r\n`;\r\n\r\nexport const CharacterDialogContentWrapper = styled.div<Multisize>`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    ${props => props.small && 'flex-direction: column;'}\r\n`;\r\n\r\nexport const Divider = styled.div<{ color: string } & Multisize>`\r\n    border: 1px solid ${props => props.color};\r\n    border-radius: 50%;\r\n    opacity: 0.5;\r\n\r\n    ${props => props.small ? `\r\n        height: 0;\r\n        margin: 16px;\r\n    ` : `\r\n        width: 0;\r\n        margin-top: 56px;\r\n        margin-bottom: 64px;\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { SavedCharactersList } from '../SavedCharactersList';\r\nimport { SavedNPCsList } from '../SavedNPCsList';\r\nimport { CharacterDialogContentContainer, CharacterDialogContentWrapper, Divider } from './style';\r\n\r\nconst CharacterDialogContent = () => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <CharacterDialogContentContainer small={small}>\r\n            <CharacterDialogContentWrapper small={small}>\r\n                <SavedCharactersList small={small} />\r\n                <Divider color={theme.palette.secondary.main} small={small} />\r\n                <SavedNPCsList small={small} />\r\n            </CharacterDialogContentWrapper>\r\n        </CharacterDialogContentContainer>\r\n    );\r\n};\r\n\r\nexport default CharacterDialogContent;\r\n","import React, { useState} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IconButton, Dialog, Typography } from '@material-ui/core';\r\nimport { People, Close } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { Navbar } from '../Navbar';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { EntityList } from '../EntityList';\r\nimport { Numpad } from '../Numpad';\r\nimport { Notes } from '../Notes';\r\nimport { RootComponentContainer, RootComponentWrapper, ContentContainer, ListAndNumpadContainer, NotesContainer } from './style';\r\nimport { CharacterDialogContent } from '../CharacterDialogContent';\r\n\r\nexport interface StateProps {\r\n    currentBackgroundUrl?: string;\r\n}\r\n\r\nconst RootComponent: React.FC<StateProps> = ({ currentBackgroundUrl }) => {\r\n    const [isCharacterDialogOpen, setIsCharacterDialogOpen] = useState<boolean>(true);\r\n\r\n    const openCharacterDialog = () => setIsCharacterDialogOpen(true);\r\n    const closeCharacterDialog = () => setIsCharacterDialogOpen(false);\r\n\r\n    return (\r\n        <RootComponentContainer backgroundImageSrc={currentBackgroundUrl}>\r\n            <Navbar>\r\n                <Tooltip title=\"View and edit saved characters\">\r\n                    <IconButton color=\"inherit\" onClick={openCharacterDialog}>\r\n                        <People />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Navbar>\r\n            <RootComponentWrapper>\r\n                <ContentContainer>\r\n                    <ListAndNumpadContainer>\r\n                        <EntityList />\r\n                        <Numpad />\r\n                    </ListAndNumpadContainer>\r\n                    <NotesContainer>\r\n                        <Notes />\r\n                    </NotesContainer>\r\n                </ContentContainer>\r\n            </RootComponentWrapper>\r\n            <Dialog fullScreen open={!!isCharacterDialogOpen} onClose={closeCharacterDialog}>\r\n                <Navbar color=\"primary\">\r\n                    <IconButton color=\"inherit\" onClick={closeCharacterDialog}>\r\n                        <Close />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '8px' }}>\r\n                        Saved Characters\r\n                    </Typography>\r\n                </Navbar>\r\n                <CharacterDialogContent />\r\n            </Dialog>\r\n        </RootComponentContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    currentBackgroundUrl: state.characters && state.characters[1] && state.characters[1].defaultBackdrop.largeBackdropAvatarUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps)(RootComponent);\r\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from './redux';\nimport { RootComponent, LoadingView } from './components';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#b13735',\n        },\n        secondary: {\n            main: '#555',\n        },\n    },\n    typography: {\n        fontFamily: 'Cairo',\n    },\n});\n\nconst App = () => (\n    <ThemeProvider theme={theme}>\n        <Provider store={store}>\n            <PersistGate loading={<LoadingView />} persistor={persistor}>\n                <RootComponent />\n            </PersistGate>\n        </Provider>\n    </ThemeProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(<App />);\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}