{"version":3,"sources":["helpers/dnd-beyond/getCharacterStats.ts","helpers/getRequestErrorMessage.tsx","redux/actions/ui/actionCreators.ts","redux/actions/ui/types.ts","redux/actions/characters/actionCreators.ts","redux/actions/characters/types.ts","redux/reducers/characters.ts","redux/actions/npcs/actionCreators.tsx","redux/actions/npcs/types.ts","redux/reducers/npcs.ts","redux/reducers/ui.ts","redux/actions/encounter/actionCreators.ts","redux/actions/encounter/types.ts","components/Frame/style.ts","components/Frame/svg/square.tsx","components/Frame/svg/scroll.tsx","components/Frame/svg/fancy.tsx","components/Frame/Frame.tsx","components/EntityListItem/style.ts","components/EntityListItem/EntityListItem.tsx","helpers/sortEntitiesWithInitiative.ts","redux/reducers/encounter.ts","redux/reducers/index.ts","redux/index.ts","components/LoadingView/style.ts","components/LoadingView/LoadingView.tsx","components/Navbar/style.ts","components/Navbar/Navbar.tsx","components/Tooltip/Tooltip.tsx","components/EntityList/style.ts","components/EntityList/EntityList.tsx","components/Numpad/style.ts","components/Numpad/Numpad.tsx","components/Notes/style.ts","components/Notes/Notes.tsx","components/RootComponent/style.ts","components/DividedList/style.tsx","components/DividedList/DividedList.tsx","components/SavedCharacterListItem/style.ts","components/SavedCharacterListItem/SavedCharacterListItem.tsx","components/SavedCharactersList/SavedCharactersList.tsx","components/SavedNPCListItem/style.ts","components/SavedNPCListItem/SavedNPCListItem.tsx","components/SavedNPCsList/SavedNPCsList.tsx","components/NewEncCharacterListItem/style.ts","components/NewEncCharacterListItem/NewEncCharacterListItem.tsx","components/NewEncCharactersList/NewEncCharactersList.tsx","components/NewEncNPCListItem/style.ts","components/NewEncNPCListItem/NewEncNPCListItem.tsx","components/NewEncNPCsList/NewEncNPCsList.tsx","components/TextNotes/style.ts","components/TextNotes/TextNotes.tsx","components/AnimatedImage/style.ts","components/AnimatedImage/AnimatedImage.tsx","components/RootComponent/RootComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCharacterStats","a","characterId","jsonUrl","axios","method","url","withCredentials","response","data","getRequestErrorMessage","error","status","Fragment","message","Link","href","openErrorDialog","type","payload","addCharacterByUrl","maxHitPoints","dispatch","getState","split","length","characters","every","c","id","toString","then","stats","name","removedHitPoints","temporaryHitPoints","deathSaves","avatarUrl","themeColor","defaultBackdrop","addCharacter","updateCharacterById","parseInt","find","updateCharacter","character","initialState","state","action","prevCharacter","index","indexOf","slice","updateMaxHpById","maxHp","deleteById","addNPC","npc","updateNPC","props","deleteNPC","originalNPC","updatedNPC","errorDialog","isOpen","updateNPCHitPoints","key","update","temp","FrameContainer","styled","div","FrameTopRowContainer","FrameMiddleRowContainer","FrameBottomRowContainer","FrameMiddleFill","width","height","backgroundColor","CornerBaseStyles","css","TopLeftCornerStyles","TopRightCornerStyles","BottomLeftCornerStyles","BottomRightCornerStyles","TopStyles","BottomStyles","LeftStyles","RightStyles","getSquarePart","transform","color","className","data-name","xmlns","viewBox","style","fill","zIndex","transition","d","boxShadow","SquareCorner","SquareSide","getScrollPart","points","ScrollCorner","ScrollTop","ScrollSide","FancyCorner","FancySide","frameFactory","partSize","Corner","Top","Side","FrameTopLeftCorner","FrameTopRightCorner","FrameBottomLeftCorner","FrameBottomRightCorner","FrameTop","FrameBottom","FrameLeft","FrameRight","forceUpdateProp","containerRef","useRef","useState","topPartWidth","setTopPartWidth","sidePartHeight","setSidePartHeight","useEffect","window","addEventListener","handleResize","removeEventListener","container","current","Math","max","clientWidth","clientHeight","framePartProps","ref","SquareFrame","borderTop","boxSizing","ScrollFrame","FancyFrame","EntityType","EntityListItemScrollContainer","small","EntityListItemContainer","EntityListItemWrapper","isSelected","AvatarWrapper","Avatar","AvatarMui","NameAndSavesContainer","Name","SavesContainer","HitPointsContainer","onClick","HitPoints","HitPointMenuContentWrapper","HitPointMenuButtonWrapper","connect","selectedKey","encounter","selectedEntityKey","selectEntity","entityKey","theme","useTheme","useMediaQuery","breakpoints","down","menuRef","menuAnchorElement","setMenuAnchorElement","menuInputValue","setMenuInputValue","useMemo","CHARACTER","closeMenu","palette","secondary","main","src","variant","NPC","e","target","currentTarget","setTimeout","scrollIntoView","behavior","block","undefined","Menu","anchorEl","open","onClose","marginTop","TextField","label","autoFocus","value","onChange","Button","updateHP","isNaN","abs","ThemeProvider","createMuiTheme","primary","sortEntitiesWithInitiative","npcs","initiativeById","currentTurnKey","sortedByInitiative","keys","forEach","keyString","initiative","push","entity","sort","e1","e2","shift","currentId","currentTurnInitiative","currentRound","npcHitPoints","textNotesByKey","characterNumber","filter","startsWith","npcNumber","removeCharacter","characterKey","findKey","omit","removeNPC","addedNPCsKeys","latestAddedNpc","reduce","accumulator","number","splitByHash","updateCharacterInitiative","updateNPCInitiative","npcKeys","npcInitiatives","recalculateCurrentTurnKey","findMaxInitiative","maxInitiative","characterInitiative","npcKey","npcInitiative","findWithInitiative","keyWithInitiative","nextTurn","sortedEntities","round","prevTurn","newTemp","newRemoved","min","rootReducer","combineReducers","ui","text","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","store","createStore","persistReducer","applyMiddleware","thunk","persistor","persistStore","LoadingViewBackground","LoadingViewContainer","LoadingViewImage","img","LoadingViewText","LoadingView","process","NavbarContainer","Navbar","children","other","AppBar","position","minHeight","Toolbar","paddingLeft","paddingRight","withStyles","tooltip","fontSize","arrow","Tooltip","EntityListContainer","fullWidth","fullScreen","short","EntityListWrapper","EntityListFade","EntityListTopFade","EntityListBottomFade","entitiesByInitiative","map","entityListItemProps","NumpadFrameContainer","NumpadContainer","NumpadValueContainer","NumpadValueWrapper","NumpadValue","NumpadButtonContainer","NumpadButtonValueContainer","NumpadButtonValue","NumpadButton","padding","setBackgroundColor","currentValue","setCurrentValue","handleButtonClick","v","handleSubmit","sign","KeyboardArrowDown","KeyboardArrowUp","NotesContainer","NotesCanvas","canvas","Notes","canvasRef","prevPointerPosition","canvasSize","setCanvasSize","updateCanvasSize","getBoundingClientRect","canvasProps","onPointerMove","ctx","getContext","pressure","buttons","clientX","clientY","x","y","lineThickness","beginPath","moveTo","lineTo","lineWidth","stroke","onPointerUp","RootComponentContainer","RootComponentWrapper","ContentContainer","ListAndNumpadContainer","DividedListContainer","DividedListWrapper","DividedListSublistContainer","Divider","marginTopOverride","marginBottomOverride","DividedList","titles","Typography","React","cloneElement","child","SavedCharacterListItemContainer","Grow","updateCharacterMaxHp","deleteCharacter","setMaxHp","isDialogOpen","setIsDialogOpen","closeConfirmationDialog","Paper","elevation","IconButton","Delete","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","isNewCharacterDialogOpen","setIsNewCharacterDailogOpen","characterURL","setCharacterURL","characterMaxHitPoints","setCharacterMaxHitPoints","closeNewCharacterDialog","margin","disabled","SavedNPCListItemContainer","updateNPCSafe","n","isEditDialogOpen","setIsEditDialogOpen","isDeleteConfirmationDialogOpen","setIsDeleteConfirmationDialogOpen","NPCName","setNPCName","NPCMaxHitPoints","setNPCMaxHitPoints","NPCAvatarUrl","setNPCAvatarUrl","closeEditDialog","closeDeleteConfirmationDialog","Edit","addNPCSafe","isNewNPCDialogOpen","setIsNewNPCDialogOpen","closeNewNPCDialog","NewEncCharacterListItemContainer","addCharacterToEncounter","removeCharacterFromEncounter","setInitiative","isCharacterSelected","Object","some","k","savedInitiative","textFieldProps","initiativeInt","Checkbox","checked","flexGrow","NewEncNPCListItemContainer","NewEncNPCCounter","addNPCToEncounter","removeNPCFromEncounter","addedNPCCount","count","encNpc","handleRemoveClick","handleAddClick","i","size","Remove","Add","TextNotesContainer","rows","TextNotesTextFieldWrapper","updateTextNotes","notesValue","multiline","Image","opacity","AnimatedImage","transitionDuration","firstImageRef","secondImageRef","setOpacity","firstImageSrc","setFirstImageSrc","secondImageSrc","setSecondImageSrc","firstImage","secondImage","timeoutId","requestAnimationFrame","clearTimeout","isErrorDialogOpen","errorMessage","closeErrorDialog","resetEncounter","createEncounter","isCharacterDialogOpen","setIsCharacterDialogOpen","isNewEncounterDialogOpen","setIsNewEncounterDialogOpen","isCreatingNewEncounter","setIsCreatingNewEncounter","isFullscreen","setIsFullscreen","isKeyboardMode","setIsKeyboardMode","canNewEncounterBeCreated","allCharactersHaveInitiative","id2","allNpcsHaveInitiative","currentBackgroundUrl","currentCharacter","largeBackdropAvatarUrl","closeCharacterDialog","closeNewEncounterDialog","event","MoreVert","flex","title","Send","disableElevation","endIcon","MenuItem","People","marginRight","HighlightOff","document","exitFullscreen","element","documentElement","requestFullscreen","toggleFullscreen","FullscreenExit","Fullscreen","TouchApp","Keyboard","Close","marginLeft","SavedNPCsList","maxWidth","typography","fontFamily","values","xs","sm","md","lg","xl","App","loading","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.46501436.chunk.js","sourcesContent":["import axios from 'axios';\nimport { DnDBeyondCharacter } from './types';\n\nexport interface GetCharacterStatsProps {\n    characterId: string;\n}\n\nexport interface CharacterStats {\n    currentHp: number;\n    maxHp: number;\n    tempHp: number;\n    armorClass: number;\n    passivePerception: number;\n}\n\nconst getCharacterStats = async ({ characterId }: GetCharacterStatsProps): Promise<DnDBeyondCharacter> => {\n    const jsonUrl = `https://www.dndbeyond.com/character/${characterId}/json`;\n\n    const response = await axios({ method: 'GET', url: jsonUrl, withCredentials: false });\n    return response.data as DnDBeyondCharacter;\n};\n\nexport default getCharacterStats;\n","import React from 'react';\r\nimport { AxiosError } from 'axios';\r\nimport { Link } from '@material-ui/core';\r\n\r\nexport const getRequestErrorMessage = (error: AxiosError): JSX.Element => {\r\n    if (error.response) {\r\n        switch (error.response.status) {\r\n        case 404:\r\n            return (\r\n                <React.Fragment>\r\n                    Invalid character URL, page not found. Make sure that the ID is correct and that character privacy is set to \"Public\".\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n        \r\n        case 403:\r\n            return (\r\n                <React.Fragment>\r\n                    D&D Beyond blocked a request because it thinks I'm a robot. Opening <Link href=\"https://www.dndbeyond.com/\">dndbeyond.com</Link> in Incognito mode and passing the captcha there usually helps.\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n\r\n        default:\r\n            return (\r\n                <React.Fragment>\r\n                    Request was unsuccessful. Most likely your browser is blocking Cross-Origin requests (CORS). Make sure you have a CORS-allowing extension installed or disable D&D Beyond integration in settings.\r\n                    <br /><br />\r\n                    Error message: {error.message}\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            Request was unsuccessful. Most likely your browser is blocking Cross-Origin requests (CORS). Make sure you have a CORS-allowing extension installed or disable D&D Beyond integration in settings.\r\n            <br /><br />\r\n            Error message: {error.message}\r\n        </React.Fragment>\r\n    );\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n} from './types';\r\n\r\nexport const openErrorDialog = (message: JSX.Element) => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: message,\r\n});\r\n\r\nexport const closeErrorDialog = () => ({\r\n    type: ERROR_DIALOG_CLOSED,\r\n});\r\n\r\nexport const openCorsDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Cors blah blah',\r\n});\r\n\r\nexport const openCaptchaDialog = () => ({\r\n    type: ERROR_DIALOG_OPENED,\r\n    payload: 'Captcha kekaptcha',\r\n});\r\n","export const CORS_DIALOG_OPENED = 'CORS_DIALOG_OPENED';\r\nexport const CORS_DIALOG_CLOSED = 'CORS_DIALOG_CLOSED';\r\nexport const CAPTCHA_DIALOG_OPENED = 'CAPTCHA_DIALOG_OPENED';\r\nexport const CAPTCHA_DIALOG_CLOSED = 'CAPTCHA_DIALOG_CLOSED';\r\nexport const ERROR_DIALOG_OPENED = 'ERROR_DIALOG_OPENED';\r\nexport const ERROR_DIALOG_CLOSED = 'ERROR_DIALOG_CLOSED';\r\n\r\nexport interface CorsDialogOpenedAction {\r\n    type: typeof CORS_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CorsDialogClosedAction {\r\n    type: typeof CORS_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface CaptchaDialogOpenedAction {\r\n    type: typeof CAPTCHA_DIALOG_OPENED;\r\n}\r\n\r\nexport interface CaptchaDialogClosedAction {\r\n    type: typeof CAPTCHA_DIALOG_CLOSED;\r\n}\r\n\r\nexport interface ErrorDialogOpenedAction {\r\n    type: typeof ERROR_DIALOG_OPENED;\r\n    payload: JSX.Element;\r\n}\r\n\r\nexport interface ErrorDialogClosedAction {\r\n    type: typeof ERROR_DIALOG_CLOSED;\r\n}\r\n\r\nexport type UIActionType = CorsDialogOpenedAction | CorsDialogClosedAction | CaptchaDialogOpenedAction | CaptchaDialogClosedAction | ErrorDialogOpenedAction | ErrorDialogClosedAction;\r\n","import { Dispatch } from 'redux';\r\nimport { getCharacterStats } from '../../../helpers/dnd-beyond';\r\nimport { getRequestErrorMessage } from '../../../helpers/getRequestErrorMessage';\r\nimport { State, Character } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport { CHARACTER_ADDED, CHARACTER_UPDATED, CHARACTER_MAX_HP_UPDATED, CHARACTER_FETCH_FAILED, CHARACTER_ALREADY_EXISTS, CHARACTER_DELETED } from './types';\r\n\r\nexport const addCharacterByUrl = (url: string, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const characterId = url.split('/')[url.split('/').length - 1];\r\n    const { characters } = getState();\r\n    if (characters && characters.every(c => c.id.toString() !== characterId)) {\r\n        getCharacterStats({ characterId }).then(\r\n            stats => {\r\n                const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                const character: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                dispatch(addCharacter(character));\r\n            },\r\n            (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n        );\r\n    } else {\r\n        dispatch(updateCharacterById(parseInt(characterId), maxHitPoints));\r\n    }\r\n};\r\n\r\nexport const updateCharacterById = (id: number, maxHitPoints: number) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { characters } = getState();\r\n    if (characters) {\r\n        const character = characters.find(c => c.id === id);\r\n        if (character) {\r\n            getCharacterStats({ characterId: id.toString() }).then(\r\n                stats => {\r\n                    const { id, name, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop } = stats;\r\n                    const updatedCharacter: Character = { id, name, maxHitPoints, removedHitPoints, temporaryHitPoints, deathSaves, avatarUrl, themeColor, defaultBackdrop, };\r\n                    dispatch(updateCharacter(id, updatedCharacter));\r\n                },\r\n                (error) => dispatch(openErrorDialog(getRequestErrorMessage(error))),\r\n            );\r\n        } else {\r\n            dispatch(addCharacterByUrl(id.toString(), maxHitPoints));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addCharacter = (character: Character) => ({\r\n    type: CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const updateCharacter = (id: number, character: Character) => ({\r\n    type: CHARACTER_UPDATED,\r\n    payload: { id, character },\r\n});\r\n\r\nexport const updateCharacterMaxHp = (id: number, maxHp: number) => ({\r\n    type: CHARACTER_MAX_HP_UPDATED,\r\n    payload: { id, maxHp },\r\n}); \r\n\r\nexport const deleteCharacter = (id: number) => ({\r\n    type: CHARACTER_DELETED,\r\n    payload: { id },\r\n});\r\n\r\nexport const characterFetchFailed = (error: string) => ({\r\n    type: CHARACTER_FETCH_FAILED,\r\n    error,\r\n});\r\n\r\nexport const characterAlreadyExists = () => ({\r\n    type: CHARACTER_ALREADY_EXISTS,\r\n});\r\n","import { Character } from '../../types';\r\n\r\nexport const CHARACTER_ADDED = 'CHARACTER_ADDED';\r\nexport const CHARACTER_UPDATED = 'CHARACTER_UPDATED';\r\nexport const CHARACTER_MAX_HP_UPDATED = 'CHARACTER_MAX_HP_UPDATED';\r\nexport const CHARACTER_DELETED = 'CHARACTER_DELETED';\r\n\r\nexport const CHARACTER_FETCH_FAILED = 'CHARACTER_FETCH_FAILED';\r\nexport const CHARACTER_ALREADY_EXISTS = 'CHARACTER_ALREADY_EXISTS';\r\n\r\nexport interface CharacterAddedAction {\r\n    type: typeof CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface CharacterUpdatedAction {\r\n    type: typeof CHARACTER_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        character: Character;\r\n    };\r\n}\r\n\r\nexport interface CharacterMaxHpUpdatedAction {\r\n    type: typeof CHARACTER_MAX_HP_UPDATED;\r\n    payload: {\r\n        id: number;\r\n        maxHp: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterDeletedAction {\r\n    type: typeof CHARACTER_DELETED;\r\n    payload: {\r\n        id: number;\r\n    };\r\n}\r\n\r\nexport interface CharacterFetchFailedAction {\r\n    type: typeof CHARACTER_FETCH_FAILED;\r\n    error: string;\r\n}\r\n\r\nexport interface CharacterAlreadyExistsAction {\r\n    type: typeof CHARACTER_ALREADY_EXISTS;\r\n}\r\n\r\nexport type CharacterActionType =\r\n    CharacterAddedAction |\r\n    CharacterUpdatedAction |\r\n    CharacterMaxHpUpdatedAction |\r\n    CharacterDeletedAction | \r\n    CharacterFetchFailedAction |\r\n    CharacterAlreadyExistsAction;\r\n","import { Character } from '../types';\r\nimport {\r\n    CHARACTER_ADDED,\r\n    CHARACTER_UPDATED,\r\n    CHARACTER_MAX_HP_UPDATED,\r\n    CHARACTER_DELETED,\r\n    CHARACTER_FETCH_FAILED,\r\n    CHARACTER_ALREADY_EXISTS,\r\n    CharacterUpdatedAction,\r\n    CharacterMaxHpUpdatedAction,\r\n    CharacterActionType,\r\n    CharacterDeletedAction,\r\n} from '../actions/characters';\r\n\r\nexport type CharactersState = Character[];\r\n\r\nconst initialState: CharactersState = [];\r\n\r\nconst updateCharacterById = (state: CharactersState, action: CharacterUpdatedAction) => {\r\n    const { id, character } = action.payload;\r\n    const prevCharacter = state.find(c => c.id === id);\r\n    if (prevCharacter) {\r\n        const index = state.indexOf(prevCharacter);\r\n        return [...state.slice(0, index), character, ...state.slice(index + 1)];\r\n    }\r\n    return [...state, character];\r\n};\r\n\r\nconst updateMaxHpById = (state: CharactersState, action: CharacterMaxHpUpdatedAction) => {\r\n    const { id, maxHp } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), { ...character, maxHitPoints: maxHp }, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst deleteById = (state: CharactersState, action: CharacterDeletedAction) => {\r\n    const { id } = action.payload;\r\n    const character = state.find(c => c.id === id);\r\n    if (character) {\r\n        const index = state.indexOf(character);\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const characters = (state = initialState, action: CharacterActionType) => {\r\n    switch (action.type) {\r\n    case CHARACTER_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case CHARACTER_UPDATED:\r\n        return updateCharacterById(state, action);\r\n\r\n    case CHARACTER_MAX_HP_UPDATED:\r\n        return updateMaxHpById(state, action);\r\n\r\n    case CHARACTER_DELETED:\r\n        return deleteById(state, action);\r\n\r\n    case CHARACTER_ALREADY_EXISTS:\r\n    case CHARACTER_FETCH_FAILED:\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { NPC, State } from '../../types';\r\nimport { openErrorDialog } from '../ui';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n} from './types';\r\n\r\nexport const addNPCSafe = (npc: NPC) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { npcs } = getState();\r\n    if (npcs && npcs.find(n => n.name === npc.name)) {\r\n        dispatch(openErrorDialog(<>NPC with this name already exists.</>));\r\n    } else {\r\n        dispatch(addNPC(npc));\r\n    }\r\n};\r\n\r\nexport const addNPC = (npc: NPC) => ({\r\n    type: NPC_ADDED,\r\n    payload: npc,\r\n});\r\n\r\nexport const deleteNPC = (npc: NPC) => ({\r\n    type: NPC_DELETED,\r\n    payload: npc,\r\n});\r\n\r\nexport interface UpdateNPCProps {\r\n    originalNPC: NPC;\r\n    updatedNPC: NPC;\r\n}\r\n\r\nexport const updateNPCSafe = (props: UpdateNPCProps) => (dispatch: Dispatch<any>, getState: () => State) => {\r\n    const { npcs } = getState();\r\n    const { originalNPC, updatedNPC } = props;\r\n    if (npcs && (originalNPC.name !== updatedNPC.name) && npcs.find(n => n.name === updatedNPC.name)) {\r\n        dispatch(openErrorDialog(<>NPC with this name already exists.</>));\r\n    } else {\r\n        dispatch(updateNPC(props));\r\n    }\r\n};\r\n\r\nexport const updateNPC = (props: UpdateNPCProps) => ({\r\n    type: NPC_UPDATED,\r\n    payload: props,\r\n});\r\n","import { NPC } from '../../types';\r\n\r\nexport const NPC_ADDED = 'NPC_ADDED';\r\nexport const NPC_DELETED = 'NPC_DELETED';\r\nexport const NPC_UPDATED = 'NPC_UPDATED';\r\n\r\nexport interface NPCAddedActionType {\r\n    type: typeof NPC_ADDED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCDeletedActionType {\r\n    type: typeof NPC_DELETED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface NPCUpdatedActionType {\r\n    type: typeof NPC_UPDATED;\r\n    payload: { \r\n        originalNPC: NPC;\r\n        updatedNPC: NPC;\r\n    };\r\n}\r\n\r\nexport type NPCActionType = NPCAddedActionType | NPCDeletedActionType | NPCUpdatedActionType;\r\n","import { NPC } from '../types';\r\nimport {\r\n    NPC_ADDED,\r\n    NPC_DELETED,\r\n    NPC_UPDATED,\r\n    NPCActionType,\r\n    NPCDeletedActionType,\r\n    NPCUpdatedActionType,\r\n} from '../actions/npcs';\r\n\r\nexport type NPCState = NPC[];\r\n\r\nconst initialState: NPCState = [];\r\n\r\nconst deleteNPC = (state: NPCState, action: NPCDeletedActionType) => {\r\n    const { payload: npc } = action;\r\n    const index = state.indexOf(npc);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nconst updateNPC = (state: NPCState, action: NPCUpdatedActionType) => {\r\n    const { payload: { originalNPC, updatedNPC } } = action;\r\n    const index = state.indexOf(originalNPC);\r\n    if (index !== -1) {\r\n        return [...state.slice(0, index), updatedNPC, ...state.slice(index + 1)];\r\n    }\r\n    return [...state];\r\n};\r\n\r\nexport const npcs = (state = initialState, action: NPCActionType) => {\r\n    switch (action.type) {\r\n    case NPC_ADDED:\r\n        return [...state, action.payload];\r\n\r\n    case NPC_DELETED:\r\n        return deleteNPC(state, action);\r\n\r\n    case NPC_UPDATED:\r\n        return updateNPC(state, action);\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import {\r\n    ERROR_DIALOG_OPENED,\r\n    ERROR_DIALOG_CLOSED,\r\n    UIActionType,\r\n} from '../actions/ui';\r\n\r\nexport type UIState = {\r\n    errorDialog: {\r\n        isOpen: boolean;\r\n        message?: JSX.Element;\r\n    };\r\n};\r\n\r\nconst initialState: UIState = { \r\n    errorDialog: {\r\n        isOpen: false,\r\n    },\r\n};\r\n\r\nexport const ui = (state = initialState, action: UIActionType) => {\r\n    switch (action.type) {\r\n    case ERROR_DIALOG_OPENED:\r\n        if (!state.errorDialog.isOpen) {\r\n            return {...state, errorDialog: { isOpen: true, message: action.payload }};\r\n        }\r\n        return state;\r\n\r\n    case ERROR_DIALOG_CLOSED:\r\n        return {...state, errorDialog: { isOpen: false, message: state.errorDialog.message }};\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","import { Character, NPC } from '../../types';\r\nimport { ENC_CHARACTER_ADDED, ENC_NPC_ADDED, ENC_CHARACTER_REMOVED, ENC_NPC_REMOVED, ENC_RESET, ENC_CHARACTER_INITIATIVE_UPDATED, ENC_NPC_INITIATIVE_UPDATED, ENC_CREATED, ENC_NEXT_TURN, ENC_PREV_TURN, ENC_ENTITY_SELECTED, ENC_NPC_HIT_POINTS_UPDATED, ENC_TEXT_NOTES_UPDATED } from './types';\r\n\r\nexport const addCharacterToEncounter = (character: Character) => ({\r\n    type: ENC_CHARACTER_ADDED,\r\n    payload: character,\r\n});\r\n\r\nexport const addNPCToEncounter = (npc: NPC) => ({\r\n    type: ENC_NPC_ADDED,\r\n    payload: npc,\r\n});\r\n\r\nexport const removeCharacterFromEncounter = (character: Character) => ({\r\n    type: ENC_CHARACTER_REMOVED,\r\n    payload: character,\r\n});\r\n\r\nexport const removeNPCFromEncounter = (npc: NPC) => ({\r\n    type: ENC_NPC_REMOVED,\r\n    payload: npc,\r\n});\r\n\r\nexport const updateCharacterInitiative = (character: Character, initiative: number) => ({\r\n    type: ENC_CHARACTER_INITIATIVE_UPDATED,\r\n    payload: { character, initiative },\r\n});\r\n\r\nexport const updateNPCInitiative = (npc: NPC, initiative: number) => ({\r\n    type: ENC_NPC_INITIATIVE_UPDATED,\r\n    payload: { npc, initiative },\r\n});\r\n\r\nexport const resetEncounter = () => ({\r\n    type: ENC_RESET,\r\n});\r\n\r\nexport const createEncounter = () => ({\r\n    type: ENC_CREATED,\r\n});\r\n\r\nexport const nextTurn = () => ({\r\n    type: ENC_NEXT_TURN,\r\n});\r\n\r\nexport const prevTurn = () => ({\r\n    type: ENC_PREV_TURN,\r\n});\r\n\r\nexport const selectEntity = (key: number | null) => ({\r\n    type: ENC_ENTITY_SELECTED,\r\n    payload: { key },\r\n});\r\n\r\nexport const updateNPCHitPoints = (key: number, update: number, temp = 0) => ({\r\n    type: ENC_NPC_HIT_POINTS_UPDATED,\r\n    payload: { key, update, temp },\r\n});\r\n\r\nexport const updateTextNotes = (key: number, text: string) => ({\r\n    type: ENC_TEXT_NOTES_UPDATED,\r\n    payload: { key, text },\r\n});\r\n","import { Character, NPC } from '../../types';\r\n\r\nexport const ENC_CHARACTER_ADDED = 'ENC_CHARACTER_ADDED';\r\nexport const ENC_NPC_ADDED = 'ENC_NPC_ADDED';\r\nexport const ENC_CHARACTER_REMOVED = 'ENC_CHARACTER_REMOVED';\r\nexport const ENC_NPC_REMOVED = 'ENC_NPC_REMOVED';\r\nexport const ENC_CHARACTER_INITIATIVE_UPDATED = 'ENC_CHARACTER_INITIATIVE_UPDATED';\r\nexport const ENC_NPC_INITIATIVE_UPDATED = 'ENC_NPC_INITIATIVE_UPDATED';\r\nexport const ENC_RESET = 'ENC_RESET';\r\nexport const ENC_CREATED = 'ENC_CREATED';\r\nexport const ENC_NEXT_TURN = 'ENC_NEXT_TURN';\r\nexport const ENC_PREV_TURN = 'ENC_PREV_TURN';\r\nexport const ENC_ENTITY_SELECTED = 'ENC_ENTITY_SELECTED';\r\nexport const ENC_NPC_HIT_POINTS_UPDATED = 'ENC_NPC_HIT_POINTS_UPDATED';\r\nexport const ENC_TEXT_NOTES_UPDATED = 'ENC_TEXT_NOTES_UPDATED';\r\n\r\nexport interface EncCharacterAddedAction { \r\n    type: typeof ENC_CHARACTER_ADDED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface EncNPCAddedAction {\r\n    type: typeof ENC_NPC_ADDED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface EncCharacterRemovedAction { \r\n    type: typeof ENC_CHARACTER_REMOVED;\r\n    payload: Character;\r\n}\r\n\r\nexport interface EncNPCRemovedAction {\r\n    type: typeof ENC_NPC_REMOVED;\r\n    payload: NPC;\r\n}\r\n\r\nexport interface EncCharacterInitiativeUpdatedAction {\r\n    type: typeof ENC_CHARACTER_INITIATIVE_UPDATED;\r\n    payload: {\r\n        character: Character;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncNPCInitiativeUpdatedAction {\r\n    type: typeof ENC_NPC_INITIATIVE_UPDATED;\r\n    payload: {\r\n        npc: NPC;\r\n        initiative: number;\r\n    };\r\n}\r\n\r\nexport interface EncResetAction {\r\n    type: typeof ENC_RESET;\r\n}\r\n\r\nexport interface EncCreatedAction {\r\n    type: typeof ENC_CREATED;\r\n}\r\n\r\nexport interface EncNextTurnAction {\r\n    type: typeof ENC_NEXT_TURN;\r\n}\r\n\r\nexport interface EncPrevTurnAction {\r\n    type: typeof ENC_PREV_TURN;\r\n}\r\n\r\nexport interface EncEntitySelectedAction {\r\n    type: typeof ENC_ENTITY_SELECTED;\r\n    payload: {\r\n        key: number | null;\r\n    };\r\n}\r\n\r\nexport interface EncNPCHitPointsUpdatedAction {\r\n    type: typeof ENC_NPC_HIT_POINTS_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        update: number,\r\n        temp: number,\r\n    };\r\n}\r\n\r\nexport interface EncTextNotesUpdateAction {\r\n    type: typeof ENC_TEXT_NOTES_UPDATED;\r\n    payload: {\r\n        key: number,\r\n        text: string,\r\n    };\r\n}\r\n\r\nexport type EncounterActionType = EncCharacterAddedAction |\r\n    EncNPCAddedAction |\r\n    EncCharacterRemovedAction |\r\n    EncNPCRemovedAction |\r\n    EncCharacterInitiativeUpdatedAction |\r\n    EncNPCInitiativeUpdatedAction |\r\n    EncResetAction |\r\n    EncCreatedAction |\r\n    EncNextTurnAction |\r\n    EncPrevTurnAction |\r\n    EncEntitySelectedAction |\r\n    EncNPCHitPointsUpdatedAction |\r\n    EncTextNotesUpdateAction;\r\n","import styled, { css } from 'styled-components';\r\nimport { FramePartProps } from './Frame';\r\n\r\nexport const FrameContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    pointer-events: none;\r\n`;\r\n\r\nexport const FrameTopRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\nexport const FrameMiddleRowContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\nexport const FrameBottomRowContainer = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const FrameMiddleFill = styled.div<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n    ${props => props.backgroundColor && `background-color: ${props.backgroundColor};`}\r\n    transition: background-color 0.3s;\r\n`;\r\n\r\nconst CornerBaseStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const TopLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n`;\r\nexport const TopRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateY(180deg);\r\n`;\r\nexport const BottomLeftCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotateX(180deg);\r\n`;\r\nexport const BottomRightCornerStyles = css<FramePartProps>`\r\n    ${CornerBaseStyles}\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nexport const TopStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n`;\r\nexport const BottomStyles = css<FramePartProps>`\r\n    height: ${props => props.height}px;\r\n    transform: rotate(180deg);\r\n`;\r\nexport const LeftStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n`;\r\nexport const RightStyles = css<FramePartProps>`\r\n    width: ${props => props.width}px;\r\n    transform: rotate(180deg);\r\n`;\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M615.2,646.2c-1.7,5.7-12.9,11.7-14.5,11.7H22.5c-1.7,0-12.8-6-14.5-11.7L8.2,19.3V12S16.1,2.3,23.4,1.4H599.80005c7.3.8,15.1,10.6,15.1,10.6v7.3Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M611.9,0H11L0,11.5v637L11,660H612l11-11.5V11.5ZM3,12.8l9.2-9.6h5.9A25.8384,25.8384,0,0,0,7,12.9H6.9v.2A36.38553,36.38553,0,0,0,3,21.7ZM3,26.9A42.92655,42.92655,0,0,1,6.9,15.7V644.3a13.90069,13.90069,0,0,1-1.1-2.1,51.50646,51.50646,0,0,1-2.9-9L3,26.9Zm9.2,629.9L3,647.2v-8.9a40.90524,40.90524,0,0,0,3.9,8.6v.2H7a24.86426,24.86426,0,0,0,11.1,9.8H12.2Zm10.1,0A22.56646,22.56646,0,0,1,8.6,647V13A23.74954,23.74954,0,0,1,22.4,3.1H600.6a22.56647,22.56647,0,0,1,13.7,9.8v634a23.74956,23.74956,0,0,1-13.8,9.9Zm597.6-9.6-9.2,9.6h-5.9a24.86437,24.86437,0,0,0,11.1-9.8h.1v-.2a36.38635,36.38635,0,0,0,3.9-8.6l.00006,9Zm0-14.1a41.717,41.717,0,0,1-3.9,11.2V15.7a13.89825,13.89825,0,0,1,1.1,2.1,51.50837,51.50837,0,0,1,2.9,9l-.1,606.3Zm0-611.4a40.9054,40.9054,0,0,0-3.9-8.6v-.2h-.1a24.86433,24.86433,0,0,0-11.1-9.8h5.9l9.2,9.6-.00007,9Z\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const SquareCorner = getSquarePart();\r\nexport const SquareSide = getSquarePart('translate(0,-32)');\r\nexport const SquareTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3px solid ${color}`, boxSizing: 'border-box', transition: 'background-color 0.3s' }} />\r\n);\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getScrollPart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor ? <polygon fill={backgroundColor} style={{ zIndex: -2 }} transform={transform} points=\"8 93 337 93 337 2 8 2 8 93\"/> : null}\r\n        <path fill={color} transform={transform} d=\"M344,6.39V4.47h-6.14V0h-2.68s-1.06,1.54-3.91,1.54H12.73C9.88,1.54,8.82,0,8.82,0H6.14V4.47H0V6.39c2.53,0,2.67,4.14,2.67,4.14V81.91S2.53,86,0,86v2H6.14v7H8.82V3.31H335.18V91.69H8.82V95s1.06-1.54,3.91-1.54H331.27c2.84,0,3.9,1.52,3.91,1.54h2.68V88H344V86c-2.53,0-2.67-4.13-2.67-4.13V10.53S341.47,6.39,344,6.39ZM6.27,81.91H4.14V12.12H6.27Zm333.79.48h-2.12V12.61h2.12Z\"/>\r\n    </svg>\r\n);\r\n\r\nexport const ScrollCorner = getScrollPart();\r\nexport const ScrollTop = getScrollPart('translate(-32,0)');\r\nexport const ScrollSide = getScrollPart('translate(0,-32)');\r\n","import React from 'react';\r\nimport { FramePartProps } from '../Frame';\r\n\r\nconst getSquarePart = (transform?: string): React.FC<FramePartProps> => ({\r\n    color,\r\n    backgroundColor,\r\n    width,\r\n    height,\r\n    className\r\n}) => (\r\n    <svg className={className} data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox={`0 0 ${width} ${height}`}>\r\n        {backgroundColor\r\n            ? (\r\n                <path style={{ fill: backgroundColor, zIndex: -1, transition: 'fill 0.3s' }} transform={transform}\r\n                    d=\"M275.08,719a32.47,32.47,0,0,0-1.23-4.29c-1.71-4.36-1.13-582.66-1.13-582.66s0-30.43-.58-49c-.36-11.85,1.72-26.54,3.28-35.6a4,4,0,0,1-1.49-1.64c-1.7-3.61-2.41-7.49-1-11.35a6.27,6.27,0,0,1,.93-1.69c-.7-3.15-.33-6.48-1.3-9.54a42.76,42.76,0,0,0-3.54-7,18.66,18.66,0,0,0-5-6.37c-2-1.48-4.08-2.5-5.8-4.27-1.74-.72-3.49-1.42-5.2-2.21l-.4-.21H29.41a5.1,5.1,0,0,1-3.58,1.27,5.83,5.83,0,0,1-2.25,1.44L23.19,6,23,6.05c-.42.25-.87.47-1.29.74a7.34,7.34,0,0,0-1.22.84c1-.91-.26.24-.45.41a5.85,5.85,0,0,1-2.83,1.33,52.05,52.05,0,0,0-3.9,4c-4.59,5.47-4.83,13.51-6.24,20.2,0,.14-.08.27-.11.4a11.08,11.08,0,0,1,.29,1.52c-.16-1.2.09.35.14.59q.14.63.3,1.26a21,21,0,0,0,.88,2.57c1.07,2.59-1.17,5.4-3.49,6.15a3.22,3.22,0,0,1-.7.14C5.94,55.14,8.24,70.62,7.86,83c-.58,18.57-.58,49-.58,49s.64,576.13-1,587.33a5.14,5.14,0,0,1,3.07,6,29.15,29.15,0,0,1-2.67,7,4.68,4.68,0,0,1,.85,2.91c-.27,14.38,12.13,22.59,23.77,28.18a5.7,5.7,0,0,1,.88.53h216.9a5.09,5.09,0,0,1,2.84-1.08,4.1,4.1,0,0,1,1.59-1.45c1-.5,2.07-.93,3.12-1.37l.64-.27-.55.24a6.87,6.87,0,0,0,1.29-.6c.22-.11.45-.18.68-.27,1-1,1.86-1.92,2.41-2.37,2.91-2.43,6.23-4.26,7.86-7.81a4.38,4.38,0,0,1,1.74-2c.81-4.9,2.13-9.72,2.58-14.7a5.32,5.32,0,0,1,.57-2c0-.19-.07-.36-.11-.51-.38-1.74-.87-3.44-1.28-5.17A4.8,4.8,0,0,1,275.08,719Z\"\r\n                />\r\n            )\r\n            : null\r\n        }\r\n        <path style={{ fill: color, zIndex: 2, boxShadow: '0 0 20px grey' }} transform={transform}\r\n            d=\"M275.28,654.52v-554c.77-12.76,2.64-38.62,5.52-48.14l.21-.69-.6-.38a21.36,21.36,0,0,1-3.68-3.14,62.8,62.8,0,0,1,2.34-9.56l.12-.34L276.7,10.17l-1.08-.34c-2.52-.8-9.71-4-9.71-8.12V0H15.09V1.71c0,4.13-7,7.26-9.71,8.12l-1.08.34L1.82,38.28l.12.34a64,64,0,0,1,2.34,9.54A21,21,0,0,1,.6,51.32L0,51.7l.21.69C3.09,61.89,5,87.7,5.72,100.48v554C5,667.23,3.09,703.1.21,712.61L0,713.3l.6.38a20.83,20.83,0,0,1,3.68,3.14,61.64,61.64,0,0,1-2.34,9.56l-.12.35,2.48,28.1,1.08.34c2.7.86,9.71,4,9.71,8.12V765H265.91v-1.71c0-4.13,7-7.26,9.71-8.12l1.08-.34,2.48-28.1-.12-.35a64,64,0,0,1-2.34-9.54,21,21,0,0,1,3.68-3.16l.6-.38-.21-.69c-2.88-9.5-4.74-45.31-5.51-58.09m-3.84,73.29s.45,1.07,1,2.61a29.79,29.79,0,0,1-1.33,12.42C268.18,751.6,261,758,250.25,761.58H30.68c-23-7.63-22.8-25.7-22.16-31.09.59-1.63,1.06-2.75,1.09-2.83a12.21,12.21,0,0,0-2.1-9.76c3.38-18.83,1.66-42.81,1.58-43.89V91.12c.09-1.19,1.81-25.21-1.57-44.05a12.41,12.41,0,0,0,2.05-9.88s-.45-1.07-1-2.61A29.8,29.8,0,0,1,9.87,22.16C12.82,13.4,20,7,30.76,3.42H250.32c23.05,7.63,22.8,25.7,22.16,31.09-.59,1.63-1.06,2.75-1.09,2.84a12.19,12.19,0,0,0,2.1,9.75c-3.38,18.83-1.66,42.81-1.58,43.89V673.88c-.09,1.19-1.81,25.21,1.57,44a12.41,12.41,0,0,0-2.05,9.88m7.41-675.3c-1.71,6.15-3,17.57-4,28.45a191.48,191.48,0,0,1,1.5-30.51,23.59,23.59,0,0,0,2.5,2.06m-5.72-14.58c.09-.21,1.13-2.72,2.12-5.82l.51,5.74A61.16,61.16,0,0,0,274,44.4a9.5,9.5,0,0,1-.89-6.47m.42-25.21,1.24,14.07c-.25,1.21-.59,2.48-1,3.69a30.1,30.1,0,0,0-1.55-8.72c-2-6-6.88-13.57-18.42-18.34h8.89c1.25,5.24,8,8.26,10.8,9.3M18.25,3.42h8.88C10.49,10.29,7.46,23.17,7.21,30.61c-.38-1.25-.74-2.56-1-3.82L7.45,12.72c2.79-1,9.55-4.06,10.8-9.3m-13,34.43.51-5.74c1,3.07,2,5.53,2.07,5.66A9.73,9.73,0,0,1,7,44.33a62.24,62.24,0,0,0-1.73-6.48m-.6,12.59A191.42,191.42,0,0,1,6.15,81c-1-10.87-2.29-22.29-4-28.44a21.9,21.9,0,0,0,2.49-2.07M2.15,712.49c1.71-6.15,3-17.57,4-28.44a191.41,191.41,0,0,1-1.5,30.5,23.59,23.59,0,0,0-2.5-2.06m5.72,14.58c-.09.21-1.13,2.72-2.12,5.82l-.51-5.74A60.54,60.54,0,0,0,7,720.6a9.5,9.5,0,0,1,.89,6.47m-.42,25.21L6.21,738.21c.25-1.21.59-2.47,1-3.69a30,30,0,0,0,1.55,8.72c2,6,6.88,13.57,18.42,18.34H18.25c-1.25-5.24-8-8.26-10.8-9.3m255.3,9.3h-8.88c16.64-6.86,19.67-19.75,19.92-27.19.38,1.26.74,2.56,1,3.82l-1.24,14.07c-2.79,1-9.55,4.06-10.8,9.3m13-34.43-.51,5.74c-1-3.08-2-5.53-2.07-5.66a9.73,9.73,0,0,1,.85-6.56,62.24,62.24,0,0,0,1.73,6.48m.6-12.59a191.37,191.37,0,0,1-1.51-30.51c1,10.88,2.29,22.29,4,28.44a21.9,21.9,0,0,0-2.49,2.07\"\r\n        />\r\n    </svg>\r\n);\r\n\r\nexport const FancyCorner = getSquarePart();\r\nexport const FancySide = getSquarePart('translate(0,-100)');\r\nexport const FancyTop: React.FC<FramePartProps> = ({ color, backgroundColor, width, height, className }) => (\r\n    <div className={className} style={{ backgroundColor, width, height, borderTop: `3.5px solid ${color}`, boxSizing: 'border-box' }} />\r\n);\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    FrameContainer,\r\n    FrameTopRowContainer,\r\n    FrameMiddleRowContainer,\r\n    FrameBottomRowContainer,\r\n    FrameMiddleFill,\r\n    TopLeftCornerStyles,\r\n    TopRightCornerStyles,\r\n    BottomLeftCornerStyles,\r\n    BottomRightCornerStyles,\r\n    TopStyles,\r\n    BottomStyles,\r\n    LeftStyles,\r\n    RightStyles,\r\n} from './style';\r\nimport { SquareCorner, SquareTop, SquareSide } from './svg/square';\r\nimport { ScrollCorner, ScrollTop, ScrollSide } from './svg/scroll';\r\nimport { FancyCorner, FancyTop, FancySide } from './svg/fancy';\r\n\r\nexport interface FrameProps {\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    className?: string;\r\n    forceUpdateProp?: any;\r\n}\r\n\r\nexport interface FrameFactoryProps {\r\n    partSize: number;\r\n    Corner: React.ComponentType<FramePartProps>;\r\n    Top: React.ComponentType<FramePartProps>;\r\n    Side: React.ComponentType<FramePartProps>;\r\n}\r\n\r\nexport interface FramePartProps extends FrameProps {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nconst frameFactory = ({\r\n    partSize,\r\n    Corner,\r\n    Top,\r\n    Side,\r\n}: FrameFactoryProps) => {\r\n    const FrameTopLeftCorner = styled(Corner)`${TopLeftCornerStyles}`;\r\n    const FrameTopRightCorner = styled(Corner)`${TopRightCornerStyles}`;\r\n    const FrameBottomLeftCorner = styled(Corner)`${BottomLeftCornerStyles}`;\r\n    const FrameBottomRightCorner = styled(Corner)`${BottomRightCornerStyles}`;\r\n    const FrameTop = styled(Top)`${TopStyles}`;\r\n    const FrameBottom = styled(Top)`${BottomStyles}`;\r\n    const FrameLeft = styled(Side)`${LeftStyles}`;\r\n    const FrameRight = styled(Side)`${RightStyles}`;\r\n\r\n    const Frame: React.FC<FrameProps> = ({ color = '#b13735', backgroundColor, className, forceUpdateProp }) => {\r\n        const containerRef = useRef<HTMLDivElement | null>(null);\r\n\r\n        const [topPartWidth, setTopPartWidth] = useState<number>(partSize);\r\n        const [sidePartHeight, setSidePartHeight] = useState<number>(partSize);\r\n\r\n        useEffect(() => {\r\n            window.addEventListener('resize', handleResize);\r\n            return () => window.removeEventListener('resize', handleResize);\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            handleResize();\r\n        }, [containerRef, forceUpdateProp]);\r\n\r\n        const handleResize = () => {\r\n            const { current: container } = containerRef;\r\n            if (container) {\r\n                setTopPartWidth(Math.max(container.clientWidth - partSize * 2, 0));\r\n                setSidePartHeight(Math.max(container.clientHeight - partSize * 2, 0));\r\n            }\r\n        };\r\n\r\n        const framePartProps: FramePartProps = { color, backgroundColor, width: partSize, height: partSize };\r\n\r\n        return (\r\n            <FrameContainer ref={containerRef} className={className}>\r\n                {containerRef.current\r\n                    ? (\r\n                        <React.Fragment>\r\n                            <FrameTopRowContainer>\r\n                                <FrameTopLeftCorner {...framePartProps} />\r\n                                <FrameTop {...framePartProps} width={topPartWidth} />\r\n                                <FrameTopRightCorner {...framePartProps} />\r\n                            </FrameTopRowContainer>\r\n                            <FrameMiddleRowContainer>\r\n                                <FrameLeft {...framePartProps} height={sidePartHeight} />\r\n                                <FrameMiddleFill {...framePartProps} height={sidePartHeight} width={topPartWidth} />\r\n                                <FrameRight {...framePartProps} height={sidePartHeight} />\r\n                            </FrameMiddleRowContainer>\r\n                            <FrameBottomRowContainer>\r\n                                <FrameBottomLeftCorner {...framePartProps} />\r\n                                <FrameBottom {...framePartProps} width={topPartWidth} />\r\n                                <FrameBottomRightCorner {...framePartProps} />\r\n                            </FrameBottomRowContainer>\r\n                        </React.Fragment>\r\n                    )\r\n                    : null\r\n                }\r\n            </FrameContainer>\r\n        );\r\n    };\r\n\r\n    return Frame;\r\n};\r\n\r\nexport const SquareFrame = frameFactory({ partSize: 32, Corner: SquareCorner, Top: SquareTop, Side: SquareSide });\r\nexport const ScrollFrame = frameFactory({ partSize: 32, Corner: ScrollCorner, Top: ScrollTop, Side: ScrollSide });\r\nexport const FancyFrame = frameFactory({ partSize: 100, Corner: FancyCorner, Top: FancyTop, Side: FancySide });\r\n\r\nexport default frameFactory;\r\n","import styled from 'styled-components';\r\nimport { Avatar as AvatarMui } from '@material-ui/core';\r\n\r\ninterface Multisize {\r\n    small?: boolean;\r\n}\r\n\r\nexport const EntityListItemScrollContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '56' : '80'}px;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport const EntityListItemContainer = styled.div`\r\n    position: relative;\r\n    height: 100%;\r\n`;\r\n\r\nexport const EntityListItemWrapper = styled.div<Multisize & { isSelected?: boolean }>`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    user-select: none;\r\n\r\n    ${props => props.small && `\r\n        transition: 300ms;\r\n        border-radius: 4px;\r\n        padding-left: 0;\r\n        ${props.isSelected ? `\r\n            background-color: #ddd;\r\n            box-shadow: 0px 3px 3px -2px rgba(0,0,0,0.4), 0px 3px 4px 0px rgba(0,0,0,0.24), 0px 1px 8px 0px rgba(0,0,0,0.18);\r\n        ` : `\r\n            background-color: white;\r\n            box-shadow: 0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12);\r\n        `}\r\n    `}\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div<Multisize>`\r\n    ${props => props.small ? `\r\n        width: 40px;\r\n        height: 40px;\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n    ` : `\r\n        width: 60px;\r\n        height: 60px;\r\n        min-width: 60px;\r\n        min-height: 60px;\r\n    `}\r\n    margin: 0 8px;\r\n`;\r\n\r\nexport const Avatar = styled(AvatarMui)`\r\n    && {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const NameAndSavesContainer = styled.div<Multisize>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    margin-right: 8px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport const Name = styled.div<Multisize>`\r\n    font-size: ${props => props.small ? '18' : '24'}px;\r\n    line-height: ${props => props.small ? '18' : '24'}px;\r\n`;\r\n\r\nexport const SavesContainer = styled.div<Multisize>`\r\n    height: 20px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const HitPointsContainer = styled.div<Multisize & { onClick?: (e: React.MouseEvent<HTMLElement>) => void }>`\r\n    height: ${props => props.small ? '40' : '64'}px;\r\n    width: ${props => props.small ? '144' : '200'}px;\r\n    margin-left: auto;\r\n    margin-right: ${props => props.small ? '8' : '16'}px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    ${props => props.onClick ? 'cursor: pointer;' : ''}\r\n`;\r\n\r\nexport const HitPoints = styled.div<{ width: number } & Multisize>`\r\n    font-size: ${props => props.small ? '20' : '32'}px;\r\n    line-height: ${props => props.small ? '20' : '32'}px;\r\n    width: ${props => props.width}px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const HitPointMenuContentWrapper = styled.div<Multisize>`\r\n    padding: 0 8px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const HitPointMenuButtonWrapper = styled.div`\r\n    padding-top: 16px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    & > *:not(:last-child) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n","import React, { useEffect, useMemo, useState, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Menu, TextField, Button, ThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport { DeathSaves, State } from '../../redux/types';\r\nimport { updateCharacterById } from '../../redux/actions/characters';\r\nimport { selectEntity, updateNPCHitPoints } from '../../redux/actions/encounter';\r\nimport { SquareFrame } from '../Frame';\r\nimport {\r\n    EntityListItemScrollContainer,\r\n    EntityListItemContainer,\r\n    EntityListItemWrapper,\r\n    NameAndSavesContainer,\r\n    Avatar,\r\n    Name,\r\n    SavesContainer,\r\n    HitPointsContainer,\r\n    HitPoints,\r\n    AvatarWrapper,\r\n    HitPointMenuContentWrapper,\r\n    HitPointMenuButtonWrapper,\r\n} from './style';\r\n\r\ninterface StateProps {\r\n    selectedKey: number | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateCharacterById: (id: number, maxHitPoints: number) => void;\r\n    selectEntity: typeof selectEntity;\r\n    updateNPCHitPoints: typeof updateNPCHitPoints;\r\n}\r\n\r\nexport enum EntityType {\r\n    CHARACTER = 'CHARACTER',\r\n    NPC = 'NPC',\r\n}\r\n\r\nexport interface EntityListItemProps {\r\n    entityKey: number;\r\n    type: EntityType;\r\n    name: string;\r\n\r\n    maxHitPoints: number;\r\n    removedHitPoints?: number;\r\n    temporaryHitPoints?: number;\r\n    deathSaves?: DeathSaves;\r\n\r\n    id?: number;\r\n    avatarUrl?: string;\r\n    color?: string;\r\n}\r\n\r\nconst EntityListItem: React.FC<EntityListItemProps & StateProps & DispatchProps> = ({\r\n    id,\r\n    entityKey,\r\n    type,\r\n    name,\r\n    maxHitPoints,\r\n    removedHitPoints = 0, \r\n    temporaryHitPoints = 0,\r\n    deathSaves,\r\n    avatarUrl,\r\n    color,\r\n    selectedKey,\r\n    updateCharacterById,\r\n    selectEntity,\r\n    updateNPCHitPoints,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const menuRef = useRef<HTMLElement | null>(null);\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n    const [menuInputValue, setMenuInputValue] = useState('');\r\n\r\n    const isSelected = useMemo(() => selectedKey === entityKey, [selectedKey, entityKey]);\r\n\r\n    useEffect(() => {\r\n        if (type === EntityType.CHARACTER && id) {\r\n            updateCharacterById(id, maxHitPoints);\r\n        }\r\n    }, [type, id, maxHitPoints, updateCharacterById]);\r\n\r\n    const openMenu = (e: React.MouseEvent<HTMLElement>) => {\r\n        const target = e.currentTarget;\r\n        if (small) {\r\n            setMenuAnchorElement(target);\r\n            setTimeout(() => {\r\n                target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n                if (menuRef.current) {\r\n                    menuRef.current.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n                }\r\n            }, 1000);\r\n        } else {\r\n            setMenuAnchorElement(target);\r\n        }\r\n    };\r\n\r\n    const closeMenu = () => {\r\n        selectEntity(null);\r\n        setMenuAnchorElement(null);\r\n        setMenuInputValue('');\r\n    };\r\n\r\n    const handleMenuInputChange = (e: React.ChangeEvent<HTMLInputElement>) => setMenuInputValue(e.target.value);\r\n\r\n    const handleClick = () => {\r\n        selectEntity(isSelected ? null : entityKey);\r\n    };\r\n\r\n    const handleDamageClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, -Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleTempClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, 0, Math.abs(updateHP));\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    const handleHealClick = () => {\r\n        const updateHP = parseInt(menuInputValue);\r\n        if (!isNaN(updateHP)) {\r\n            updateNPCHitPoints(entityKey, Math.abs(updateHP), 0);\r\n        }\r\n        closeMenu();\r\n    };\r\n\r\n    return (\r\n        <EntityListItemScrollContainer small={small}>\r\n            <EntityListItemContainer onClick={handleClick}>\r\n                {small ? null : <SquareFrame color={type === EntityType.CHARACTER ? color : theme.palette.secondary.main} backgroundColor={isSelected ? '#ddd' : 'white' } />}\r\n                <EntityListItemWrapper small={small} isSelected={isSelected}>\r\n                    <AvatarWrapper small={small}>\r\n                        <Avatar src={avatarUrl} variant=\"rounded\" />\r\n                    </AvatarWrapper>\r\n                    <NameAndSavesContainer small={small}>\r\n                        <Name small={small}>{name}</Name>\r\n                        <SavesContainer small={small} />\r\n                    </NameAndSavesContainer>\r\n                    <HitPointsContainer small={small} onClick={type === EntityType.NPC ? openMenu : undefined}>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints - removedHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 16 : 12} style={{ color: 'grey' }}>/</HitPoints>\r\n                        <HitPoints small={small} width={small ? 64 : 48}>{maxHitPoints}</HitPoints>\r\n                        <HitPoints small={small} width={small ? 48 : 36} style={{ color: 'grey' }}>[{temporaryHitPoints}]</HitPoints>\r\n                    </HitPointsContainer>\r\n                    <Menu ref={menuRef} anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu} style={{ marginTop: small ? '70px' : '80px' }}>\r\n                        <HitPointMenuContentWrapper>\r\n                            <TextField style={{ width: '100%' }} label=\"Hit Points\" type=\"number\" autoFocus value={menuInputValue} onChange={handleMenuInputChange} />\r\n                            <HitPointMenuButtonWrapper>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={handleDamageClick}>Damage</Button>\r\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={handleTempClick}>Temp</Button>\r\n                                <ThemeProvider theme={createMuiTheme({ ...theme, palette: { ...theme.palette, primary: { main: '#08a300' }}})}>\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleHealClick}>Heal</Button>\r\n                                </ThemeProvider>\r\n                            </HitPointMenuButtonWrapper>\r\n                        </HitPointMenuContentWrapper>\r\n                    </Menu>\r\n                </EntityListItemWrapper>\r\n            </EntityListItemContainer>\r\n        </EntityListItemScrollContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    selectedKey: (state.encounter && state.encounter.selectedEntityKey !== null) ? state.encounter.selectedEntityKey : null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateCharacterById, selectEntity, updateNPCHitPoints })(EntityListItem);\r\n","import { keys } from 'lodash/fp';\r\nimport { EncounterState } from '../redux/reducers/encounter';\r\nimport { Character, NPC } from '../redux/types';\r\nimport { EntityType } from '../components/EntityListItem';\r\n\r\nexport interface EntityWithInitiative {\r\n    initiative: number;\r\n    type: EntityType;\r\n    entity: Character | NPC;\r\n    key: number;\r\n}\r\n\r\nexport const sortEntitiesWithInitiative = (encounter: EncounterState | null) => {\r\n    if (!encounter) {\r\n        return [];\r\n    }\r\n\r\n    const { characters, npcs, initiativeById, currentTurnKey } = encounter;\r\n\r\n    let sortedByInitiative: EntityWithInitiative[] = [];\r\n\r\n    keys(characters).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.CHARACTER,\r\n                entity: characters[key],\r\n                key,\r\n            });\r\n        }\r\n    });\r\n\r\n    keys(npcs).forEach(keyString => {\r\n        const key = parseInt(keyString);\r\n        const initiative = initiativeById[key];\r\n        if (initiative) {\r\n            sortedByInitiative.push({\r\n                initiative,\r\n                type: EntityType.NPC,\r\n                entity: npcs[key],\r\n                key,\r\n            });\r\n        }\r\n    });\r\n\r\n    sortedByInitiative.sort((e1, e2) => {\r\n        if (e1.initiative < e2.initiative) {\r\n            return 1;\r\n        } else if (e1.initiative > e2.initiative) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    if (sortedByInitiative.length === 0) {\r\n        return [];\r\n    }\r\n\r\n    while (sortedByInitiative[0].key !== currentTurnKey) {\r\n        sortedByInitiative.push(sortedByInitiative.shift() as EntityWithInitiative);\r\n    }\r\n\r\n    return sortedByInitiative;\r\n};\r\n","import { omit, findKey, filter, reduce, keys } from 'lodash/fp';\r\nimport { Character, NPC } from '../types';\r\nimport {\r\n    ENC_CHARACTER_ADDED,\r\n    ENC_NPC_ADDED,\r\n    ENC_CHARACTER_REMOVED,\r\n    ENC_NPC_REMOVED,\r\n    ENC_CHARACTER_INITIATIVE_UPDATED,\r\n    ENC_NPC_INITIATIVE_UPDATED,\r\n    ENC_RESET,\r\n    ENC_CREATED,\r\n    ENC_NEXT_TURN,\r\n    ENC_PREV_TURN,\r\n    ENC_ENTITY_SELECTED,\r\n    ENC_NPC_HIT_POINTS_UPDATED,\r\n    ENC_TEXT_NOTES_UPDATED,\r\n    EncCharacterAddedAction,\r\n    EncNPCAddedAction,\r\n    EncCharacterRemovedAction,\r\n    EncNPCRemovedAction,\r\n    EncCharacterInitiativeUpdatedAction,\r\n    EncNPCInitiativeUpdatedAction,\r\n    EncNPCHitPointsUpdatedAction,\r\n    EncounterActionType,\r\n} from '../actions/encounter/types';\r\nimport { sortEntitiesWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\n\r\nconst INIT_INITIATIVE = 1000000;\r\n\r\nexport interface EncounterState {\r\n    characters: Record<number, Character>;\r\n    npcs: Record<number, NPC>;\r\n    initiativeById: Record<number, number>;\r\n    currentId: number;\r\n    currentTurnInitiative: number;\r\n    currentTurnKey: number;\r\n    currentRound: number;\r\n    selectedEntityKey: number | null;\r\n    npcHitPoints: Record<number, {\r\n        removedHitPoints: number;\r\n        temporaryHitPoints: number;\r\n    }>;\r\n    textNotesByKey: Record<number, string>;\r\n}\r\n\r\nconst initialState: EncounterState = {\r\n    characters: {},\r\n    npcs: {},\r\n    initiativeById: {},\r\n    currentId: 1,\r\n    currentTurnInitiative: INIT_INITIATIVE,\r\n    currentTurnKey: 0,\r\n    currentRound: 1,\r\n    selectedEntityKey: null,\r\n    npcHitPoints: {},\r\n    textNotesByKey: {},\r\n};\r\n\r\nconst addCharacter = (state: EncounterState, action: EncCharacterAddedAction) => {\r\n    const { characters } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const characterNumber = filter(key => characters[parseInt(key)].name.startsWith(name), keys(characters)).length;\r\n\r\n    if (characterNumber === 0) {\r\n        return {\r\n            ...state,\r\n            characters: { ...state.characters, [state.currentId]: action.payload },\r\n            currentId: state.currentId + 1,\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} \\n` }\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            characters: { ...state.characters, [state.currentId]: {\r\n                ...action.payload,\r\n                name: `${name} #${characterNumber + 1}`,\r\n                textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} #${characterNumber + 1} \\n` }\r\n            }},\r\n            currentId: state.currentId + 1,\r\n        };\r\n    }\r\n};\r\n\r\nconst addNPC = (state: EncounterState, action: EncNPCAddedAction) => {\r\n    const { npcs } = state;\r\n    const { payload: { name } } = action;\r\n\r\n    const npcNumber = filter(key => npcs[parseInt(key)].name.startsWith(name), keys(npcs)).length;\r\n\r\n    if (npcNumber === 0) {\r\n        return {\r\n            ...state,\r\n            npcs: { ...state.npcs, [state.currentId]: action.payload },\r\n            currentId: state.currentId + 1,\r\n            npcHitPoints: { ...state.npcHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 0 } },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} \\n` }\r\n        };\r\n    } else {\r\n        return {\r\n            ...state,\r\n            npcs: { ...state.npcs, [state.currentId]: {\r\n                ...action.payload,\r\n                name: `${name} #${npcNumber + 1}`,\r\n            }},\r\n            currentId: state.currentId + 1,\r\n            npcHitPoints: { ...state.npcHitPoints, [state.currentId]: { removedHitPoints: 0, temporaryHitPoints: 0 } },\r\n            textNotesByKey: { ...state.textNotesByKey, [state.currentId]: `Notes for ${name} #${npcNumber + 1} \\n` }\r\n        };\r\n    }\r\n};\r\n\r\nconst removeCharacter = (state: EncounterState, action: EncCharacterRemovedAction) => {\r\n    const characterKey = findKey((c: Character) => c.id === action.payload.id, state.characters);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        characters: (omit(characterKey, state.characters) || {}) as Record<number, Character>,\r\n        initiativeById: (omit(characterKey, state.initiativeById) || {}) as Record<number, number>,\r\n    };\r\n};\r\n\r\nconst removeNPC = (state: EncounterState, action: EncNPCRemovedAction) => {\r\n    const { npcs } = state;\r\n    const { name } = action.payload;\r\n    const addedNPCsKeys = filter(key => npcs[parseInt(key)].name.startsWith(name), keys(npcs));\r\n\r\n    if (addedNPCsKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    const latestAddedNpc = reduce(\r\n        (accumulator, keyString) => {\r\n            const key = parseInt(keyString);\r\n            const npc = npcs[key];\r\n\r\n            if (npc.name === name) {\r\n                if (accumulator.number < 1) {\r\n                    return { key, number: 1 };\r\n                }\r\n                return accumulator;\r\n            }\r\n\r\n            const splitByHash = npc.name.slice(name.length).split('#');\r\n            const number = parseInt(splitByHash[splitByHash.length - 1]);\r\n\r\n            if (number > accumulator.number) {\r\n                return { key, number };\r\n            }\r\n\r\n            return accumulator;\r\n        },\r\n        {\r\n            key: 0,\r\n            number: -1,\r\n        },\r\n        addedNPCsKeys,\r\n    );\r\n\r\n    return {\r\n        ...state,\r\n        npcs: omit(latestAddedNpc.key, npcs) || {},\r\n    };\r\n};\r\n\r\nconst updateCharacterInitiative = (state: EncounterState, action: EncCharacterInitiativeUpdatedAction) => {\r\n    const { characters, initiativeById } = state;\r\n    const { character, initiative } = action.payload;\r\n\r\n    const characterKey = keys(characters).find(key => characters[parseInt(key)].id === character.id);\r\n    if (!characterKey) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            [characterKey]: initiative,\r\n        },\r\n    };\r\n};\r\n\r\nconst updateNPCInitiative = (state: EncounterState, action: EncNPCInitiativeUpdatedAction) => {\r\n    const { npcs, initiativeById } = state;\r\n    const { npc, initiative } = action.payload;\r\n\r\n    const npcKeys = keys(npcs).filter(key => npcs[parseInt(key)].name.startsWith(npc.name));\r\n    if (npcKeys.length === 0) {\r\n        return state;\r\n    }\r\n\r\n    let npcInitiatives: Record<number, number> = {};\r\n    npcKeys.forEach(key => (npcInitiatives[parseInt(key)] = initiative));\r\n\r\n    return {\r\n        ...state,\r\n        initiativeById: {\r\n            ...initiativeById,\r\n            ...npcInitiatives,\r\n        },\r\n    };\r\n};\r\n\r\nconst recalculateCurrentTurnKey = (state: EncounterState): EncounterState => {\r\n    const { currentTurnInitiative, currentTurnKey, characters, npcs, initiativeById } = state;\r\n    if (currentTurnInitiative === INIT_INITIATIVE) {\r\n        const findMaxInitiative = (maxInitiative: { key: number, initiative: number}, keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative > maxInitiative.initiative) {\r\n                return { key, initiative };\r\n            }\r\n\r\n            return maxInitiative;\r\n        };\r\n        const { key: characterKey, initiative: characterInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(characters));\r\n        const { key: npcKey, initiative: npcInitiative } = reduce(findMaxInitiative, { key: -1, initiative: -100 }, keys(npcs));\r\n\r\n        if (npcInitiative === -100 && characterInitiative === -100) {\r\n            return state;\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            currentTurnInitiative: Math.max(characterInitiative, npcInitiative),\r\n            currentTurnKey: characterInitiative > npcInitiative ? characterKey : npcKey,\r\n        };\r\n    } else {\r\n        const findWithInitiative = (keyString: string) => {\r\n            const key = parseInt(keyString);\r\n            const initiative = initiativeById[key];\r\n            if (initiative && initiative === currentTurnInitiative) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const keyWithInitiative = parseInt(keys(characters).find(findWithInitiative) as string) || parseInt(keys(npcs).find(findWithInitiative) as string);\r\n        if (!isNaN(keyWithInitiative)) {\r\n            return {\r\n                ...state,\r\n                currentTurnKey: keyWithInitiative,\r\n            };\r\n        }\r\n\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    }\r\n};\r\n\r\nconst nextTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: null,\r\n            currentRound: state.currentRound + 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[1];\r\n    let round = state.currentRound;\r\n    if (initiative > sortedEntities[0].initiative) {\r\n        round += 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst prevTurn = (state: EncounterState): EncounterState => {\r\n    const sortedEntities = sortEntitiesWithInitiative(state);\r\n    if (sortedEntities.length < 2) {\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: null,\r\n            currentRound: state.currentRound - 1,\r\n        };\r\n    }\r\n\r\n    const { initiative, key } = sortedEntities[sortedEntities.length - 1];\r\n    let round = state.currentRound;\r\n    if (initiative < sortedEntities[0].initiative) {\r\n        round -= 1;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        currentTurnInitiative: initiative,\r\n        currentTurnKey: key,\r\n        currentRound: round,\r\n    };\r\n};\r\n\r\nconst updateNPCHitPoints = (state: EncounterState, action: EncNPCHitPointsUpdatedAction) => {\r\n    const { key, update, temp } = action.payload;\r\n    const { removedHitPoints, temporaryHitPoints } = state.npcHitPoints[key];\r\n\r\n    let newTemp = temporaryHitPoints;\r\n    if (temp) {\r\n        newTemp = Math.max(0, temporaryHitPoints + temp);\r\n    }\r\n    if (update < 0) {\r\n        newTemp = Math.max(0, temporaryHitPoints + update);\r\n    }\r\n\r\n    let newRemoved = removedHitPoints;\r\n    if (update >= 0) {\r\n        newRemoved = Math.max(0, removedHitPoints - update);\r\n    } else {\r\n        newRemoved = Math.max(0, removedHitPoints - update - Math.min(Math.abs(update), temporaryHitPoints));\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        selectedEntityKey: null,\r\n        npcHitPoints: {\r\n            ...state.npcHitPoints,\r\n            [key]: {\r\n                removedHitPoints: newRemoved,\r\n                temporaryHitPoints: newTemp,\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const encounter = (state = initialState, action: EncounterActionType) => {\r\n    switch (action.type) {\r\n    case ENC_CHARACTER_ADDED:\r\n        return recalculateCurrentTurnKey(addCharacter(state, action));\r\n\r\n    case ENC_NPC_ADDED:\r\n        return recalculateCurrentTurnKey(addNPC(state, action));\r\n\r\n    case ENC_CHARACTER_REMOVED:\r\n        return recalculateCurrentTurnKey(removeCharacter(state, action));\r\n\r\n    case ENC_NPC_REMOVED:\r\n        return recalculateCurrentTurnKey(removeNPC(state, action));\r\n\r\n    case ENC_CHARACTER_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateCharacterInitiative(state, action));\r\n    \r\n    case ENC_NPC_INITIATIVE_UPDATED:\r\n        return recalculateCurrentTurnKey(updateNPCInitiative(state, action));\r\n\r\n    case ENC_RESET:\r\n        return initialState;\r\n\r\n    case ENC_CREATED:\r\n        return recalculateCurrentTurnKey({\r\n            ...state,\r\n            currentTurnInitiative: INIT_INITIATIVE,\r\n        });\r\n    \r\n    case ENC_NEXT_TURN:\r\n        return nextTurn(state);\r\n\r\n    case ENC_PREV_TURN:\r\n        return prevTurn(state);\r\n\r\n    case ENC_ENTITY_SELECTED:\r\n        return {\r\n            ...state,\r\n            selectedEntityKey: action.payload.key,\r\n        };\r\n\r\n    case ENC_NPC_HIT_POINTS_UPDATED:\r\n        return updateNPCHitPoints(state, action);\r\n\r\n    case ENC_TEXT_NOTES_UPDATED:\r\n        return {\r\n            ...state,\r\n            textNotesByKey: {\r\n                ...state.textNotesByKey,\r\n                [action.payload.key]:  action.payload.text,\r\n            },\r\n        };\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { characters } from './characters';\r\nimport { npcs } from './npcs';\r\nimport { ui } from './ui';\r\nimport { encounter } from './encounter';\r\n\r\nconst rootReducer = combineReducers({\r\n    characters,\r\n    npcs,\r\n    ui,\r\n    encounter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, Reducer } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from './reducers';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n    blacklist: ['ui'],\r\n};\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer as Reducer<any, any>), applyMiddleware(thunk));\r\nexport const persistor = persistStore(store);\r\n","import styled from 'styled-components';\r\n\r\nexport const LoadingViewBackground = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #666666;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const LoadingViewImage = styled.img`\r\n    width: 400px;\r\n    max-width: 80%;\r\n`;\r\n\r\nexport const LoadingViewText = styled.div`\r\n    font-family: 'Yeon Sung';\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    color: orange;\r\n`;\r\n","import React from 'react';\r\nimport { LoadingViewBackground, LoadingViewContainer, LoadingViewImage, LoadingViewText } from './style';\r\n\r\nconst LoadingView = () => (\r\n    <LoadingViewBackground>\r\n        <LoadingViewContainer>\r\n            <LoadingViewImage src={`${process.env.PUBLIC_URL}/fire.gif`} />\r\n            <LoadingViewText>Loading</LoadingViewText>\r\n        </LoadingViewContainer>\r\n    </LoadingViewBackground>\r\n);\r\n\r\nexport default LoadingView;\r\n","import styled from 'styled-components';\r\n\r\nexport const NavbarContainer = styled.div`\r\n    width: 100%;\r\n    flex-grow: 1;\r\n    height: 56px;\r\n    min-height: 56px;\r\n`;\r\n","import React from 'react';\r\nimport { AppBar, AppBarProps, Toolbar } from '@material-ui/core';\r\nimport { NavbarContainer } from './style';\r\n\r\nconst Navbar: React.FC<AppBarProps> = ({ children, ...other }) => {\r\n    return (\r\n        <NavbarContainer>\r\n            <AppBar position=\"fixed\" color=\"secondary\" style={{ minHeight: '56px' }} {...other}>\r\n                <Toolbar style={{ minHeight: '56px', paddingLeft: '4px', paddingRight: '10px' }}>\r\n                    {children}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </NavbarContainer>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Tooltip, TooltipProps } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport default withStyles(theme => ({\r\n    tooltip: {\r\n        fontSize: 16,\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    arrow: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}))((props: TooltipProps) => <Tooltip arrow {...props} />);\r\n","import styled, { css } from 'styled-components';\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const EntityListContainer = styled.div<{ fullWidth?: boolean, fullScreen?: boolean } & Multiheight>`\r\n    position: relative;\r\n    ${props => props.fullWidth ? `\r\n        width: 98%;\r\n        height: calc(100% - ${props.fullScreen ? 138 : 100}px);\r\n    ` : `\r\n        width: 50%;\r\n        max-width: 600px;\r\n        height: ${props.short ? '420' : '480'}px;\r\n    `}\r\n`;\r\n\r\nexport const EntityListWrapper = styled.div`\r\n    height: calc(100% - 32px);\r\n    padding: 16px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n\r\n    overflow-y: scroll;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst EntityListFade = css`\r\n    position: absolute;\r\n    left: calc(2%);\r\n    width: 96%;\r\n    border-radius: 16px;\r\n    height: 20px;\r\n`;\r\n\r\nexport const EntityListTopFade = styled.div`\r\n    ${EntityListFade}\r\n    top: 0;\r\n    background: linear-gradient(white, transparent);\r\n`;\r\n\r\nexport const EntityListBottomFade = styled.div`\r\n    ${EntityListFade}\r\n    bottom: 0;\r\n    background: linear-gradient(transparent, white);\r\n`;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport { State, Character } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { sortEntitiesWithInitiative, EntityWithInitiative } from '../../helpers/sortEntitiesWithInitiative';\r\nimport { FancyFrame } from '../Frame';\r\nimport { EntityListItem, EntityType } from '../EntityListItem';\r\nimport { EntityListContainer, EntityListWrapper, EntityListBottomFade, EntityListTopFade } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\nexport interface EntityListProps {\r\n    fullWidth?: boolean;\r\n    fullScreen?: boolean;\r\n    short?: boolean;\r\n}\r\n\r\nconst EntityList: React.FC<EntityListProps & StateProps> = ({ encounter, fullWidth, fullScreen, short }) => {\r\n    const entitiesByInitiative: EntityWithInitiative[] = useMemo(() => sortEntitiesWithInitiative(encounter), [encounter]);\r\n\r\n    return (\r\n        <EntityListContainer fullWidth={fullWidth} fullScreen={fullScreen} short={short}>\r\n            <EntityListWrapper>\r\n                {entitiesByInitiative.map(({ type, entity, key })=> {\r\n                    let entityListItemProps = { key, entityKey: key, type, ...entity };\r\n\r\n                    if (type === EntityType.NPC) {\r\n                        entityListItemProps = {\r\n                            ...entityListItemProps,\r\n                            removedHitPoints: (encounter && encounter.npcHitPoints[key] && encounter.npcHitPoints[key].removedHitPoints) || 0,\r\n                            temporaryHitPoints: (encounter && encounter.npcHitPoints[key] && encounter.npcHitPoints[key].temporaryHitPoints) || 0,\r\n                        };\r\n                    }\r\n\r\n                    const color = ((entity as Character).themeColor && (entity as Character).themeColor?.themeColor) || undefined;\r\n                    return <EntityListItem {...entityListItemProps} color={color} />;\r\n                })}\r\n            </EntityListWrapper>\r\n            <EntityListTopFade />\r\n            <EntityListBottomFade />\r\n            <FancyFrame forceUpdateProp={`${short}${fullWidth}${fullScreen}`} />\r\n        </EntityListContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State): StateProps => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect<StateProps>(mapStateToProps)(EntityList);\r\n","import styled from 'styled-components';\r\n\r\ninterface Multiheight {\r\n    short?: boolean;\r\n}\r\n\r\nexport const NumpadFrameContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '243' : '288'}px;\r\n    height: ${props => props.short ? '420' : '480'}px;\r\n`;\r\n\r\nexport const NumpadContainer = styled.div<Multiheight>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: ${props => props.short ? '211' : '256'}px;\r\n    height: ${props => props.short ? '400' : '460'}px;\r\n    padding: 16px;\r\n    padding-bottom: 0;\r\n\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const NumpadValueContainer = styled.div<Multiheight>`\r\n    width: 100%;\r\n    height: 80px;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const NumpadValueWrapper = styled.div<Multiheight>`\r\n    position: absolute;\r\n    width: calc(100% - 32px);\r\n    height: 80px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadValue = styled.div`\r\n    font-size: 40px;\r\n    line-height: 40px;\r\n    user-select: none;\r\n    z-index: 10;\r\n`;\r\n\r\nexport const NumpadButtonContainer = styled.div<Multiheight>`\r\n    position: relative;\r\n    width: ${props => props.short ? '65' : '80'}px;\r\n    height: ${props => props.short ? '65' : '80'}px;\r\n    margin-bottom: 8px;\r\n\r\n    &:not(:nth-child(3n + 1)) {\r\n        margin-right: 8px;\r\n    }\r\n`;\r\n\r\nexport const NumpadButtonValueContainer = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NumpadButtonValue = styled.div<Multiheight>`\r\n    font-size: ${props => props.short ? '30' : '40'}px;\r\n    line-height: ${props => props.short ? '30' : '40'}px;\r\n    text-align: center;\r\n    user-select: none;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateNPCHitPoints } from '../../redux/actions/encounter';\r\nimport { SquareFrame, ScrollFrame, FancyFrame } from '../Frame';\r\nimport {\r\n    NumpadFrameContainer,\r\n    NumpadContainer,\r\n    NumpadValueContainer,\r\n    NumpadValueWrapper,\r\n    NumpadValue,\r\n    NumpadButtonContainer,\r\n    NumpadButtonValueContainer,\r\n    NumpadButtonValue,\r\n} from './style';\r\n\r\ninterface NumpadButtonProps {\r\n    children: React.ReactNode;\r\n    onClick?: () => void;\r\n    color?: string;\r\n    padding?: string;\r\n    short?: boolean;\r\n}\r\n\r\nconst NumpadButton: React.FC<NumpadButtonProps> = ({ children, padding, color, onClick, short }) => {\r\n    const [backgroundColor, setBackgroundColor] = useState('white');\r\n\r\n    const handleClick = () => {\r\n        if (onClick) {\r\n            onClick();\r\n        }\r\n        setBackgroundColor('#ccc');\r\n        setTimeout(() => setBackgroundColor('white'), 100);\r\n    };\r\n\r\n    return (\r\n        <NumpadButtonContainer onClick={handleClick} short={short}>\r\n            <SquareFrame forceUpdateProp={short} color={color || '#555'} backgroundColor={backgroundColor} />\r\n            <NumpadButtonValueContainer>\r\n                <NumpadButtonValue style={{ padding }} short={short}>{children}</NumpadButtonValue>\r\n            </NumpadButtonValueContainer>\r\n        </NumpadButtonContainer>\r\n    );\r\n};\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateNPCHitPoints: typeof updateNPCHitPoints;\r\n}\r\n\r\nexport interface NumpadProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Numpad = ({ short, encounter, updateNPCHitPoints }: NumpadProps & StateProps & DispatchProps) => {\r\n    const [currentValue, setCurrentValue] = useState(0);\r\n\r\n    const handleValueClick = () => setCurrentValue(0);\r\n    const handleButtonClick = (number: number) => () => setCurrentValue(v => v * 10 + number);\r\n    const handleSubmit = (sign: number) => () => {\r\n        if (encounter && encounter.selectedEntityKey && encounter.npcs[encounter.selectedEntityKey]) {\r\n            updateNPCHitPoints(encounter.selectedEntityKey, sign * currentValue);\r\n        }\r\n\r\n        setCurrentValue(0);\r\n    };\r\n\r\n    return (\r\n        <NumpadFrameContainer short={short}>\r\n            <FancyFrame forceUpdateProp={short} backgroundColor=\"rgba(255, 255, 255, 0.8)\" />\r\n            <NumpadContainer short={short}>\r\n                <NumpadValueContainer onClick={handleValueClick}>\r\n                    <NumpadValueWrapper>\r\n                        <NumpadValue>{currentValue || ''}</NumpadValue>\r\n                        <ScrollFrame color=\"#555\" backgroundColor=\"white\" />\r\n                    </NumpadValueWrapper>\r\n                </NumpadValueContainer>\r\n                <NumpadButton short={short} onClick={handleButtonClick(7)}>7</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(8)}>8</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(9)}>9</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(4)}>4</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(5)}>5</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(6)}>6</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(1)}>1</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(2)}>2</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(3)}>3</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(-1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#b13735'><KeyboardArrowDown fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n                <NumpadButton short={short} onClick={handleButtonClick(0)}>0</NumpadButton>\r\n                <NumpadButton short={short} onClick={handleSubmit(1)} padding={`${short ? 4 : 8}px 0 0 0`} color='#08a300'><KeyboardArrowUp fontSize={short ? 'default' : 'large'} /></NumpadButton>\r\n            </NumpadContainer>\r\n        </NumpadFrameContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateNPCHitPoints })(Numpad);\r\n","import styled from 'styled-components';\r\n\r\nexport const NotesContainer = styled.div<{ short?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.short ? 885 : 920}px;\r\n    height: ${props => props.short ? 220 : 260}px;\r\n    margin-top: 16px;\r\n`;\r\n\r\nexport const NotesCanvas = styled.canvas`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 16px);\r\n    margin: 8px 12px;\r\n    touch-action: none;\r\n`;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { FancyFrame } from '../Frame';\r\nimport { NotesContainer, NotesCanvas } from './style';\r\n\r\nexport interface NotesProps {\r\n    short?: boolean;\r\n}\r\n\r\nconst Notes = ({ short }: NotesProps) => {\r\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\r\n    const prevPointerPosition = useRef<{ x: number, y: number } | null>(null);\r\n\r\n    const [canvasSize, setCanvasSize] = useState<{ width?: number, height?: number }>({});\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', updateCanvasSize);\r\n        return () => window.removeEventListener('resize', updateCanvasSize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateCanvasSize();\r\n    }, [canvasRef]);\r\n\r\n    const updateCanvasSize = () => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const { width, height } = canvas.getBoundingClientRect();\r\n            setCanvasSize({ width, height });\r\n        }\r\n    };\r\n\r\n    const handlePointerMove = (e: React.PointerEvent<HTMLCanvasElement>) => {\r\n        const { current: canvas } = canvasRef;\r\n        if (canvas) {\r\n            const ctx = canvas.getContext('2d');\r\n            if (ctx) {\r\n                const { pressure, buttons, clientX, clientY } = e;\r\n                const x = clientX - canvas.getBoundingClientRect().x;\r\n                const y = clientY - canvas.getBoundingClientRect().y;\r\n                const lineThickness = pressure || 1;\r\n\r\n                if (!pressure || !buttons) {\r\n                    prevPointerPosition.current = null;\r\n                    return;\r\n                } \r\n\r\n                if (prevPointerPosition.current) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(prevPointerPosition.current.x, prevPointerPosition.current.y);\r\n                    ctx.lineTo(x, y);\r\n                    ctx.lineWidth = lineThickness * 2;\r\n                    ctx.stroke();\r\n                }\r\n\r\n                prevPointerPosition.current = { x, y };\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePointerUp = () => (prevPointerPosition.current = null);\r\n\r\n    const canvasProps = {\r\n        ref: canvasRef,\r\n        onPointerMove: handlePointerMove,\r\n        onPointerUp: handlePointerUp,\r\n        ...canvasSize,\r\n    };\r\n\r\n    return (\r\n        <NotesContainer short={short}>\r\n            <NotesCanvas {...canvasProps}></NotesCanvas>\r\n            <FancyFrame forceUpdateProp={short} />\r\n        </NotesContainer>\r\n    );\r\n};\r\n\r\nexport default Notes;\r\n","import styled from 'styled-components';\r\n\r\nexport const RootComponentContainer = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const RootComponentWrapper = styled.div`\r\n    position: absolute;\r\n    top: 56px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: calc(100% - 64px);\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ContentContainer = styled.div<{ small?: boolean }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    max-width: 1200px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    ${props => props.small && 'align-items: center;'}\r\n`;\r\n\r\nexport const ListAndNumpadContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 32px;\r\n    }\r\n`;\r\n\r\nexport const NotesContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import styled from 'styled-components';\r\nimport { Multisize } from './DividedList';\r\n\r\nexport const DividedListContainer = styled.div<Multisize>`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n\r\n    ${props => props.small ? `\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    ` : `\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n    `}\r\n`;\r\n\r\nexport const DividedListWrapper = styled.div<Multisize>`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    ${props => props.small && 'flex-direction: column;'}\r\n`;\r\n\r\nexport const DividedListSublistContainer = styled.div<{ small?: boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    ${props => props.small ? `\r\n        width: 100%;\r\n        padding: 16px;\r\n        box-sizing: border-box;\r\n    ` : `\r\n        width: 40%;\r\n        max-width: 600px;\r\n        margin: 16px;\r\n    `}\r\n\r\n    & > :not(:last-child) {\r\n        margin-bottom: 8px;\r\n    }\r\n`;\r\n\r\nexport interface DividerProps {\r\n    color: string;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nexport const Divider = styled.div<DividerProps & Multisize>`\r\n    border: 1px solid ${props => props.color};\r\n    border-radius: 50%;\r\n    opacity: 0.5;\r\n    margin-bottom: 10px;\r\n\r\n    ${props => props.small ? `\r\n        height: 0;\r\n        margin: 16px;\r\n    ` : `\r\n        width: 0;\r\n        margin-top: 56px;\r\n\r\n        ${props.marginTopOverride ? `margin-top: ${props.marginTopOverride}px;` : ''}\r\n        ${props.marginBottomOverride ? `margin-bottom: ${props.marginBottomOverride}px;` : ''}\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useMediaQuery, Typography } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { DividedListContainer, DividedListWrapper, Divider, DividedListSublistContainer } from './style';\r\n\r\nexport interface Multisize {\r\n    small: boolean;\r\n}\r\n\r\nexport interface DividedListProps {\r\n    titles: string[];\r\n    children: { 0: React.ReactElement<unknown & Multisize> } & Array<React.ReactElement<unknown & Multisize>>;\r\n    marginTopOverride?: string;\r\n    marginBottomOverride?: string;\r\n}\r\n\r\nconst DividedList = ({ titles, children, marginBottomOverride, marginTopOverride }: DividedListProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <DividedListContainer small={small}>\r\n            <DividedListWrapper small={small}>\r\n                <DividedListSublistContainer small={small}>\r\n                    <Typography variant=\"h5\">{titles[0]}</Typography>\r\n                    {React.cloneElement(children[0], { small })}\r\n                </DividedListSublistContainer>\r\n                {children.slice(1).map((child, id) => (\r\n                    <React.Fragment key={child.key || id}>\r\n                        <Divider color={theme.palette.secondary.main} small={small} marginTopOverride={marginTopOverride} marginBottomOverride={marginBottomOverride} />\r\n                        <DividedListSublistContainer small={small}>\r\n                            <Typography variant=\"h5\">{titles[id + 1]}</Typography>\r\n                            {React.cloneElement(child, { small })}\r\n                        </DividedListSublistContainer>\r\n                    </React.Fragment>\r\n                ))}\r\n            </DividedListWrapper>\r\n        </DividedListContainer>\r\n    );\r\n};\r\n\r\nexport default DividedList;\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :not(:last-child) {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Delete } from '@material-ui/icons';\r\nimport { Character } from '../../redux/types';\r\nimport { updateCharacterMaxHp, deleteCharacter } from '../../redux/actions/characters';\r\nimport { SavedCharacterListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateCharacterMaxHp: typeof updateCharacterMaxHp;\r\n    deleteCharacter: typeof deleteCharacter;\r\n}\r\n\r\nexport interface SavedCharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst SavedCharacterListItem: React.FC<SavedCharacterListItemProps & DispatchProps> = ({ character, updateCharacterMaxHp, deleteCharacter }) => {\r\n    const [maxHp, setMaxHp] = useState<string>(character.maxHitPoints.toString());\r\n    const [isDialogOpen, setIsDialogOpen] = useState<boolean>(false);\r\n\r\n    const openConfirmationDialog = () => setIsDialogOpen(true);\r\n    const closeConfirmationDialog = () => setIsDialogOpen(false);\r\n\r\n    const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { id } = character;\r\n        const { value } = e.target;\r\n\r\n        setMaxHp(value);\r\n        updateCharacterMaxHp(id, parseInt(value) || 0);\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        const { id } = character;\r\n        deleteCharacter(id);\r\n        closeConfirmationDialog();\r\n    };\r\n\r\n    const { name, avatarUrl } = character;\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedCharacterListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <TextField label=\"Max HP\" type=\"number\" value={maxHp} onChange={onInputChange} style={{ width: '64px' }} />\r\n                <IconButton onClick={openConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedCharacterListItemContainer>\r\n            <Dialog open={isDialogOpen} onClose={closeConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved characters. You will only be able to undo this by adding this character again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateCharacterMaxHp, deleteCharacter })(SavedCharacterListItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addCharacterByUrl } from '../../redux/actions/characters';\r\nimport { State, Character } from '../../redux/types';\r\nimport { SavedCharacterListItem } from '../SavedCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCharacterByUrl: (url: string, maxHitPoints: number) => void;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small?: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, characters, addCharacterByUrl }) => {\r\n    const [isNewCharacterDialogOpen, setIsNewCharacterDailogOpen] = useState<boolean>(false);\r\n    const [characterURL, setCharacterURL] = useState<string>('');\r\n    const [characterMaxHitPoints, setCharacterMaxHitPoints] = useState<string>('');\r\n\r\n    const openNewCharacterDialog = () => setIsNewCharacterDailogOpen(true);\r\n    const closeNewCharacterDialog = () => setIsNewCharacterDailogOpen(false);\r\n\r\n    const handleCharacterURLChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterURL(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setCharacterMaxHitPoints(e.target.value);\r\n\r\n    const handleImportConfirmed = () => {\r\n        closeNewCharacterDialog();\r\n        addCharacterByUrl(characterURL, parseInt(characterMaxHitPoints) || 0);\r\n        setCharacterURL('');\r\n        setCharacterMaxHitPoints('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <SavedCharacterListItem key={c.id} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved characters.</Typography>\r\n            }\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewCharacterDialog}>Add character</Button>\r\n            <Dialog open={isNewCharacterDialogOpen} onClose={closeNewCharacterDialog}>\r\n                <DialogTitle>Import new character from D&D Beyond</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Paste a link to the character you want to add in the input field below. Make sure the character privacy is set to \"Public\", otherwise it will not be imported.\r\n                        <br /> <br />\r\n                        Optionally, specify character's maximum hit points. You will be able to change them later.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Character URL\" value={characterURL} onChange={handleCharacterURLChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={characterMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewCharacterDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleImportConfirmed} color=\"primary\" variant=\"contained\" disabled={!characterURL}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.characters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCharacterByUrl })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const SavedNPCListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 12px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n\r\n    & > :first-child {\r\n        margin-right: 16px;\r\n    }\r\n`;\r\n\r\nexport const Grow = styled.div`\r\n    flex-grow: 1;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    IconButton,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions\r\n} from '@material-ui/core';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\nimport { NPC } from '../../redux/types';\r\nimport { updateNPCSafe, deleteNPC, UpdateNPCProps } from '../../redux/actions/npcs';\r\nimport { SavedNPCListItemContainer, Grow } from './style';\r\n\r\ninterface DispatchProps {\r\n    updateNPCSafe: (props: UpdateNPCProps) => void;\r\n    deleteNPC: typeof deleteNPC;\r\n}\r\n\r\nexport interface SavedNPCListItemProps {\r\n    npc: NPC;\r\n}\r\n\r\nconst SavedNPCListItem: React.FC<SavedNPCListItemProps & DispatchProps> = ({ npc, updateNPCSafe, deleteNPC }) => {\r\n    const { name, avatarUrl, maxHitPoints } = npc;\r\n\r\n    const [isEditDialogOpen, setIsEditDialogOpen] = useState<boolean>(false);\r\n    const [isDeleteConfirmationDialogOpen, setIsDeleteConfirmationDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>(name);\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>(maxHitPoints.toString());\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>(avatarUrl || '');\r\n\r\n    const openEditDialog = () => setIsEditDialogOpen(true);\r\n    const closeEditDialog = () => setIsEditDialogOpen(false);\r\n\r\n    const openDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(true);\r\n    const closeDeleteConfirmationDialog = () => setIsDeleteConfirmationDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleEditConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        updateNPCSafe({\r\n            originalNPC: npc,\r\n            updatedNPC: { name: NPCName, avatarUrl: NPCAvatarUrl, maxHitPoints },\r\n        });\r\n        closeEditDialog();\r\n    };\r\n\r\n    const handleDeletionConfirmed = () => {\r\n        closeDeleteConfirmationDialog();\r\n        deleteNPC(npc);\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <SavedNPCListItemContainer>\r\n                <Avatar variant=\"rounded\" src={avatarUrl} />\r\n                <Typography variant=\"h6\">{name}</Typography>\r\n                <Grow />\r\n                <IconButton onClick={openEditDialog}>\r\n                    <Edit />\r\n                </IconButton>\r\n                <IconButton onClick={openDeleteConfirmationDialog}>\r\n                    <Delete />\r\n                </IconButton>\r\n            </SavedNPCListItemContainer>\r\n            <Dialog open={isEditDialogOpen} onClose={closeEditDialog}>\r\n                <DialogTitle>Edit {name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Change name, max hit points or avatar url of your NPC.</DialogContentText>\r\n                    <TextField fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeEditDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleEditConfirmed} color=\"primary\" variant=\"contained\">Save</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isDeleteConfirmationDialogOpen} onClose={closeDeleteConfirmationDialog}>\r\n                <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>This will remove them from your list of saved NPCs. You will only be able to undo this by creating this NPC again.</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeDeleteConfirmationDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleDeletionConfirmed} color=\"primary\" variant=\"contained\">Delete</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default connect(null, { updateNPCSafe, deleteNPC })(SavedNPCListItem);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button, Typography } from '@material-ui/core';\r\nimport { addNPCSafe } from '../../redux/actions/npcs';\r\nimport { State, NPC } from '../../redux/types';\r\nimport { SavedNPCListItem } from '../SavedNPCListItem';\r\n\r\ninterface StateProps {\r\n    npcs: NPC[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    addNPCSafe: (npc: NPC) => void;\r\n}\r\n\r\nexport interface SavedCharactersListProps {\r\n    small?: boolean;\r\n}\r\n\r\nconst SavedCharactersList: React.FC<SavedCharactersListProps & StateProps & DispatchProps> = ({ small, npcs, addNPCSafe }) => {\r\n    const [isNewNPCDialogOpen, setIsNewNPCDialogOpen] = useState<boolean>(false);\r\n    const [NPCName, setNPCName] = useState<string>('');\r\n    const [NPCMaxHitPoints, setNPCMaxHitPoints] = useState<string>('');\r\n    const [NPCAvatarUrl, setNPCAvatarUrl] = useState<string>('');\r\n\r\n    const openNewNPCDialog = () => setIsNewNPCDialogOpen(true);\r\n    const closeNewNPCDialog = () => setIsNewNPCDialogOpen(false);\r\n\r\n    const handleNPCNameChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCName(e.target.value);\r\n    const handleMaxHitPointsChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCMaxHitPoints(e.target.value);\r\n    const handleNpcAvatarUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => setNPCAvatarUrl(e.target.value); \r\n\r\n    const handleNewNPCConfirmed = () => {\r\n        const maxHitPoints = parseInt(NPCMaxHitPoints) || 0;\r\n        addNPCSafe({ name: NPCName, maxHitPoints, avatarUrl: NPCAvatarUrl });\r\n\r\n        closeNewNPCDialog();\r\n        setNPCName('');\r\n        setNPCMaxHitPoints('');\r\n        setNPCAvatarUrl('');\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {npcs.length > 0\r\n                ? npcs.map(c => <SavedNPCListItem key={c.name} npc={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved NPCs.</Typography>\r\n            }\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={openNewNPCDialog}>Add NPC</Button>\r\n            <Dialog open={isNewNPCDialogOpen} onClose={closeNewNPCDialog}>\r\n                <DialogTitle>Create new NPC</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Choose a name for your NPC and specify maximum hit points. Optionally, specify an avatar url or pick one of the default avatars.\r\n                        <br /> <br />\r\n                        It is not possible to have several NPCs with the same name.\r\n                    </DialogContentText>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"NPC Name\" value={NPCName} onChange={handleNPCNameChange} />\r\n                    <TextField fullWidth type=\"number\" margin=\"dense\" label=\"Max Hit Points\" value={NPCMaxHitPoints} onChange={handleMaxHitPointsChange} />\r\n                    <TextField fullWidth margin=\"dense\" label=\"Avatar URL\" value={NPCAvatarUrl} onChange={handleNpcAvatarUrlChange} />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={closeNewNPCDialog} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={handleNewNPCConfirmed} color=\"primary\" variant=\"contained\" disabled={!NPCName || !NPCMaxHitPoints}>Create</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    npcs: (state && state.npcs) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNPCSafe })(SavedCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\nexport const NewEncCharacterListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, isNaN } from 'lodash/fp';\r\nimport { useTheme, useMediaQuery, Checkbox, Paper, Typography, TextField } from '@material-ui/core';\r\nimport { Character, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addCharacterToEncounter, removeCharacterFromEncounter, updateCharacterInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncCharacterListItemContainer } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addCharacterToEncounter: typeof addCharacterToEncounter;\r\n    removeCharacterFromEncounter: typeof removeCharacterFromEncounter;\r\n    updateCharacterInitiative: typeof updateCharacterInitiative;\r\n}\r\n\r\nexport interface NewEncCharacterListItemProps {\r\n    character: Character;\r\n}\r\n\r\nconst NewEncCharacterListItem = ({\r\n    character,\r\n    encounter,\r\n    addCharacterToEncounter,\r\n    removeCharacterFromEncounter,\r\n    updateCharacterInitiative,\r\n}: NewEncCharacterListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const isCharacterSelected = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        return Object.keys(encounter.characters).some(key => encounter.characters[parseInt(key)].name === character.name);\r\n    }, [character, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!isCharacterSelected) {\r\n            setInitiative('');\r\n        }\r\n    }, [isCharacterSelected]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.characters).find(k => encounter.characters[parseInt(k)].name === character.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleCheckboxClick = () => {\r\n        if (isCharacterSelected) {\r\n            removeCharacterFromEncounter(character);\r\n            setInitiative('');\r\n        } else {\r\n            addCharacterToEncounter(character);\r\n\r\n            const initiativeInt = parseInt(initiative);\r\n            if (!isNaN(initiativeInt)) {\r\n                updateCharacterInitiative(character, initiativeInt);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateCharacterInitiative(character, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !isCharacterSelected,\r\n        label: isCharacterSelected ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncCharacterListItemContainer>\r\n                <Checkbox disabled={!encounter} checked={isCharacterSelected} color=\"primary\" onClick={handleCheckboxClick} />\r\n                <Typography variant={small ? 'body1' : 'h6'}>{character.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n            </NewEncCharacterListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addCharacterToEncounter, removeCharacterFromEncounter, updateCharacterInitiative })(NewEncCharacterListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, Character } from '../../redux/types';\r\nimport { NewEncCharacterListItem } from '../NewEncCharacterListItem';\r\n\r\ninterface StateProps {\r\n    characters: Character[];\r\n}\r\n\r\nconst NewEncCharactersList = ({ characters }: StateProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            {characters.length > 0\r\n                ? characters.map(c => <NewEncCharacterListItem key={c.id} character={c} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved characters.</Typography>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    characters: (state && state.characters) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncCharactersList);\r\n","import styled from 'styled-components';\r\nimport { Toolbar } from '@material-ui/core';\r\nimport { Palette } from '@material-ui/core/styles/createPalette';\r\n\r\nexport const NewEncNPCListItemContainer = styled(Toolbar)`\r\n    && {\r\n        padding: 0 6px;\r\n        min-height: 56px;\r\n        height: 56px;\r\n    }\r\n`;\r\n\r\nexport interface NewEncNPCCounterProps {\r\n    palette: Palette;\r\n    children: number | null;\r\n}\r\n\r\nexport const NewEncNPCCounter = styled.div<NewEncNPCCounterProps>`\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 12px;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\r\n    color: white;\r\n    background-color: white;\r\n    cursor: pointer;\r\n    user-select: none;\r\n\r\n    transition: background-color 300ms, border-color 300ms;\r\n\r\n    ${props => props.children ? `\r\n        background-color: ${props.palette.primary.main};\r\n        border: 2px solid rgba(0, 0, 0, ${props.palette.primary.main});\r\n    ` : `\r\n        border: 2px solid rgba(0, 0, 0, 0.54);\r\n    `}\r\n`;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { keys, reduce, isNaN } from 'lodash/fp';\r\nimport { Paper, Typography, TextField, IconButton, useTheme, useMediaQuery } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { NPC, State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative } from '../../redux/actions/encounter';\r\nimport { NewEncNPCListItemContainer, NewEncNPCCounter } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    addNPCToEncounter: typeof addNPCToEncounter;\r\n    removeNPCFromEncounter: typeof removeNPCFromEncounter;\r\n    updateNPCInitiative: typeof updateNPCInitiative;\r\n}\r\n\r\nexport interface NewEncNPCListItemProps {\r\n    npc: NPC;\r\n}\r\n\r\nconst NewEncNPCListItem = ({ npc, encounter, addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative }: NewEncNPCListItemProps & StateProps & DispatchProps) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [initiative, setInitiative] = useState('');\r\n\r\n    const addedNPCCount = useMemo(() => {\r\n        if (!encounter) {\r\n            return null;\r\n        }\r\n\r\n        const count = reduce((accumulator, encNpc) => accumulator + (encNpc.name.startsWith(npc.name) ? 1 : 0), 0, encounter.npcs);\r\n        return count === 0 ? null : count;\r\n    }, [npc, encounter]);\r\n\r\n    useEffect(() => {\r\n        if (!addedNPCCount) {\r\n            setInitiative('');\r\n        }\r\n    }, [addedNPCCount]);\r\n\r\n    useEffect(() => {\r\n        if (encounter) {\r\n            const key = keys(encounter.npcs).find(k => encounter.npcs[parseInt(k)].name === npc.name);\r\n            if (key === undefined || isNaN(parseInt(key))) {\r\n                return;\r\n            }\r\n\r\n            const savedInitiative = encounter.initiativeById[parseInt(key)];\r\n            if (savedInitiative !== undefined) {\r\n                setInitiative(savedInitiative.toString());\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleRemoveClick = () => removeNPCFromEncounter(npc);\r\n    const handleAddClick = () => {\r\n        addNPCToEncounter(npc);\r\n\r\n        const initiativeInt = parseInt(initiative);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateNPCInitiative(npc, initiativeInt);\r\n        }\r\n    };\r\n    const handleCounterClick = () => {\r\n        if (!addedNPCCount || addedNPCCount === 0) {\r\n            handleAddClick();\r\n        } else {\r\n            for (let i = 0; i < addedNPCCount; ++i) {\r\n                handleRemoveClick();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInitiativeChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { value } = e.target;\r\n        setInitiative(value);\r\n\r\n        const initiativeInt = parseInt(value);\r\n        if (!isNaN(initiativeInt)) {\r\n            updateNPCInitiative(npc, initiativeInt);\r\n        }\r\n    };\r\n\r\n    const textFieldProps = {\r\n        disabled: !addedNPCCount,\r\n        label: !!addedNPCCount ? 'Initiative' : '',\r\n        type: 'number',\r\n        value: initiative,\r\n        onChange: handleInitiativeChanged,\r\n        style: {\r\n            width: '64px',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Paper elevation={3} style={{ width: '100%', height: '56px' }}>\r\n            <NewEncNPCListItemContainer>\r\n                <NewEncNPCCounter palette={theme.palette} onClick={handleCounterClick}>\r\n                    {addedNPCCount}\r\n                </NewEncNPCCounter>\r\n                <Typography variant={small ? 'body1' : 'h6'}>{npc.name}</Typography>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <TextField {...textFieldProps} />\r\n                <IconButton size=\"small\" onClick={handleRemoveClick} disabled={!addedNPCCount}>\r\n                    <Remove />\r\n                </IconButton>\r\n                <IconButton size=\"small\" onClick={handleAddClick}>\r\n                    <Add />\r\n                </IconButton>\r\n            </NewEncNPCListItemContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: (state && state.encounter) || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNPCToEncounter, removeNPCFromEncounter, updateNPCInitiative })(NewEncNPCListItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport { State, NPC } from '../../redux/types';\r\nimport { NewEncNPCListItem } from '../NewEncNPCListItem';\r\n\r\ninterface StateProps {\r\n    npcs: NPC[];\r\n}\r\n\r\nconst NewEncNPCsList = ({ npcs }: StateProps) => {\r\n    return (\r\n        <React.Fragment>\r\n            {npcs.length > 0\r\n                ? npcs.map(n => <NewEncNPCListItem key={n.name} npc={n} />)\r\n                : <Typography variant=\"body1\">Currently you don't have any saved NPCs.</Typography>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    npcs: (state && state.npcs) || [],\r\n});\r\n\r\nexport default connect(mapStateToProps)(NewEncNPCsList);\r\n","import styled from 'styled-components';\r\n\r\nexport const TextNotesContainer = styled.div<{ rows: string; fullWidth?: boolean }>`\r\n    position: relative;\r\n    width: ${props => props.fullWidth ? '98vw' : '600px'};\r\n    height: ${props => parseInt(props.rows) * 19 + 33}px;\r\n    margin-top: 8px;\r\n`;\r\n\r\nexport const TextNotesTextFieldWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: calc(100% - 24px);\r\n    height: calc(100% - 32px);\r\n    margin: 12px 12px 20px 12px;\r\n`;\r\n","import React, { useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TextField } from '@material-ui/core';\r\nimport { State } from '../../redux/types';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { updateTextNotes } from '../../redux/actions/encounter';\r\nimport { SquareFrame } from '../Frame';\r\nimport { TextNotesContainer, TextNotesTextFieldWrapper } from './style';\r\n\r\ninterface StateProps {\r\n    encounter: EncounterState | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n    updateTextNotes: typeof updateTextNotes;\r\n}\r\n\r\nexport interface TextNotesProps {\r\n    rows: string;\r\n    fullWidth?: boolean;\r\n}\r\n\r\nconst TextNotes: React.FC<TextNotesProps & StateProps & DispatchProps> = ({ rows, fullWidth, encounter, updateTextNotes }) => {\r\n    const notesValue = useMemo(() => {\r\n        if (!encounter) {\r\n            return '';\r\n        }\r\n\r\n        const key = encounter.selectedEntityKey || encounter.currentTurnKey;\r\n        return encounter.textNotesByKey[key] || '';\r\n    }, [encounter]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (encounter) {\r\n            const key = encounter.selectedEntityKey || encounter.currentTurnKey;\r\n            updateTextNotes(key, e.target.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TextNotesContainer rows={rows} fullWidth={fullWidth}>\r\n            <TextNotesTextFieldWrapper>\r\n                <TextField multiline rows={rows} style={{ width: '100%' }} value={notesValue} onChange={handleChange} />\r\n            </TextNotesTextFieldWrapper>\r\n            <SquareFrame forceUpdateProp={rows} />\r\n        </TextNotesContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateTextNotes })(TextNotes);\r\n","import styled from 'styled-components';\r\n\r\nexport interface ImageProps {\r\n    opacity: number;\r\n    src?: string;\r\n}\r\n\r\nexport const Image = styled.div<ImageProps>`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: ${props => props.opacity};\r\n    background-image: url(\"${props => props.src}\");\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n`;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Image } from './style';\r\n\r\nexport interface AnimatedImageProps {\r\n    src?: string;\r\n    transitionDuration?: number;\r\n}\r\n\r\nconst AnimatedImage: React.FC<AnimatedImageProps> = ({ src, transitionDuration = 100 }) => {\r\n    const firstImageRef = useRef<HTMLDivElement | null>(null);\r\n    const secondImageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n    const [opacity, setOpacity] = useState(1);\r\n    const [firstImageSrc, setFirstImageSrc] = useState(src);\r\n    const [secondImageSrc, setSecondImageSrc] = useState<string | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        const { current: firstImage } = firstImageRef;\r\n        const { current: secondImage } = secondImageRef;\r\n        let timeoutId: number | null = null;\r\n        if (firstImage && secondImage) {\r\n            firstImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            secondImage.style.transition = `opacity ${transitionDuration}ms`;\r\n            setSecondImageSrc(src);\r\n            window.requestAnimationFrame(() => {\r\n                setOpacity(0);\r\n                timeoutId = setTimeout(() => {\r\n                    firstImage.style.transition = '';\r\n                    secondImage.style.transition = '';\r\n                    setFirstImageSrc(src);\r\n                    window.requestAnimationFrame(() => {\r\n                        setOpacity(1);\r\n                    });\r\n                }, transitionDuration);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            if (timeoutId) {\r\n                window.clearTimeout(timeoutId);\r\n            }\r\n        };\r\n    }, [src, transitionDuration]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Image opacity={opacity} src={firstImageSrc} ref={firstImageRef} />\r\n            <Image opacity={1 - opacity} src={secondImageSrc} ref={secondImageRef} />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AnimatedImage;\r\n","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTheme, useMediaQuery, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Typography, Menu, MenuItem } from '@material-ui/core';\r\nimport { People, Close, Send, MoreVert, Edit, HighlightOff, Fullscreen, FullscreenExit, TouchApp, Keyboard } from '@material-ui/icons';\r\nimport { State } from '../../redux/types';\r\nimport { closeErrorDialog } from '../../redux/actions/ui';\r\nimport { Navbar } from '../Navbar';\r\nimport { Tooltip } from '../Tooltip';\r\nimport { EntityList } from '../EntityList';\r\nimport { Numpad } from '../Numpad';\r\nimport { Notes } from '../Notes';\r\nimport { RootComponentContainer, RootComponentWrapper, ContentContainer, ListAndNumpadContainer, NotesContainer } from './style';\r\nimport { DividedList } from '../DividedList';\r\nimport { SavedCharactersList } from '../SavedCharactersList';\r\nimport { SavedNPCsList } from '../SavedNPCsList';\r\nimport { NewEncCharactersList } from '../NewEncCharactersList';\r\nimport { NewEncNPCsList } from '../NewEncNPCsList';\r\nimport { resetEncounter, createEncounter, nextTurn, prevTurn } from '../../redux/actions/encounter';\r\nimport { EncounterState } from '../../redux/reducers/encounter';\r\nimport { TextNotes } from '../TextNotes';\r\nimport { AnimatedImage } from '../AnimatedImage';\r\n\r\nexport interface StateProps {\r\n    isErrorDialogOpen: boolean;\r\n    errorMessage?: JSX.Element;\r\n    encounter: EncounterState | null;\r\n}\r\n\r\nexport interface DispatchProps {\r\n    closeErrorDialog: typeof closeErrorDialog;\r\n    resetEncounter: typeof resetEncounter;\r\n    createEncounter: typeof createEncounter;\r\n    nextTurn: typeof nextTurn;\r\n    prevTurn: typeof prevTurn;\r\n}\r\n\r\nconst RootComponent: React.FC<StateProps & DispatchProps> = ({\r\n    isErrorDialogOpen,\r\n    errorMessage,\r\n    encounter,\r\n    closeErrorDialog,\r\n    resetEncounter,\r\n    createEncounter,\r\n    nextTurn,\r\n    prevTurn,\r\n}) => {\r\n    const theme = useTheme();\r\n    const small = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const short = useMediaQuery('(max-height: 830px)');\r\n\r\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLElement | null>(null);\r\n\r\n    const [isCharacterDialogOpen, setIsCharacterDialogOpen] = useState(false);\r\n    const [isNewEncounterDialogOpen, setIsNewEncounterDialogOpen] = useState(false);\r\n    const [isCreatingNewEncounter, setIsCreatingNewEncounter] = useState(false);\r\n    const [isFullscreen, setIsFullscreen] = useState(false);\r\n    const [isKeyboardMode, setIsKeyboardMode] = useState(false);\r\n\r\n    const canNewEncounterBeCreated = useMemo(() => {\r\n        if (!encounter) {\r\n            return false;\r\n        }\r\n\r\n        const { characters, npcs, initiativeById } = encounter;\r\n        const allCharactersHaveInitiative = Object.keys(characters).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n        const allNpcsHaveInitiative = Object.keys(npcs).every(id => Object.keys(initiativeById).some(id2 => id === id2));\r\n\r\n        return allCharactersHaveInitiative && allNpcsHaveInitiative && Object.keys(initiativeById).length > 0;\r\n    }, [encounter]);\r\n\r\n    const currentBackgroundUrl = useMemo(() => {\r\n        if (!encounter) {\r\n            return undefined;\r\n        }\r\n\r\n        const { characters, currentTurnKey } = encounter;\r\n        const currentCharacter = characters[currentTurnKey];\r\n        if (currentCharacter) {\r\n            return currentCharacter.defaultBackdrop.largeBackdropAvatarUrl;\r\n        }\r\n\r\n        return undefined;\r\n    }, [encounter]);\r\n\r\n    const toggleFullscreen = () => {\r\n        if (isFullscreen) {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n                setIsFullscreen(false);\r\n            }\r\n        } else {\r\n            const element = document.documentElement;\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n                setIsFullscreen(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const openMenu = (event: React.MouseEvent<HTMLButtonElement>) => setMenuAnchorElement(event.currentTarget);\r\n    const closeMenu = () => setMenuAnchorElement(null);\r\n\r\n    const toggleInputMode = () => {\r\n        if (isKeyboardMode) {\r\n            setIsKeyboardMode(false);\r\n        } else {\r\n            setIsKeyboardMode(true);\r\n        }\r\n    };\r\n\r\n    const openCharacterDialog = () => setIsCharacterDialogOpen(true);\r\n    const closeCharacterDialog = () => setIsCharacterDialogOpen(false);\r\n\r\n    const openNewEncounterDialog = () => {\r\n        if (!!encounter && encounter.currentId === 1) {\r\n            setIsCreatingNewEncounter(true);\r\n        } else {\r\n            setIsCreatingNewEncounter(false);\r\n        }\r\n        setIsNewEncounterDialogOpen(true);\r\n    };\r\n    const closeNewEncounterDialog = () => setIsNewEncounterDialogOpen(false);\r\n\r\n    const handleNewEncounterCancel = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            resetEncounter();\r\n        }\r\n    };\r\n\r\n    const handleNewEncounterOk = () => {\r\n        closeNewEncounterDialog();\r\n        if (isCreatingNewEncounter) {\r\n            createEncounter();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <RootComponentContainer>\r\n            {small ? null : <AnimatedImage src={currentBackgroundUrl} />}\r\n            <Navbar>\r\n                <IconButton color=\"inherit\" onClick={openMenu}>\r\n                    <MoreVert />\r\n                </IconButton>\r\n                {(encounter && encounter.currentId > 1) ? (\r\n                    <React.Fragment>\r\n                        <Typography variant=\"h5\">EKEk {encounter.currentRound}</Typography>\r\n                        <div style={{ flex: '1' }} />\r\n                        <Tooltip title=\"Previous turn\">\r\n                            <IconButton color=\"inherit\" onClick={prevTurn}>\r\n                                <Send style={{ transform: 'rotateY(180deg)', opacity: '0.7' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Button disableElevation variant=\"contained\" color=\"primary\" endIcon={<Send />} onClick={nextTurn}>Next turn</Button>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <Typography variant=\"h5\">No encounter</Typography>\r\n                )}\r\n            </Navbar>\r\n            <Menu anchorEl={menuAnchorElement} open={!!menuAnchorElement} onClose={closeMenu}>\r\n                <MenuItem onClick={() => { openCharacterDialog(); closeMenu(); }}>\r\n                    <People color=\"secondary\" style={{ marginRight: '16px' }} /> Saved characters\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { openNewEncounterDialog(); closeMenu(); }}>\r\n                    <Edit color=\"secondary\" style={{ marginRight: '16px' }} /> {!!encounter && encounter.currentId === 1 ? 'Create new encounter' : 'Edit current encounter'}\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { resetEncounter(); closeMenu(); }} disabled={!!encounter && encounter.currentId === 1}>\r\n                    <HighlightOff color=\"secondary\" style={{ marginRight: '16px' }} /> Clear current encounter\r\n                </MenuItem>\r\n                <MenuItem onClick={() => { toggleFullscreen(); closeMenu(); }}>\r\n                    {isFullscreen ? <FullscreenExit color=\"secondary\" style={{ marginRight: '16px' }} /> : <Fullscreen color=\"secondary\" style={{ marginRight: '16px' }} />} Toggle fullscreen\r\n                </MenuItem>\r\n                {small ? null : (\r\n                    <MenuItem onClick={toggleInputMode}>\r\n                        {isKeyboardMode ? <TouchApp color=\"secondary\" style={{ marginRight: '16px' }} /> : <Keyboard color=\"secondary\" style={{ marginRight: '16px' }} />} \r\n                        {isKeyboardMode ? 'Enable touchscreen mode' : 'Enable keyboard mode'}\r\n                    </MenuItem>\r\n                )}\r\n            </Menu>\r\n            <RootComponentWrapper>\r\n                <ContentContainer small={small}>\r\n                    {small\r\n                        ? (\r\n                            <React.Fragment>\r\n                                <EntityList fullWidth fullScreen={isFullscreen} />\r\n                                <NotesContainer>\r\n                                    <TextNotes fullWidth rows={isFullscreen ? '4' : '2'} />\r\n                                </NotesContainer>\r\n                            </React.Fragment>\r\n                        )\r\n                        : (\r\n                            <React.Fragment>\r\n                                <ListAndNumpadContainer>\r\n                                    <EntityList short={short} />\r\n                                    {isKeyboardMode ? null : <Numpad short={short} />}\r\n                                </ListAndNumpadContainer>\r\n                                <NotesContainer>\r\n                                    {isKeyboardMode\r\n                                        ? <TextNotes rows=\"8\" />\r\n                                        : <Notes short={short} />\r\n                                    }\r\n                                </NotesContainer>\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                </ContentContainer>\r\n            </RootComponentWrapper>\r\n            <Dialog fullScreen open={isCharacterDialogOpen} onClose={closeCharacterDialog}>\r\n                <Navbar color=\"primary\">\r\n                    <IconButton color=\"inherit\" onClick={closeCharacterDialog}>\r\n                        <Close />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" style={{ marginLeft: '8px' }}>\r\n                        Saved Characters\r\n                    </Typography>\r\n                </Navbar>\r\n                <DividedList titles={['Characters', 'NPCs']} marginBottomOverride=\"60\">\r\n                    <SavedCharactersList />\r\n                    <SavedNPCsList />\r\n                </DividedList>\r\n            </Dialog>\r\n            <Dialog maxWidth=\"lg\" fullWidth={!small} fullScreen={small} open={isNewEncounterDialogOpen}>\r\n                {small ? (\r\n                    <Navbar color=\"primary\">\r\n                        <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                            {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                        </Typography>\r\n                    </Navbar>\r\n                ) : (\r\n                    <DialogTitle>\r\n                        {isCreatingNewEncounter ? 'New encounter' : 'Edit encounter'}\r\n                    </DialogTitle>\r\n                )}\r\n                <DialogContent>\r\n                    <DividedList titles={['Characters', 'NPCs']}>\r\n                        <NewEncCharactersList />\r\n                        <NewEncNPCsList />\r\n                    </DividedList>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color=\"secondary\" onClick={handleNewEncounterCancel}>Cancel</Button>\r\n                    <Button disabled={!canNewEncounterBeCreated} variant=\"contained\" color=\"primary\" onClick={handleNewEncounterOk}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog open={isErrorDialogOpen} onClose={closeErrorDialog}>\r\n                <DialogTitle>Error</DialogTitle>\r\n                <DialogContent>\r\n                    {errorMessage ? <DialogContentText>{errorMessage}</DialogContentText> : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={closeErrorDialog}>OK</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </RootComponentContainer>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    isErrorDialogOpen: (state.ui && state.ui.errorDialog.isOpen) || false,\r\n    errorMessage: state.ui && state.ui.errorDialog.message,\r\n    encounter: state.encounter || null,\r\n});\r\n\r\nexport default connect(mapStateToProps, { closeErrorDialog, resetEncounter, createEncounter, nextTurn, prevTurn })(RootComponent);\r\n","import React from 'react';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { persistor, store } from './redux';\r\nimport { RootComponent, LoadingView } from './components';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#b13735',\r\n        },\r\n        secondary: {\r\n            main: '#555',\r\n        },\r\n    },\r\n    typography: {\r\n        fontFamily: 'Cairo',\r\n    },\r\n    breakpoints: {\r\n        values: {\r\n            xs: 0,\r\n            sm: 500,\r\n            md: 960,\r\n            lg: 1280,\r\n            xl: 1920,\r\n        },\r\n    },\r\n});\r\n\r\nconst App = () => (\r\n    <ThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <PersistGate loading={<LoadingView />} persistor={persistor}>\r\n                <RootComponent />\r\n            </PersistGate>\r\n        </Provider>\r\n    </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(<App />);\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}